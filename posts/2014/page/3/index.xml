<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/posts/2014/</id>
    <updated>2014-12-24T16:02:04+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/</id>
        <title>Página Dashboard de Apache Tapestry</title>
        <updated>2015-05-27T23:00:00+02:00</updated>
        <published>2014-06-13T17:37:24+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<p>Con la versión 5.4 de Tapestry las <a href="https://elblogdepicodev.blogspot.com.es/2012/08/paginas-pagecatalog-servicestatus-e.html">páginas PageCatalog, ServiceStatus e HibernateStaticstis</a> han sido unificadas en la página T5Dashboard por lo que ahora en una sóla página tendremos toda la información. Una de las características más importantes de Tapestry es ser muy informativo proporcionando mucha y descriptiva información, esto se nota con la página de <a href="https://elblogdepicodev.blogspot.com.es/2013/07/personalizar-la-pagina-de-informe-de-error.html">informe de error incluso para las peticiones ajax</a>, los mensajes de logging y con estás páginas de información de estado.</p>
<p>La página <a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/corelib/pages/T5Dashboard.html">T5Dashboard</a> está incluida en el propio core de <a href="http://tapestry.apache.org/">Apache Tapestry</a> y disponible en todas las aplicaciones en modo desarrollo y accediendo de forma local al servidor de aplicaciones. Si se incluye en la aplicación la dependencia tapestry-hibernate además en T5Dashboard podremos ver estadísticas de uso de Hibernate. La página T5Dashboard nos puede resultar muy útil ya que nos proporciona mucha información y alguna acción interesante.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/images/tapestry-dashboard-1_hubfb8d8886dece48d49e065fa5374aa71_59968_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Estado de la aplicación Tapestry"><img src="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/images/tapestry-dashboard-1_hubfb8d8886dece48d49e065fa5374aa71_59968_300x200_fit_box_3.png" width="300" height="138" alt="Estado de la aplicación Tapestry" title="Estado de la aplicación Tapestry"  class="lozad "></a></p>
</figure>
</div>
<p>Como se ve en la imagen podemos ver las páginas disponibles, cargadas, cuanto tiempo llevó construirlas, que complejidad y por cuantos componentes están formadas. Y algo que nos resultará muy útil es provocar la acción de cargar todas las páginas quizá después de hacer un despliegue para evitar tiempos de inicialización en las primeras peticiones pero tan o más importante nos permitirá descubrir errores en los archivos tml de los componentes ¿cuantas veces te ha ocurrido que en un php, jsp, gsp, &hellip; hasta que no se usa esa plantilla no descubres un error digamos &ldquo;de compilación&rdquo; (variable con nombre que no existe, atributo mal entrecomillado, &hellip;) ? Seguramente como a mi, muchas. Los archivos de plantilla tml son xml válido con lo que si no están bien formados se nos notificará del error, nuevamente ¿te ha ocurrido alguna vez tener un php, jsp o gsp que no genera html bien balanceado? Pero también si se está usando un componente que no existe, varios componentes con el mismo nombre, &hellip; . Aunque parezca que no estos tipos de errores se pueden producir con relativa facilidad tanto en desarrollo y con mayor peligro si tenemos un flujo de trabajo con varias ramas donde vamos mergeando los cambios de trunk a la rama que se despliega en producción y nos ocurren conflictos en los merges que tenemos que resolver manualmente con la posibilidad de cometer un error.</p>
<p>En otra sección también podemos ver el estado de los servicios que puede ser:</p>
<ul>
<li>Builtin: A servicio fundamentar que existe incluso antes de la creación del registro.</li>
<li>Defined: El servicio está definido pero aún no ha sido referenciado.</li>
<li>Virtual: El servicio ha sido referenciado (normalmente como ejecución de otro servicio) pero aún no ha sido hecho efectivo con una instancia del servicio. El hacerse efectivo ocurre con la primera invocación en el proxy del servicio.</li>
<li>Real: El servicio se ha hecho efectivo: se ha instanciado, las dependencias han sido inyectadas, se ha decorado con interceptores y el totalmente operacional.</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/images/tapestry-dashboard-2_hu8430a9ea5cfa5b5c6124c0efdd80306e_74535_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/images/tapestry-dashboard-2_hu8430a9ea5cfa5b5c6124c0efdd80306e_74535_300x200_fit_box_3.png" width="300" height="138"  class="lozad "></a></p>
</figure>
</div>
<p>Finalmente, en la sección HibernateStatistics podemos obtener un montón de datos que nos pueden servir para detectar situaciones anómalas en la aplicación como un gran número de sql que se lanzan en una página como podría ser en un problema de carga N+1 en una relación entre dos entidades, el estado de la cache de segundo nivel que nos permitirá optimizar las caches, la cache de queries, número de transacciones realizadas y otra gran cantidad de información.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/images/tapestry-dashboard-3_huca4080c691f8d3f148defb949f85ee44_64921_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Estadísticas de Hibernate en Tapestry"><img src="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/images/tapestry-dashboard-3_huca4080c691f8d3f148defb949f85ee44_64921_300x200_fit_box_3.png" width="300" height="138" alt="Estadísticas de Hibernate en Tapestry" title="Estadísticas de Hibernate en Tapestry"  class="lozad "></a></p>
</figure>
</div>
<p>Para que hibernate genere estadísticas es necesario indica en el archivo hibernate.cfg.xml la propiedad hibernate.generate_statistics:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE hibernate-configuration PUBLIC&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;-//Hibernate/Hibernate Configuration DTD 3.0//EN&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;http://www.hibernate.org/dtd//hibernate-configuration-3.0.dtd&#34;&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;hibernate-configuration&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;session-factory&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.connection.driver_class&#34;</span><span class="nt">&gt;</span>org.h2.Driver<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.connection.url&#34;</span><span class="nt">&gt;</span>jdbc:h2:mem:test<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.connection.username&#34;</span><span class="nt">&gt;</span>sa<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.connection.password&#34;</span><span class="nt">&gt;</span>sa<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.dialect&#34;</span><span class="nt">&gt;</span>org.hibernate.dialect.H2Dialect<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.hbm2ddl.auto&#34;</span><span class="nt">&gt;</span>update<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;hibernate.generate_statistics&#34;</span><span class="nt">&gt;</span>true<span class="nt">&lt;/property&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/session-factory&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/hibernate-configuration&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hibernate.cfg.xml</span>
    </div>
</div>
<p>Y para activar la cache de segundo nivel añadir la propiedad del proveedor de cache (hibernate.cache.provider_class) y usar en las entidades la anotación @Cache, como se indica en la <a href="https://docs.jboss.org/hibernate/orm/4.3/devguide/en-US/html/ch06.html">documentación de hibernate</a>.</p>
<p>Está página de Tapestry es similar a <a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">una que podemos crear en Grails con información similar</a>.</p>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">Libro PlugIn Tapestry</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2010/05/documentacion-sobre-apache-tapestry.html">Documentación sobre Apache Tapestry</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/06/ejecutar-apache-tapestry-en-el-servidor-de-aplicaciones-wildfly/</id>
        <title>Ejecutar Apache Tapestry en el servidor de aplicaciones WildFly</title>
        <updated>2015-05-27T23:00:00+02:00</updated>
        <published>2014-06-06T20:58:25+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/06/ejecutar-apache-tapestry-en-el-servidor-de-aplicaciones-wildfly/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/wildfly.svg" width="200" height="200" alt="WildFly" title="WildFly"  class=""></p>
</div>
<p>Los class loaders del <a href="https://picodotdev.github.io/blog-bitix/2014/02/el-servidor-de-aplicaciones-jboss-slash-wildfly/">servidor de aplicaciones JBoss/WildFly</a> habitualmente han dado algún problema en la ejecución de las aplicaciones y la carga de clases. En versiones antiguas como la 4 se podían producir conflictos entre las librerías de las aplicaciones y las librerías instaladas en el servidor ya que en <a href="http://jbossas.jboss.org/">JBoss</a> se buscaba las clases por defecto y primero en el class loader del servidor en vez de en el <em>classloader</em> de la aplicación (war). Ya en las últimas versiones como JBoss 7 y <a href="http://wildfly.org/">WildFly</a> la forma de cargar las clases es más parecido al modelo habitual que se sigue en las aplicaciones Java EE y en servidores como Tomcat buscando primero en el directorio classes WEB-INF/classes y entre las librerías de la carpeta WEB-INF/lib del archivo war. Además, con la inclusión de JBoss Modules se puede seguir un esquema OSGi con lo que incluso podríamos usar simultáneamente en el servidor diferentes versiones de la misma librería.</p>
<p>Sin embargo, a pesar de seguir el esquema estándar de buscar las clases y usar OSGi para que Tapestry encuentre los archivos que necesita, como plantillas, imágenes, literales que pueden estar embebidos en los archivos jar de librerías es necesario hacer algunas modificaciones. En una <a href="http://wiki.apache.org/tapestry/HowToRunTapestry5OnJBoss7Dot1">guía de uso de Tapestry con JBoss</a> se explica como conseguir hacer funcionar una aplicación Tapestry tanto en JBoss 7 como en WildFly 8. La solución consiste en proporcionar una clase para que encuentre correctamente los archivos que Tapestry necesita y esta clase será la que veremos en el siguiente ejemplo.</p>
<p>Con la clase que permite funcionar las aplicaciones Tapestry en JBoss/WildFly junto con un poco de configuración para el contenedor de dependencias definido en un módulo será suficiente. La clase es la siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.misc</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.net.URLConnection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.services.ClasspathURLConverter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.jboss.vfs.VFSUtils</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.jboss.vfs.VirtualFile</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WildFlyClasspathURLConverter</span> <span class="kd">implements</span> <span class="n">ClasspathURLConverter</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">WildFlyClasspathURLConverter</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">URL</span> <span class="nf">convert</span><span class="o">(</span><span class="kd">final</span> <span class="n">URL</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">url</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">url</span><span class="o">.</span><span class="na">getProtocol</span><span class="o">().</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&#34;vfs&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="kd">final</span> <span class="n">URL</span> <span class="n">realURL</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">				<span class="kd">final</span> <span class="n">String</span> <span class="n">urlString</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">				<span class="c1">// If the virtual URL involves a JAR file,&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// we have to figure out its physical URL ourselves because&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// in JBoss 7.0.2 the JAR files exploded into the VFS are empty&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// (see https://issues.jboss.org/browse/JBAS-8786).&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// Our workaround is that they are available, unexploded,&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// within the otherwise exploded WAR file.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="k">if</span> <span class="o">(</span><span class="n">urlString</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;.jar&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="c1">// An example URL:&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// &#34;vfs:/devel/jboss-as-7.1.1.Final/standalone/deployments/myapp.ear/myapp.war/WEB-INF/\&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// lib/tapestry-core-5.3.2.jar/org/apache/tapestry5/corelib/components/&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// Break the URL into its WAR part, the JAR part,&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// and the Java package part.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="kd">final</span> <span class="kt">int</span> <span class="n">warPartEnd</span> <span class="o">=</span> <span class="n">urlString</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">&#34;.war&#34;</span><span class="o">)</span> <span class="o">+</span> <span class="n">4</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">String</span> <span class="n">warPart</span> <span class="o">=</span> <span class="n">urlString</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">warPartEnd</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="kt">int</span> <span class="n">jarPartEnd</span> <span class="o">=</span> <span class="n">urlString</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">&#34;.jar&#34;</span><span class="o">)</span> <span class="o">+</span> <span class="n">4</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">String</span> <span class="n">jarPart</span> <span class="o">=</span> <span class="n">urlString</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">warPartEnd</span><span class="o">,</span> <span class="n">jarPartEnd</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">String</span> <span class="n">packagePart</span> <span class="o">=</span> <span class="n">urlString</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">jarPartEnd</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="c1">// Ask the VFS where the exploded WAR is.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="kd">final</span> <span class="n">URL</span> <span class="n">warURL</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">warPart</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">URLConnection</span> <span class="n">warConnection</span> <span class="o">=</span> <span class="n">warURL</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">VirtualFile</span> <span class="n">jBossVirtualWarDir</span> <span class="o">=</span> <span class="o">(</span><span class="n">VirtualFile</span><span class="o">)</span> <span class="n">warConnection</span><span class="o">.</span><span class="na">getContent</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">File</span> <span class="n">physicalWarDir</span> <span class="o">=</span> <span class="n">jBossVirtualWarDir</span><span class="o">.</span><span class="na">getPhysicalFile</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">String</span> <span class="n">physicalWarDirStr</span> <span class="o">=</span> <span class="n">physicalWarDir</span><span class="o">.</span><span class="na">toURI</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">					<span class="c1">// Return a &#34;jar:&#34; URL constructed from the parts&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// eg.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// &#34;jar:file:/devel/jboss-as-7.1.1.Final/standalone/tmp/vfs/deployment40a6ed1db5eabeab/\&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="c1">// myapp.war-43e2c3dfa858f4d2/WEB-INF/lib/tapestry-core-5.3.2.jar!/org/apache/tapestry5/corelib/components/&#34;.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="kd">final</span> <span class="n">String</span> <span class="n">actualJarPath</span> <span class="o">=</span> <span class="s">&#34;jar:&#34;</span> <span class="o">+</span> <span class="n">physicalWarDirStr</span> <span class="o">+</span> <span class="n">jarPart</span> <span class="o">+</span> <span class="s">&#34;!&#34;</span> <span class="o">+</span> <span class="n">packagePart</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">					<span class="k">return</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">actualJarPath</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="c1">// Otherwise, ask the VFS what the physical URL is...&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="kd">final</span> <span class="n">URLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">final</span> <span class="n">VirtualFile</span> <span class="n">virtualFile</span> <span class="o">=</span> <span class="o">(</span><span class="n">VirtualFile</span><span class="o">)</span> <span class="n">connection</span><span class="o">.</span><span class="na">getContent</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">realURL</span> <span class="o">=</span> <span class="n">VFSUtils</span><span class="o">.</span><span class="na">getPhysicalURL</span><span class="o">(</span><span class="n">virtualFile</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="n">realURL</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="kd">final</span> <span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&#34;Unable to convert URL&#34;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">url</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>WildFlyClasspathURLConverter.java</span>
    </div>
</div>
<p>La configuración adicional para el contenedor de dependencias es para que Tapestry use esta nueva clase:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppModule</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">contributeServiceOverride</span><span class="o">(</span><span class="n">MappedConfiguration</span><span class="o">&lt;</span><span class="n">Class</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">configuration</span><span class="o">,</span> <span class="nd">@Local</span> <span class="n">HibernateSessionSource</span> <span class="n">hibernateSessionSource</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">configuration</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">HibernateSessionSource</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">hibernateSessionSource</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">isServidorJBoss</span><span class="o">(</span><span class="n">ContextListener</span><span class="o">.</span><span class="na">SERVLET_CONTEXT</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">configuration</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ClasspathURLConverter</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">WildFlyClasspathURLConverter</span><span class="o">());</span>			&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">isServidorJBoss</span><span class="o">(</span><span class="n">ServletContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">String</span> <span class="n">si</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getServerInfo</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">si</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;WildFly&#34;</span><span class="o">)</span> <span class="o">||</span> <span class="n">si</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;JBoss&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppModule.java</span>
    </div>
</div>
<p>El <em>ContextListener</em> que nos permite acceder al <em>ServletContext</em> es el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.misc</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.ServletContextEvent</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.ServletContextListener</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ContextListener</span> <span class="kd">implements</span> <span class="n">ServletContextListener</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="n">ServletContext</span> <span class="n">SERVLET_CONTEXT</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">contextInitialized</span><span class="o">(</span><span class="n">ServletContextEvent</span> <span class="n">sce</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SERVLET_CONTEXT</span> <span class="o">=</span> <span class="n">sce</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">contextDestroyed</span><span class="o">(</span><span class="n">ServletContextEvent</span> <span class="n">sce</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ContextListener.java</span>
    </div>
</div>
<p>Además hemos de incluir en el proyecto un par de librerías y usar al menos la versión 16 de guava si se incluye como dependencia en el war:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span> <span class="s1">&#39;com.google.guava:guava:16.0.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">providedCompile</span> <span class="s1">&#39;org.jboss:jboss-vfs:3.2.1.Final&#39;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span> <span class="s1">&#39;org.jboss.logging:jboss-logging:3.1.4.GA&#39;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>En la <a href="https://github.com/picodotdev/elblogdepicodev/tree/master/PlugInTapestry">aplicación de ejemplo</a> también deberemos actualizar la versión de guava al menos a la versión 16. Y esta clase y configuración es suficiente para que &ldquo;mágicamente&rdquo; se solucionen los problemas de las aplicaciones Tapestry con el servidor de aplicaciones JBoss/WildFly. Si no usamos lo indicado en este artículo al acceder al acceder a la aplicación fallaría con una excepción.</p>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">Libro PlugIn Tapestry</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2010/05/documentacion-sobre-apache-tapestry.html">Documentación sobre Apache Tapestry</a></li>
<li><a href="http://wiki.apache.org/tapestry/HowToRunTapestry5OnJBoss7Dot1">http://wiki.apache.org/tapestry/HowToRunTapestry5OnJBoss7Dot1</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/</id>
        <title>Detectar problema N&#43;1 y obtener estadísticas de Hibernate con Grails</title>
        <updated>2014-06-13T16:00:00+02:00</updated>
        <published>2014-05-30T20:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/grails.svg" width="200" height="200" alt="Grails" title="Grails"  class=""></p>
</div>
<p>Una base de datos relacional guarda los datos de forma diferente al modelo orientado a objetos que utilizamos en lenguajes como <a href="https://www.oracle.com/us/technologies/java/overview/index.html">Java</a>, <a href="https://dotnet.microsoft.com/">C#</a> o <a href="https://www.python.org/">Python</a>. Los <a href="https://en.wikipedia.org/wiki/Object-relational_mapping">ORM (Object-relational mapping)</a> tratan de hacer una correspondencia entre los dos modelos, el relacional de las bases de datos y el orientado a objetos de los lenguajes. Una de las ventajas de usar en una aplicación un ORM para acceder a la base de datos es que podemos hacer una correspondencia entre los datos de una base de datos relacional y trabajar con esos datos utilizando el modelo orientado a objetos del lenguaje de programación que usemos.</p>
<p>Sin embargo, el ORM envía sentencias SQL para recuperar los datos de la base de datos relacional según vamos navegando con los métodos de acceso a otros objetos y sus relaciones. Depende de como el ORM haga las consultas para recuperar los datos de la base de datos relacional puede generar muchas SQL, producir un bajo rendimiento en la aplicación y una carga de trabajo considerable para la base de datos.</p>
<p>En los ORM es conocido el <a href="https://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue">problema N+1</a>. Consiste en lo siguiente, supongamos que tenemos dos tablas relacionadas autores y libros, y que la relación entre estas dos tablas es de 1 a N, de modo que un autor puede tener varios libros y un libro ha sido escrito por un único autor. Para recuperar todos los autores necesitaríamos una consulta y si no hacemos una join con la tabla de libros para recuperar los libros de cada autor tendríamos que hacer otra consulta  con lo que tendríamos el problema N+1 al hacer un bucle sobre los autores (1 consulta para los autores y N para los libros de cada autor).</p>
<p>El problema está en que el ORM lanza las consultas de forma automática según necesita los datos de modo que si para un autor no tiene los libros lanza una SQL para recuperarlos, como programadores llamar a un método para acceder a los libros es muy cómodo y transparente para nosotros (trabajamos solo con objetos) pero hemos de ser conscientes de las consultas que lanza el ORM porque podemos producir una situación de N+1.</p>
<p>Para evitar el problema N+1 hemos de recuperar todos los datos haciendo una única consulta, haciendo una join entre las tablas autor y libro. En <a href="http://hibernate.org/">Hibernate</a> podemos resolverlo con una consulta HQL como la siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&#34;from Autor as autor left outer join autor.libros as libro&#34;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hql.txt</span>
    </div>
</div>
<p>O con una criteria en Grails:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">Criteria</span> <span class="n">criteria</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createCriteria</span><span class="o">(</span><span class="n">Autor</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">criteria</span><span class="o">.</span><span class="na">setFetchMode</span><span class="o">(</span><span class="s2">&#34;libros&#34;</span><span class="o">,</span> <span class="n">FetchMode</span><span class="o">.</span><span class="na">EAGER</span><span class="o">);</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Criteria.groovy</span>
    </div>
</div>
<p>Pero para saber en que sitios de nuestro código debemos establecer los métodos de búsqueda EAGER necesitamos detectar los problemas N+1, con la experiencia conoceremos donde se pueden producir, otros casos se nos pueden pasar por alto y necesitaremos detectarlos. Para detectar estos problemas N+1 o para determinar si una página es muy lenta porque hace muchas consultas a la base de datos Hibernate dispone de unas estadísticas mediante las cuales podemos conocer cuantas consultas select, update, insert, conexiones, y más datos por entidad y relación&hellip; se han lanzado por haber accedido a una página. Podemos acceder a las estadísticas de Hibernate mediante el objeto <a href="https://docs.jboss.org/hibernate/orm/4.3/javadocs/org/hibernate/SessionFactory.html">SessionFactory</a> y el método <a href="https://docs.jboss.org/hibernate/orm/4.3/javadocs/org/hibernate/SessionFactory.html#getStatistics%28%29">getStatistics</a>, con ese objeto y método podemos obtener estadísticas globales y para cada una de las entidades persistidas por Hibernate.</p>
<p>En Grails podemos hacer un controlador y gsp que nos muestre esa información que podrían ser de la siguiente forma:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span><span class="lnt">93&#10;</span><span class="lnt">94&#10;</span><span class="lnt">95&#10;</span><span class="lnt">96&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kn">package</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">picodotdev</span><span class="o">.</span><span class="na">grails</span><span class="o">.</span><span class="na">controllers</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">grails.converters.JSON</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">grails.util.Environment</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.grails.domain.Autor</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.grails.log.HibernateLogger</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">HibernateController</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">sessionFactory</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">def</span> <span class="nf">doTest</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kt">def</span> <span class="n">autor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Autor</span><span class="o">(</span><span class="nl">nombre:</span><span class="s1">&#39;picodotdev&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">autor</span><span class="o">.</span><span class="na">save</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">autor</span> <span class="o">=</span> <span class="n">Autor</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">autor</span><span class="o">.</span><span class="na">id</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">autor</span><span class="o">.</span><span class="na">delete</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nf">redirect</span><span class="o">(</span><span class="nl">action:</span><span class="s1">&#39;index&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="nf">index</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="kt">def</span> <span class="n">e</span> <span class="o">=</span> <span class="n">test</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(!</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">sendError</span><span class="o">(</span><span class="n">HttpServletResponse</span><span class="o">.</span><span class="na">SC_FORBIDDEN</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">model</span> <span class="o">=</span> <span class="o">[</span><span class="nl">estadisticas:</span><span class="n">sessionFactory</span><span class="o">.</span><span class="na">statistics</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nf">render</span><span class="o">(</span><span class="nl">view:</span><span class="s1">&#39;/hibernate/index&#39;</span><span class="o">,</span> <span class="nl">model:</span><span class="n">model</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="nf">enableStatistics</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="kt">def</span> <span class="n">e</span> <span class="o">=</span> <span class="n">test</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(!</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">sendError</span><span class="o">(</span><span class="n">HttpServletResponse</span><span class="o">.</span><span class="na">SC_FORBIDDEN</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Habilitar estadístics&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">sessionFactory</span><span class="o">.</span><span class="na">statistics</span><span class="o">.</span><span class="na">setStatisticsEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">		<span class="n">redirect</span><span class="o">(</span><span class="nl">action:</span><span class="s1">&#39;index&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="nf">disableStatistics</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="kt">def</span> <span class="n">e</span> <span class="o">=</span> <span class="n">test</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(!</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">sendError</span><span class="o">(</span><span class="n">HttpServletResponse</span><span class="o">.</span><span class="na">SC_FORBIDDEN</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Deshabilitar estadísticas&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">sessionFactory</span><span class="o">.</span><span class="na">statistics</span><span class="o">.</span><span class="na">setStatisticsEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	&#10;</span></span><span class="line"><span class="cl">		<span class="n">redirect</span><span class="o">(</span><span class="nl">action:</span><span class="s1">&#39;index&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="nf">clearEstadisticas</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="kt">def</span> <span class="n">e</span> <span class="o">=</span> <span class="n">test</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(!</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">sendError</span><span class="o">(</span><span class="n">HttpServletResponse</span><span class="o">.</span><span class="na">SC_FORBIDDEN</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">		<span class="n">sessionFactory</span><span class="o">.</span><span class="na">statistics</span><span class="o">.</span><span class="na">clear</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">redirect</span><span class="o">(</span><span class="nl">action:</span><span class="s1">&#39;index&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="nf">clearMensajesHibernate</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="kt">def</span> <span class="n">e</span> <span class="o">=</span> <span class="n">test</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(!</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">sendError</span><span class="o">(</span><span class="n">HttpServletResponse</span><span class="o">.</span><span class="na">SC_FORBIDDEN</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">		<span class="n">HibernateLogger</span><span class="o">.</span><span class="na">clear</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">redirect</span><span class="o">(</span><span class="nl">action:</span><span class="s1">&#39;index&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="nf">logSummary</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="kt">def</span> <span class="n">e</span> <span class="o">=</span> <span class="n">test</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(!</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">sendError</span><span class="o">(</span><span class="n">HttpServletResponse</span><span class="o">.</span><span class="na">SC_FORBIDDEN</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">		<span class="n">sessionFactory</span><span class="o">.</span><span class="na">statistics</span><span class="o">.</span><span class="na">logSummary</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">redirect</span><span class="o">(</span><span class="nl">action:</span><span class="s1">&#39;index&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">test</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   	<span class="k">if</span> <span class="o">(</span><span class="n">Environment</span><span class="o">.</span><span class="na">current</span> <span class="o">!=</span> <span class="n">Environment</span><span class="o">.</span><span class="na">DEVELOPMENT</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="k">return</span> <span class="kc">false</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">return</span> <span class="kc">true</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HibernateController.groovy</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span><span class="lnt">144&#10;</span><span class="lnt">145&#10;</span><span class="lnt">146&#10;</span><span class="lnt">147&#10;</span><span class="lnt">148&#10;</span><span class="lnt">149&#10;</span><span class="lnt">150&#10;</span><span class="lnt">151&#10;</span><span class="lnt">152&#10;</span><span class="lnt">153&#10;</span><span class="lnt">154&#10;</span><span class="lnt">155&#10;</span><span class="lnt">156&#10;</span><span class="lnt">157&#10;</span><span class="lnt">158&#10;</span><span class="lnt">159&#10;</span><span class="lnt">160&#10;</span><span class="lnt">161&#10;</span><span class="lnt">162&#10;</span><span class="lnt">163&#10;</span><span class="lnt">164&#10;</span><span class="lnt">165&#10;</span><span class="lnt">166&#10;</span><span class="lnt">167&#10;</span><span class="lnt">168&#10;</span><span class="lnt">169&#10;</span><span class="lnt">170&#10;</span><span class="lnt">171&#10;</span><span class="lnt">172&#10;</span><span class="lnt">173&#10;</span><span class="lnt">174&#10;</span><span class="lnt">175&#10;</span><span class="lnt">176&#10;</span><span class="lnt">177&#10;</span><span class="lnt">178&#10;</span><span class="lnt">179&#10;</span><span class="lnt">180&#10;</span><span class="lnt">181&#10;</span><span class="lnt">182&#10;</span><span class="lnt">183&#10;</span><span class="lnt">184&#10;</span><span class="lnt">185&#10;</span><span class="lnt">186&#10;</span><span class="lnt">187&#10;</span><span class="lnt">188&#10;</span><span class="lnt">189&#10;</span><span class="lnt">190&#10;</span><span class="lnt">191&#10;</span><span class="lnt">192&#10;</span><span class="lnt">193&#10;</span><span class="lnt">194&#10;</span><span class="lnt">195&#10;</span><span class="lnt">196&#10;</span><span class="lnt">197&#10;</span><span class="lnt">198&#10;</span><span class="lnt">199&#10;</span><span class="lnt">200&#10;</span><span class="lnt">201&#10;</span><span class="lnt">202&#10;</span><span class="lnt">203&#10;</span><span class="lnt">204&#10;</span><span class="lnt">205&#10;</span><span class="lnt">206&#10;</span><span class="lnt">207&#10;</span><span class="lnt">208&#10;</span><span class="lnt">209&#10;</span><span class="lnt">210&#10;</span><span class="lnt">211&#10;</span><span class="lnt">212&#10;</span><span class="lnt">213&#10;</span><span class="lnt">214&#10;</span><span class="lnt">215&#10;</span><span class="lnt">216&#10;</span><span class="lnt">217&#10;</span><span class="lnt">218&#10;</span><span class="lnt">219&#10;</span><span class="lnt">220&#10;</span><span class="lnt">221&#10;</span><span class="lnt">222&#10;</span><span class="lnt">223&#10;</span><span class="lnt">224&#10;</span><span class="lnt">225&#10;</span><span class="lnt">226&#10;</span><span class="lnt">227&#10;</span><span class="lnt">228&#10;</span><span class="lnt">229&#10;</span><span class="lnt">230&#10;</span><span class="lnt">231&#10;</span><span class="lnt">232&#10;</span><span class="lnt">233&#10;</span><span class="lnt">234&#10;</span><span class="lnt">235&#10;</span><span class="lnt">236&#10;</span><span class="lnt">237&#10;</span><span class="lnt">238&#10;</span><span class="lnt">239&#10;</span><span class="lnt">240&#10;</span><span class="lnt">241&#10;</span><span class="lnt">242&#10;</span><span class="lnt">243&#10;</span><span class="lnt">244&#10;</span><span class="lnt">245&#10;</span><span class="lnt">246&#10;</span><span class="lnt">247&#10;</span><span class="lnt">248&#10;</span><span class="lnt">249&#10;</span><span class="lnt">250&#10;</span><span class="lnt">251&#10;</span><span class="lnt">252&#10;</span><span class="lnt">253&#10;</span><span class="lnt">254&#10;</span><span class="lnt">255&#10;</span><span class="lnt">256&#10;</span><span class="lnt">257&#10;</span><span class="lnt">258&#10;</span><span class="lnt">259&#10;</span><span class="lnt">260&#10;</span><span class="lnt">261&#10;</span><span class="lnt">262&#10;</span><span class="lnt">263&#10;</span><span class="lnt">264&#10;</span><span class="lnt">265&#10;</span><span class="lnt">266&#10;</span><span class="lnt">267&#10;</span><span class="lnt">268&#10;</span><span class="lnt">269&#10;</span><span class="lnt">270&#10;</span><span class="lnt">271&#10;</span><span class="lnt">272&#10;</span><span class="lnt">273&#10;</span><span class="lnt">274&#10;</span><span class="lnt">275&#10;</span><span class="lnt">276&#10;</span><span class="lnt">277&#10;</span><span class="lnt">278&#10;</span><span class="lnt">279&#10;</span><span class="lnt">280&#10;</span><span class="lnt">281&#10;</span><span class="lnt">282&#10;</span><span class="lnt">283&#10;</span><span class="lnt">284&#10;</span><span class="lnt">285&#10;</span><span class="lnt">286&#10;</span><span class="lnt">287&#10;</span><span class="lnt">288&#10;</span><span class="lnt">289&#10;</span><span class="lnt">290&#10;</span><span class="lnt">291&#10;</span><span class="lnt">292&#10;</span><span class="lnt">293&#10;</span><span class="lnt">294&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&lt;%@ page import=&#34;java.text.SimpleDateFormat&#34; %&gt;&#10;</span></span><span class="line"><span class="cl">&lt;%@ page import=&#34;io.github.picodotdev.grails.log.HibernateLogger&#34; %&gt;&#10;</span></span><span class="line"><span class="cl">&lt;%&#10;</span></span><span class="line"><span class="cl">	SimpleDateFormat sdf = new SimpleDateFormat(&#34;dd/MM/yyyy HH:mm:ss Z&#34;)&#10;</span></span><span class="line"><span class="cl">%&gt;&#10;</span></span><span class="line"><span class="cl">&lt;!DOCTYPE html&gt;&#10;</span></span><span class="line"><span class="cl">&lt;html&gt;&#10;</span></span><span class="line"><span class="cl">&lt;head&gt;&#10;</span></span><span class="line"><span class="cl">&lt;title&gt;Estadísticas de Hibernate&lt;/title&gt;&#10;</span></span><span class="line"><span class="cl">&lt;script src=&#34;//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;&#10;</span></span><span class="line"><span class="cl">&lt;link href=&#34;//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">&lt;/head&gt;&#10;</span></span><span class="line"><span class="cl">&lt;body&gt;&#10;</span></span><span class="line"><span class="cl">	&lt;g:set var=&#34;o&#34; value=&#34;${null}&#34; /&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	&lt;div class=&#34;container-fluid&#34;&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;h1&gt;Estadísticas de Hibernate&lt;/h1&gt;&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">		&lt;g:if test=&#34;${estadisticas.statisticsEnabled}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;g:link action=&#34;disableStatistics&#34; class=&#34;btn btn-primary&#34;&gt;Deshabilitar estadísticas&lt;/g:link&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;g:else&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;g:link action=&#34;enableStatistics&#34; class=&#34;btn btn-primary&#34;&gt;Habilitar estadísticas&lt;/g:link&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/g:else&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;g:if test=&#34;${estadisticas.statisticsEnabled}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;g:link action=&#34;clearEstadisticas&#34; class=&#34;btn btn-primary&#34;&gt;Reiniciarlizar estadísticas&lt;/g:link&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;g:link action=&#34;clearMensajesHibernate&#34; class=&#34;btn btn-primary&#34;&gt;Reiniciarlizar mensajes de Hibernate&lt;/g:link&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;g:link action=&#34;logSummary&#34; class=&#34;btn btn-primary&#34;&gt;Informe resumen&lt;/g:link&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		&lt;h2&gt;Estadísticas&lt;/h2&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;g:if test=&#34;${!estadisticas.statisticsEnabled}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">			Las estadísticas de Hibernate no están habilitadas.&#10;</span></span><span class="line"><span class="cl">		&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;g:else&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-4&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h3&gt;Conexiones, sesiones y transacciones&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34;&gt;StartTime  &lt;span class=&#34;badge&#34;&gt;${sdf.format(new Date(estadisticas.startTime))}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li	class=&#34;list-group-item&#34; title=&#34;Get the global number of connections asked by the sessions (the actual number of connections used may be much smaller depending whether you use a connection pool or not)&#34;&gt;ConnectCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.connectCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;The number of prepared statements that were released&#34;&gt;CloseStatementCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.closeStatementCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Global number of sessions opened&#34;&gt;SessionOpenCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.sessionOpenCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Global number of sessions closed&#34;&gt;SessionCloseCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.sessionCloseCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;The number of transactions we know to have been successful&#34;&gt;SuccessfulTransactionCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.successfulTransactionCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;The number of transactions we know to have completed&#34;&gt;TransactionCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.transactionCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-4&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h3&gt;Sentencias&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get global number of executed queries&#34;&gt;QueryExecutionCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.queryExecutionCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;The number of prepared statements that were acquired&#34;&gt;PrepareStatementCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.prepareStatementCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get all executed query strings&#34;&gt;Queries: ${estadisticas.queries.join(&#39;, &#39;)}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get the query string for the slowest query&#34;&gt;QueryExecutionMaxTimeQueryString &lt;span class=&#34;badge&#34;&gt;${estadisticas.queryExecutionMaxTimeQueryString}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-4&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h3&gt;Entidades&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get global number of entity fetchs&#34;&gt;EntityFetchCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.entityFetchCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get global number of entity loads&#34;&gt;EntityLoadCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.entityLoadCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get global number of entity inserts&#34;&gt;EntityInsertCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.entityInsertCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get global number of entity updates&#34;&gt;EntityUpdateCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.entityUpdateCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Get global number of entity deletes&#34;&gt;EntityDeleteCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.entityDeleteCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-4&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h3&gt;Colecciones&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of collections fetched&#34;&gt;CollectionFetchCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.collectionFetchCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of collections loaded&#34;&gt;CollectionLoadCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.collectionLoadCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34; title=&#34;Global number of collections recreated&#34;&gt;CollectionRecreateCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.collectionRecreateCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of collections updated&#34;&gt;CollectionUpdateCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.collectionUpdateCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of collections removed&#34;&gt;CollectionRemoveCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.collectionRemoveCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;div class=&#34;col-md-4&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;h3&gt;Cache&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Get the global number of flush executed by sessions (either implicit or explicit)&#34;&gt;FlushCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.flushCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;The number of StaleObjectStateExceptions that occurred&#34;&gt;OptimisticFailureCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.optimisticFailureCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Get the global number of cached queries successfully retrieved from cache&#34;&gt;QueryCacheHitCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.queryCacheHitCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Get the global number of cached queries *not* found in cache&#34;&gt;QueryCacheMissCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.queryCacheMissCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Get the global number of cacheable queries put in cache&#34;&gt;QueryCachePutCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.queryCachePutCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Get the time in milliseconds of the slowest query&#34;&gt;QueryExecutionMaxTime	&lt;span class=&#34;badge&#34;&gt;${estadisticas.queryExecutionMaxTime}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of cacheable entities/collections successfully retrieved from the cache&#34;&gt;SecondLevelCacheHitCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.secondLevelCacheHitCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of cacheable entities/collections not found in the cache and loaded from the database&#34;&gt;SecondLevelCacheMissCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.secondLevelCacheMissCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;li class=&#34;list-group-item&#34;	title=&#34;Global number of cacheable entities/collections put in the cache&#34;&gt;SecondLevelCachePutCount &lt;span class=&#34;badge&#34;&gt;${estadisticas.secondLevelCachePutCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">			&lt;h3&gt;Detalles entidades&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-12&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;% o = estadisticas.entityNames.sort() %&gt; &#10;</span></span><span class="line"><span class="cl">					&lt;g:each in=&#34;${o}&#34; var=&#34;n&#34; status=&#34;i&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;entityStatistics&#34; value=&#34;${estadisticas.getEntityStatistics(n)}&#34; /&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(i % 3) == 0}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">						&lt;div class=&#34;col-md-4&#34;&gt;					&#10;</span></span><span class="line"><span class="cl">							&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${n}&lt;/b&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;DeleteCount &lt;span class=&#34;badge&#34;&gt;${entityStatistics.deleteCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;FetchCount &lt;span class=&#34;badge&#34;&gt;${entityStatistics.fetchCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;InsertCount &lt;span class=&#34;badge&#34;&gt;${entityStatistics.insertCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;LoadCount &lt;span class=&#34;badge&#34;&gt;${entityStatistics.loadCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;OptimisticFailureCount &lt;span class=&#34;badge&#34;&gt;${entityStatistics.optimisticFailureCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;UpdateCount &lt;span class=&#34;badge&#34;&gt;${entityStatistics.updateCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(i % 3) == 2 || o.length == (i + 1) }&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">				&#10;</span></span><span class="line"><span class="cl">			&lt;h3&gt;Detalles colecciones&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-12&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;% o = estadisticas.collectionRoleNames.sort() %&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:each in=&#34;${o}&#34; var=&#34;n&#34; status=&#34;i&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;collectionStatistics&#34; value=&#34;${estadisticas.getCollectionStatistics(n)}&#34; /&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(i % 3) == 0}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">						&lt;div class=&#34;col-md-4&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;ul class=&#34;list-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${n}&lt;/b&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;FetchCount &lt;span class=&#34;badge&#34;&gt;${collectionStatistics.fetchCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;LoadCount &lt;span class=&#34;badge&#34;&gt;${collectionStatistics.loadCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;RecreateCount &lt;span class=&#34;badge&#34;&gt;${collectionStatistics.recreateCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;RemoveCount &lt;span class=&#34;badge&#34;&gt;${collectionStatistics.removeCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;UpdateCount &lt;span class=&#34;badge&#34;&gt;${collectionStatistics.updateCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(i % 3) == 2 || o.length == (i + 1) }&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">			&lt;h3&gt;Detalles cache segundo nivel&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div class=&#34;col-md-12&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;% o = estadisticas.secondLevelCacheRegionNames.sort() %&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:each	in=&#34;${o}&#34; var=&#34;n&#34; status=&#34;i&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;secondLevelCacheStatistics&#34;	value=&#34;${estadisticas.getSecondLevelCacheStatistics(n)}&#34; /&gt;&#10;</span></span><span class="line"><span class="cl">								&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(i % 3) == 0}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${secondLevelCacheStatistics}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;ul&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${n}&lt;/b&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;ElementCountInMemory &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.elementCountInMemory}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li&gt;ElementCountOnDisk &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.elementCountOnDisk}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li&gt;Entries &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.entries}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li&gt;HitCount &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.hitCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li&gt;MissCount &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.missCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li&gt;PutCount &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.putCount}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li&gt;izeInMemory &lt;span class=&#34;badge&#34;&gt;${secondLevelCacheStatistics.sizeInMemory}&lt;/span&gt;&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(i % 3) == 2 || o.length == (i + 1) }&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/g:else&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		&lt;h3&gt;Mensajes de Hibernate&lt;/h3&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;div class=&#34;btn-group&#34;&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;button id=&#34;hql&#34; type=&#34;button&#34; class=&#34;btn btn-default active&#34;&gt;HQL (${HibernateLogger.get().findAll({ it.type == HibernateLogger.Type.HQL }).size()})&lt;/button&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;button id=&#34;param&#34; type=&#34;button&#34; class=&#34;btn btn-default active&#34;&gt;PARAM (${HibernateLogger.get().findAll({ it.type == HibernateLogger.Type.PARAM }).size()})&lt;/button&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;button id=&#34;sql&#34; type=&#34;button&#34; class=&#34;btn btn-default active&#34;&gt;SQL (${HibernateLogger.get().findAll({ it.type == HibernateLogger.Type.SQL }).size()})&lt;/button&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;button id=&#34;exception&#34; type=&#34;button&#34; class=&#34;btn btn-default active&#34;&gt;EXCEPTION (${HibernateLogger.get().findAll({ it.type == HibernateLogger.Type.EXCEPTION }).size()})&lt;/button&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;button id=&#34;text&#34; type=&#34;button&#34; class=&#34;btn btn-default active&#34;&gt;TEXT (${HibernateLogger.get().findAll({ it.type == HibernateLogger.Type.TEXT }).size()})&lt;/button&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;div class=&#34;row&#34;&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div class=&#34;col-md-12&#34;&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;%&#10;</span></span><span class="line"><span class="cl">					o = HibernateLogger.get()&#10;</span></span><span class="line"><span class="cl">				%&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;table id=&#34;logs&#34; class=&#34;table table-striped&#34;&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;tr&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;th class=&#34;col-md-2&#34;&gt;Fecha&lt;/th&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;th&gt;Tipo&lt;/th&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;th&gt;Tiempo&lt;/th&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;th&gt;Mensaje&lt;/th&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/tr&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:each	in=&#34;${o}&#34; var=&#34;n&#34; status=&#34;i&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:if test=&#34;${(n.type == HibernateLogger.Type.HQL &amp;&amp; n.hql) || (n.type == HibernateLogger.Type.PARAM &amp;&amp; n.param) || ((n.type == HibernateLogger.Type.SQL) &amp;&amp; n.prepared &amp;&amp; n.sql) || ((n.type == HibernateLogger.Type.EXCEPTION) &amp;&amp; n.exception.messsage) || ((n.type == HibernateLogger.Type.TEXT) &amp;&amp; n.text)}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;tr class=&#34;${n.type}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;td&gt;${sdf.format(n.date)}&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;td&gt;${n.type}&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:if test=&#34;${n.type == HibernateLogger.Type.HQL &amp;&amp; n.hql}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td&gt;&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td&gt;${n.hql}&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:if test=&#34;${n.type == HibernateLogger.Type.PARAM &amp;&amp; n.param}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td&gt;&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td&gt;${n.param}&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:if test=&#34;${n.type == HibernateLogger.Type.SQL &amp;&amp; n.prepared &amp;&amp; n.sql}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td&gt;${(n.elapsed &gt; 0)?n.elapsed:&#39;&#39;}&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td&gt;${n.prepared}&lt;br/&gt;&lt;br/&gt;${n.sql}&lt;/td&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:if test=&#34;${n.type == HibernateLogger.Type.EXCEPTION &amp;&amp; n.exception.messsage}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td colspan=&#34;2&#34;&gt;${n.exception.messsage}&lt;/th&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:if test=&#34;${n.type == HibernateLogger.Type.TEXT &amp;&amp; n.text}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;td colspan=&#34;2&#34;&gt;${n.text}&lt;/th&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/tr&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/table&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">	&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	&lt;r:script&gt;&#10;</span></span><span class="line"><span class="cl">		$(document).ready(function() {&#10;</span></span><span class="line"><span class="cl">			$(&#39;#hql&#39;).click(function() {&#10;</span></span><span class="line"><span class="cl">				$(this).toggleClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				var b = $(this).hasClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				if (b) {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.HQL&#39;).show();&#10;</span></span><span class="line"><span class="cl">				} else {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.HQL&#39;).hide();&#10;</span></span><span class="line"><span class="cl">				}&#10;</span></span><span class="line"><span class="cl">			});&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			$(&#39;#param&#39;).click(function() {&#10;</span></span><span class="line"><span class="cl">				$(this).toggleClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				var b = $(this).hasClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				if (b) {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.PARAM&#39;).show();&#10;</span></span><span class="line"><span class="cl">				} else {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.PARAM&#39;).hide();&#10;</span></span><span class="line"><span class="cl">				}&#10;</span></span><span class="line"><span class="cl">			});&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			$(&#39;#sql&#39;).click(function() {&#10;</span></span><span class="line"><span class="cl">				$(this).toggleClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				var b = $(this).hasClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				if (b) {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.SQL&#39;).show();&#10;</span></span><span class="line"><span class="cl">				} else {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.SQL&#39;).hide();&#10;</span></span><span class="line"><span class="cl">				}&#10;</span></span><span class="line"><span class="cl">			});&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			$(&#39;#exception&#39;).click(function() {&#10;</span></span><span class="line"><span class="cl">				$(this).toggleClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				var b = $(this).hasClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				if (b) {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.EXCEPTION&#39;).show();&#10;</span></span><span class="line"><span class="cl">				} else {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.EXCEPTION&#39;).hide();&#10;</span></span><span class="line"><span class="cl">				}&#10;</span></span><span class="line"><span class="cl">			});&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			$(&#39;#text&#39;).click(function() {&#10;</span></span><span class="line"><span class="cl">				$(this).toggleClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				var b = $(this).hasClass(&#39;active&#39;);&#10;</span></span><span class="line"><span class="cl">				if (b) {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.TEXT&#39;).show();&#10;</span></span><span class="line"><span class="cl">				} else {&#10;</span></span><span class="line"><span class="cl">					$(&#39;#logs tr.TEXT&#39;).hide();&#10;</span></span><span class="line"><span class="cl">				}&#10;</span></span><span class="line"><span class="cl">			});&#10;</span></span><span class="line"><span class="cl">		});&#10;</span></span><span class="line"><span class="cl">	&lt;/r:script&gt;&#10;</span></span><span class="line"><span class="cl">&lt;/body&gt;&#10;</span></span><span class="line"><span class="cl">&lt;/html&gt;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>index.gsp</span>
    </div>
</div>
<p>Si además queremos ver las consultas HQL de Hibernate y parámetros que se están lanzando en cada acceso a una página podemos modificar el archivo <em>Config.goovy</em> y añadir la siguiente configuración en el apartado Log4j:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="c1">// log4j configuration&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">log4j</span> <span class="o">=</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Example of changing the log pattern for the default console appender:&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//appenders {&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//&nbsp;&nbsp;&nbsp;&nbsp;console name:&#39;stdout&#39;, layout:pattern(conversionPattern: &#39;%c{2} %m%n&#39;)&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//}&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">appenders</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="n">environments</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	<span class="n">development</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">appender</span> <span class="k">new</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">picodotdev</span><span class="o">.</span><span class="na">grails</span><span class="o">.</span><span class="na">log</span><span class="o">.</span><span class="na">HibernateAppender</span><span class="o">(</span><span class="nl">name:</span><span class="s1">&#39;hibernate&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">environments</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl"> 		<span class="n">development</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">debug</span> <span class="nl">additivity:</span> <span class="kc">false</span><span class="o">,</span> <span class="nl">hibernate:</span><span class="o">[</span><span class="s1">&#39;org.hibernate.SQL&#39;</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">trace</span> <span class="nl">additivity:</span> <span class="kc">false</span><span class="o">,</span> <span class="nl">hibernate:</span><span class="o">[</span><span class="s1">&#39;org.hibernate.type.descriptor.sql.BasicBinder&#39;</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl"> 		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">error</span>  <span class="s1">&#39;org.codehaus.groovy.grails.web.servlet&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// controllers&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.web.pages&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="c1">// GSP&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.web.sitemesh&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1">// layouts&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.web.mapping.filter&#39;</span><span class="o">,</span> <span class="c1">// URL mapping&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.web.mapping&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// URL mapping&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.commons&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// core / classloading&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.plugins&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// plugins&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.codehaus.groovy.grails.orm.hibernate&#39;</span><span class="o">,</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="c1">// hibernate integration&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.springframework&#39;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;org.hibernate&#39;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s1">&#39;net.sf.ehcache.hibernate&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Config.groovy</span>
    </div>
</div>
<p>La implementación de <em>appender</em> para capturar las HQL que lanza grails es la siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.grails.log</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.log4j.AppenderSkeleton</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.log4j.spi.LoggingEvent</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HibernateAppender</span> <span class="kd">extends</span> <span class="n">AppenderSkeleton</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">append</span><span class="o">(</span><span class="n">LoggingEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getLoggerName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;org.hibernate.SQL&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">HibernateLogger</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">logHQL</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getRenderedMessage</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getLoggerName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;org.hibernate.type.descriptor.sql.BasicBinder&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">HibernateLogger</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">logParam</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getRenderedMessage</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">requiresLayout</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HibernateAppender.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span><span class="lnt">93&#10;</span><span class="lnt">94&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.grails.log</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HibernateLogger</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">MAX_LOGS</span> <span class="o">=</span> <span class="n">1000</span><span class="o">;</span>	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="n">LinkedList</span> <span class="n">logs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">();</span>	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="n">HibernateLogger</span> <span class="n">instance</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">enum</span> <span class="n">Type</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">HQL</span><span class="o">,</span> <span class="n">PARAM</span><span class="o">,</span> <span class="n">SQL</span><span class="o">,</span> <span class="n">EXCEPTION</span><span class="o">,</span> <span class="n">TEXT</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="n">HibernateLogger</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">instance</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HibernateLogger</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">instance</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logHQL</span><span class="o">(</span><span class="n">String</span> <span class="n">hql</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">,</span> <span class="n">Type</span><span class="o">.</span><span class="na">HQL</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;date&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Date</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;hql&#34;</span><span class="o">,</span> <span class="n">hql</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">add</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logParam</span><span class="o">(</span><span class="n">String</span> <span class="n">param</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">,</span> <span class="n">Type</span><span class="o">.</span><span class="na">PARAM</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">   		<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;date&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Date</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">   		<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;param&#34;</span><span class="o">,</span> <span class="n">param</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">add</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logSQL</span><span class="o">(</span><span class="kt">int</span> <span class="n">connectionId</span><span class="o">,</span> <span class="n">String</span> <span class="n">now</span><span class="o">,</span> <span class="kt">long</span> <span class="n">elapsed</span><span class="o">,</span> <span class="n">String</span> <span class="n">category</span><span class="o">,</span> <span class="n">String</span> <span class="n">prepared</span><span class="o">,</span> <span class="n">String</span> <span class="n">sql</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">,</span> <span class="n">Type</span><span class="o">.</span><span class="na">SQL</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;date&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Date</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;connectionId&#34;</span><span class="o">,</span> <span class="n">connectionId</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;now&#34;</span><span class="o">,</span> <span class="n">now</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;elapsed&#34;</span><span class="o">,</span> <span class="n">elapsed</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;category&#34;</span><span class="o">,</span> <span class="n">category</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;prepared&#34;</span><span class="o">,</span> <span class="n">prepared</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;sql&#34;</span><span class="o">,</span> <span class="n">sql</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">add</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logException</span><span class="o">(</span><span class="n">Exception</span> <span class="n">exception</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">,</span> <span class="n">Type</span><span class="o">.</span><span class="na">EXCEPTION</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;date&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Date</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;exception&#34;</span><span class="o">,</span> <span class="n">exception</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">add</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logText</span><span class="o">(</span><span class="n">String</span> <span class="n">text</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">,</span> <span class="n">Type</span><span class="o">.</span><span class="na">TEXT</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;date&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Date</span><span class="o">());</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;text&#34;</span><span class="o">,</span> <span class="n">text</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">add</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getLastEntry</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">return</span> <span class="s">&#34;&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">List</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">return</span> <span class="n">logs</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">clear</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="n">logs</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Map</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="n">logs</span><span class="o">.</span><span class="na">addFirst</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span> <span class="o">(</span><span class="n">logs</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">MAX_LOGS</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;		<span class="n">logs</span><span class="o">.</span><span class="na">removeLast</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HibernateLogger.java</span>
    </div>
</div>
<p>El resultado es el siguiente:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/images/grails-hibernate-statistics_hu4234a0f49374b7b510e8be551108ae3e_127095_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Estadísticas de Hibernate en Grails"><img src="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/images/grails-hibernate-statistics_hu4234a0f49374b7b510e8be551108ae3e_127095_300x200_fit_box_3.png" width="175" height="200" alt="Estadísticas de Hibernate en Grails" title="Estadísticas de Hibernate en Grails"  class="lozad "></a></p>
</figure>
</div>
<p>En la imagen se puede apreciar las consultas lanzadas y que parámetros se han empleado. El método doTest del controlador HibernateController cada vez que es ejecutado persiste una entidad de dominio Autor y posteriormente la borra lanzando una sentencia insert y otra delete, cada vez que es ejecutado las estadísticas cambian acordemente.</p>
<p>Obtener información de lo que sucede en la aplicación es importante y el <em>framework</em> debería ayudar, también podemos <a href="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/">mejorar lo que ofrece Grails con una página de excepción más informativa</a>. En <a href="http://tapestry.apache.org/">Tapestry</a> es más sencillo aún ya que incluyendo la dependencia de tapestry-hibernate ya se añade a la <a href="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/">página Dashboard y un apartado con estas estadísticas</a>, pero esto último será tema para otro artículo.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/">Página de excepción de Grails</a></li>
<li>https://stackoverflow.com/questions/11621495/how-can-i-obtain-grails-hibernate-l2-cache-statistics<br></li>
<li>https://stackoverflow.com/questions/2568507/how-to-log-sql-statements-in-grails<br></li>
<li>https://hibernate.atlassian.net/browse/HHH-3659</li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/</id>
        <title>Página de excepción de Grails</title>
        <updated>2014-05-30T20:00:00+02:00</updated>
        <published>2014-05-23T20:00:19+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/grails.svg" width="300" height="300" alt="Grails" title="Grails"  class=""></p>
</div>
<p>No es la primera vez que comento algo similar (<a href="https://elblogdepicodev.blogspot.com.es/2012/08/paginas-pagecatalog-servicestatus-e.html">I</a>, <a href="https://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html">II</a>) disponer de la mayor cantidad de información cuando se produce una excepción o un error en la aplicación es vital para determinar rápidamente la causa del error y para solucionarlo correctamente. Para disponer de esta información podemos generar un archivo de log que nos permita revisar lo que pasó en la aplicación en un determinado momento. En el momento de desarrollo también nos puede interesar tener una página de excepción informativa.</p>
<p>La página de error de <a href="https://grails.org/">Grails</a> por defecto da poca información, a poco más da la traza de la excepción y un extracto de los archivos relacionados donde se ha producido, podría ser mejor. Podría informar de los parámetros que se enviaron en la petición, las cabeceras http o las cookies además de los parámetros de sesión, a veces esta información nos puede servir para identificar la causa más rápidamente ya que la excepción puede estar produciéndose con el valor de un determinado parámetro o un determinado navegador, esta información no la tenemos en una simple traza de la excepción.</p>
<p>En este artículo crearé una página de excepción para Grails con los parámetros de la petición y sesión, cabeceras HTTP y las cookies enviadas además de la traza de la excepción. Los parámetros, las cookies y cabeceras HTTP se pueden obtener de la request y los atributos de la sesión del objeto session. El código del ejemplo de página de excepción es el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&lt;%@ page import=&#34;java.text.SimpleDateFormat&#34; %&gt;&#10;</span></span><span class="line"><span class="cl">&lt;%&#10;</span></span><span class="line"><span class="cl">	SimpleDateFormat sdf = new SimpleDateFormat(&#34;dd/MM/yyyy HH:mm:ss Z&#34;)&#10;</span></span><span class="line"><span class="cl">%&gt;&#10;</span></span><span class="line"><span class="cl">&lt;!DOCTYPE html&gt;&#10;</span></span><span class="line"><span class="cl">&lt;html&gt;&#10;</span></span><span class="line"><span class="cl">&lt;head&gt;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&#34;layout&#34; content=&#34;main&#34; /&gt;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;Excepción&lt;/title&gt;&#10;</span></span><span class="line"><span class="cl">	&lt;g:if env=&#34;development&#34;&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;${resource(dir: &#39;css&#39;, file: &#39;errors.css&#39;)}&#34; type=&#34;text/css&#34;&gt;&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">&lt;/head&gt;&#10;</span></span><span class="line"><span class="cl">&lt;body&gt;&#10;</span></span><span class="line"><span class="cl">	&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;h1&gt;Detalles del error&lt;/h1&gt;	&#10;</span></span><span class="line"><span class="cl">			&lt;g:renderException exception=&#34;${exception}&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			&lt;pre&gt;&lt;g:each in=&#34;${exception.stackTraceLines}&#34;&gt;${it.encodeAsHTML()}&lt;/g:each&gt;&lt;/pre&gt;&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">			&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h2&gt;Parámetros&lt;/h2&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:if test=&#34;params&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;paramsKeys&#34; value=&#34;${params.keySet()}&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;% paramsKeys.removeAll([&#39;action&#39;, &#39;controller&#39;]) %&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;ul style=&#34;list-style-type: none;&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;g:each in=&#34;${paramsKeys}&#34; var=&#34;param&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:if test=&#34;${params.list(param).size() == 1}&#34;&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${param}&lt;/b&gt;: ${params.get(param)}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;g:else&gt;&#10;</span></span><span class="line"><span class="cl">									&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${param}&lt;/b&gt;: ${params.list(param)}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;/g:else&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;	&#10;</span></span><span class="line"><span class="cl">				&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h2&gt;Cabeceras&lt;/h2&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:if test=&#34;request.headerNames &#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;headers&#34; value=&#34;${request.headerNames}&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;% &#10;</span></span><span class="line"><span class="cl">							headers = Collections.list(headers)&#10;</span></span><span class="line"><span class="cl">							headers.removeAll([&#39;cookie&#39;])&#10;</span></span><span class="line"><span class="cl">						%&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;ul style=&#34;list-style-type: none;&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;g:each in=&#34;${headers}&#34; var=&#34;header&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${header}&lt;/b&gt;: ${request.getHeader(header)}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h2&gt;Cookies&lt;/h2&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:if test=&#34;request.cookies&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;cookies&#34; value=&#34;${request.cookies}&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;ul style=&#34;list-style-type: none;&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;g:each in=&#34;${cookies}&#34; var=&#34;cookie&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${cookie.name}&lt;/b&gt;: ${cookie.value}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;div&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;h2&gt;Sesión&lt;/h2&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;ul style=&#34;list-style-type: none;&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;Fecha creación&lt;/b&gt;: ${sdf.format(new Date(session.getCreationTime()))}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/ul&gt; &#10;</span></span><span class="line"><span class="cl">					&lt;g:if test=&#34;reqeust.getSession(false)&#34;&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;g:set var=&#34;sessionKeys&#34; value=&#34;${session.getAttributeNames()}&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;ul style=&#34;list-style-type: none;&#34;&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;g:each in=&#34;${sessionKeys}&#34; var=&#34;s&#34;&gt;&#10;</span></span><span class="line"><span class="cl">								&lt;li class=&#34;list-group-item&#34;&gt;&lt;b&gt;${s}&lt;/b&gt;: ${session.getAttribute(s)}&lt;/li&gt;&#10;</span></span><span class="line"><span class="cl">							&lt;/g:each&gt;&#10;</span></span><span class="line"><span class="cl">						&lt;/ul&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;/g:if&gt;&#10;</span></span><span class="line"><span class="cl">					&lt;g:else&gt;&#10;</span></span><span class="line"><span class="cl">						No hay sesión&#10;</span></span><span class="line"><span class="cl">					&lt;/g:else&gt;&#10;</span></span><span class="line"><span class="cl">				&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">			&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">		&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">	&lt;/div&gt;&#10;</span></span><span class="line"><span class="cl">&lt;/body&gt;&#10;</span></span><span class="line"><span class="cl">&lt;/html&gt;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>exception.gsp</span>
    </div>
</div>
<p>Para hacer uso de la página de excepción deberemos configurar el archivo UrlMappings para que Grails use esta página de excepción.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">UrlMappings</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">static</span> <span class="n">mappings</span> <span class="o">=</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;/$controller/$action?/$id?(.$format)?&#34;</span><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">constraints</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// apply constraints here&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;/&#34;</span><span class="o">(</span><span class="nl">view:</span><span class="s2">&#34;/index&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;500&#34;</span><span class="o">(</span><span class="nl">view:</span><span class="s1">&#39;/error&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;500&#34;</span><span class="o">(</span><span class="nl">controller:</span><span class="s2">&#34;test&#34;</span><span class="o">,</span> <span class="nl">action:</span><span class="s2">&#34;exception&#34;</span><span class="o">,</span> <span class="nl">exception:</span><span class="n">Exception</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UrlMappings.groovy</span>
    </div>
</div>
<p>El resultado se puede ver en la siguiente captura de pantalla.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/images/pagina-excepcion-grails-por-defecto_hu69b99072b92d39c8c40ae70f45a904b8_89059_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página de error por defecto de Grails"><img src="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/images/pagina-excepcion-grails-por-defecto_hu69b99072b92d39c8c40ae70f45a904b8_89059_300x200_fit_box_3.png" width="300" height="166" alt="Página de error por defecto de Grails" title="Página de error por defecto de Grails"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/images/pagina-excepcion-grails-personalizada_hu63eab4f2b004a7b3e5055c94710b3136_162704_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página de error personalizada de Grails"><img src="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/images/pagina-excepcion-grails-personalizada_hu63eab4f2b004a7b3e5055c94710b3136_162704_300x200_fit_box_3.png" width="211" height="200" alt="Página de error personalizada de Grails" title="Página de error personalizada de Grails"  class="lozad "></a></p>
</figure>
</div>
<p>Los estilos mostrados en las capturas de pantalla podrían ser mejores pero la esencia está en la información que se muestra. En otro artículo publicaré como <a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">obtener estadísticas de Hibernate para detectar problemas de N+1 u obtener las consultas sql que se están realizando en cada página de una aplicación Grails</a>, esta información nos puede ayudar bastante y no es excesivamente complicado hacerla. Con ambas conseguiremos que las aplicaciones que desarrollemos con Grails sean un poco más informativas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">Detectar problema N+1 y obtener estadísticas de Hibernate con Grails</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/</id>
        <title>Arquitectura y hospedaje de Blog Stack</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-05-16T17:21:55+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogstack.png" width="300" height="65" alt="Blog Stack" title="Blog Stack"  class=""></p>
</div>
<p>Normalmente en esta bitácora suelo poner ejemplos para explicar como funciona una determinada herramienta, son ejemplos que podrían aprovecharse para algo productivo pero para mantenerlos simples por si mismos no suelen serlo. En esta entrada voy a comentar cual es la arquitectura y como está alojado <a href="http://www.blogstack.info/">Blog Stack</a>, que es un ejemplo de algo práctico y real por si la experiencia de este ejemplo le sirve de ayuda o de inspiración a alguien. En la red he encontrado comentada la experiencia de <del>Planeta Linux</del> y <a href="http://gallir.wordpress.com/2009/12/30/como-montamos-meneame-en-amazon-ec2/">Meneame</a>, otros proyectos web.</p>
<p>Blog Stack (BS) es una agregador, planeta, o fuente de información de bitácoras sobre programación, desarrollo, desarrollo ágil, software, software libre, hardware, gnu/linux o en general temas relacionados con la tecnología, en definitiva es un servicio que está disponible en una dirección de internet, <a href="http://www.blogstack.info">www.blogstack.info</a>.</p>
<p>Una condición importante que buscaba para BS es que de cualquier opción no debería ser muy cara al menos en los inicios hasta que viese cuales eran los ingresos por la publicidad que era capaz de generar, estimaba que no iban a ser muchos hasta que se agregase unas decenas de bitácoras y tuviese algunos lectores suscritos a las fuentes se sindicación. Por coste cualquier opción que fuese en la nube prácticamente quedaba desechada, la opción más barata era la de <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, reservando una instancia t1.micro (0,615 GB) por tres años el coste era de unos 80 € anuales y de 140 € anuales para una instancia de tipo m1.small (1,7 GB), otras opciones como <a href="https://www.openshift.com/">OpenShift</a> con la capa gratuita de 3 gears si un small gear (512 MB) era suficiente no tenía coste pero si necesitase un gear medium (1 GB) el coste era superior, de unos 438 € anuales. Finalmente otra opción que evalué era <a href="https://cloud.google.com/products/compute-engine/">Google Compute</a> con un coste de 115 € anuales para una instancia f1-micro (0,60 GB) y de 305 € para una g1-small (1,7 GB). Si en cualquier opción de estas en la nube el coste debía de asumirlo yo probablemente al cabo de un tiempo, pocos años, acabaría cerrando el servicio, por ello el coste era importante. OpenShift y su capa gratuita tenía muchas posibilidades.</p>
<p>Por otro lado estaba bastante contento con la generación estática de mi bitácora con <a href="http://octopress.org/">Octopress</a> y el alojamiento en <a href="https://pages.github.com/">GitHub Pages</a>. Me pereció que una opción con un coste mínimo podría generar de forma estática el contenido y alojarlo en GitHub Pages al igual que hago con Octopress. Finalmente, me quedaba donde hacer la generación estática, otra opción era usar la <a href="https://www.raspberrypi.org/">Raspberry Pi</a> pero esto me obligaba a mantenerla encendida siempre, cualquier problema en la Raspberry Pi o conexión en mi red o si la necesitaba apagar en algún momento podría dejar BS sin actualizarse. Si era posible necesitaba una forma de nube, por suerte OpenShift ofrece un plan gratuito de 3 gears con 512 MiB de memoria y 1 GiB de espacio en disco cada uno y en las primeras pruebas que hice era suficiente. Además, OpenShift ofrecía todas las herramientas que necesitaba git para subir el contenido estático al repositorio de GitHub, iconv, cron, bases de datos relacionales y no sql, poder usar <a href="http://undertow.io/">Undertow</a> como servidor y un «cartridge» diy («Do It Yourself»). Tenía varias piezas, finalmente elegí la combinación de OpenShift para la generación estática y GitHub Pages para servir el contenido. El contenido podría servirlo desde OpenShift pero no estaba seguro de que el gear fuese capaz de aguantarlo todo si el tráfico fuese grande. Por el espacio en disco de 1 GB tenía dudas de cuanto podría necesitar pero si fuera mucho podría adquirir 1 GiB adicionar por 1 € al mes.</p>
<p>Generar el contenido de forma estática tiene limitaciones y obliga a hacer las cosas de diferente forma que empleando una aplicación web pero el requisito del coste era más importante que la funcionalidad y la forma de ofrecerla. El coste de BS es de unos ¡10 €&hellip; al año! y consiste básicamente en la compra del dominio. El dominió lo compre en <a href="https://www.dondominio.com/">DonDominio</a> por recomendación según la cual era buena opción, en los 10 € está incluido el WHOIS privado que en otras opciones tienen un coste adicional. Teniendo el nombre elegido de Blog Stack para el proyecto tenía que saber que <a href="https://es.wikipedia.org/wiki/Dominio_de_nivel_superior">dominios de nivel superior (TLD)</a> estaban disponibles, los &ldquo;okupas&rdquo; de los dominios tenían reservado el .com y el .net, como BS era un sitio de información no me importó mucho comprar el .info.</p>
<p>Con todo la arquitectura de despliegue y hospedaje de Blog Stack es la siguiente:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/images/arquitectura-blogstack_hub8ff48939ea64d0be3682a25103ad8e4_45194_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/images/arquitectura-blogstack_hub8ff48939ea64d0be3682a25103ad8e4_45194_300x200_fit_box_3.png" width="168" height="200"  class="lozad "></a></p>
</figure>
</div>
<p>En cuanto a la aplicación y el código Java en si las partes importantes están en un <a href="https://github.com/picodotdev/blog-stack/blob/master/src/main/java/info/blogstack/services/IndexerServiceImpl.java">servicio que se encarga de la indexación</a> extrayendo el contenido de las fuentes y guardalo en una base de datos, otro <a href="https://github.com/picodotdev/blog-stack/blob/master/src/main/java/info/blogstack/services/GeneratorServiceImpl.java">servicio para la generación del contenido</a> del sitio de forma estática (html, css, js, imgs, &hellip;) y finalmente el <a href="https://github.com/picodotdev/blog-stack/blob/master/src/main/java/info/blogstack/cli/Main.java">programa Java principal</a> que sirve para lanzarlo desde la linea de comandos, el resto son las <a href="https://github.com/picodotdev/blog-stack/tree/master/src/main/java/info/blogstack/entities">clases del modelo de datos</a>  y los <a href="https://github.com/picodotdev/blog-stack/tree/master/src/main/java/info/blogstack/services/dao">DAO de persistencia y acceso a dataos</a>. La aplicación sigue el esquema tradicional de 3 capas, la de presentación (páginas y componentes de tapestry), la de lógica de negocio formada por los servicios de indexación, generación y los DAOs (formada por el contenedor de servicios de tapestry y spring) y finalmente la capa de datos formada por una base de datos H2 (donde hibernate interviene). En realidad en BS no hay un servidor de aplicaciones sino que se usa Tapestry en una aplicación «standalone».</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/images/arquitectura-aplicacion-blogstack_hu58118d936b2ebf314d48d518f007452c_43298_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/images/arquitectura-aplicacion-blogstack_hu58118d936b2ebf314d48d518f007452c_43298_300x200_fit_box_3.png" width="300" height="123"  class="lozad "></a></p>
</figure>
</div>
<p>La raíz del proyecto fue que quería usar <a href="http://tapestry.apache.org/">Apache Tapestry</a> de alguna forma en algún proyecto que fuese de utilidad para otras personas, al mismo tiempo que meditaba la idea <a href="http://planetalinux.org/">Planeta Linux</a> dejó de funcionar durante unas semanas y tampoco estaba contento del todo con los otros planetas en los que tenía mi bitácora agregada. Con <a href="http://planeta.archlinux-es.org/">Planeta Arch Linux</a> porque después de unos meses seguía sin ni siquiera respuesta a la solicitud de agregación y <a href="http://www.planetacodigo.com/">Planeta Código</a> ya que creía que podría ofrecer mejor funcionalidad, por ejemplo, los gist no se importaban bien (utilizan javascript y por seguridad deben estar excluidos). Ya que empezaba el proyecto creía que podría proporcionar alguna idea que permitiese descubrir contenido a los usuarios a través de como hace <a href="https://stackoverflow.com/">stackoverflow</a> con las etiquetas de modo que una persona se pueda suscribir (mediante rss/atom) a una etiqueta para recibir el contenido de solo el tema que le interese de cualquier bitácora agregada, descubrir nuevas bitácoras con contenido interesante a veces no es fácil. La opción más parecida y mejor que he encontrado es <a href="http://bitacoras.com/">bitacoras.com</a>, salvo las votaciones, el ranking y que tiene un ámbito más amplio al poder incluir bitácoras de más temáticas y que la agregación de bitácoras no está automatizada, BS en lo importante ofrece lo mismo de forma más simple y está más especializado tanto en la temática de las bitácoras como en la suscripción por etiquetas.</p>
<p>Apache Tapestry junto con el módulo Tapestry Offline y el hecho de que el contenedor de dependencias de Tapestry se puede usar en una aplicación «standalone» me permitía resolver la parte técnica en la mayor parte, el resto era usar unas cuantas librerías para tener la funcionalidad que necesitaba. Una de ellas era <a href="http://jsoup.org/">jsoup</a> con la que podía filtrar el contenido agregado y evitar problemas de seguridad. Permitir en el contenido scripts e iframes puede ser un problema de seguridad pero permitiendo algunas fuentes confiables podía importar el contenido de forma segurar sin perder funcionalidades. En algunas bitácoras como la mía se suelen utilizar como trozos de código <a href="http://gist.github.com/">gist</a>, vídeos de youtube o vimeo, presentaciones de <a href="https://speakerdeck.com/">Speaker Deck</a> o usar el <a href="https://afiliados.amazon.es/">programa de afiliados de amazon</a>. Iba a necesitar una base de datos ya que las entradas van desapareciendo de las fuentes agregadas a medida que se publica contenido. La base de datos que elegí fue <a href="http://www.h2database.com/html/main.html">H2</a> principalmente porque puede estar contenida en un archivo que puedo descargar a mi ordenador, de esta manera podría evitar los volcados de <a href="http://postgresql.org/">PosgreSQL</a>. Si BS resultase que creciese bastante posteriormente podría cambiar H2 por PostgreSQL (la otra opción que consideraba), H2 al principio era más que suficiente. El resto era la colección de herramientas que se suelen utilizar el proyectos <a href="https://www.oracle.com/es/technologies/java/overview/index.html">Java</a> como <a href="http://hibernate.org/">Hibernate</a>, <a href="http://spring.io/">Spring</a>, <a href="https://gradle.org/">Gradle</a>, <a href="http://commons.apache.org/">Apache Commons</a>, <a href="http://rometools.github.io/rome/">Rome</a> (para obtener las fuentes)&hellip;</p>
<p>El despliegue de nuevo código está totalmente automatizado tal y como aconseja el libro <a href="https://amzn.to/37GgG75">The Pragmatic programmer</a>, con lo que me es muy simple y me consume muy poco tiempo hacer un nuevo despliegue, el tiempo ahorrado lo puedo emplear para desarrollar. El despliegue consiste en unos cuantos comandos ejecutados por una <a href="https://github.com/picodotdev/blog-stack/blob/master/build.gradle">tarea de gradle</a> que se envían a OpenShift. Los comandos de despliegue se encargan de todo mediante ssh, hacer previamente una copia de seguridad de la base de datos (scp/unzip), sincronizar los archivos cambiados del proyecto con rsync, establecer los permisos de ejecución de los archivos bash y actualizar el esquema de la base de datos con <a href="http://www.liquibase.org/">liquibase</a>.</p>
<p>No estaba usando Apache Tapestry de la forma habitual que se suele emplear que es para desarrollar aplicaciones web que se despliegan en un servidor de aplicaciones Java. Lo iba a usar como motor de plantillas para generar el contenido estático, aparte de querer usar Tapestry ¿por que esta opción si hay soluciones específicas para esto como <a href="http://www.thymeleaf.org/">Thymeleaf</a>, <a href="http://freemarker.org/">Freemarker</a>, &hellip;? Uno de los motivos es que en en la mayoría de opciones se sigue un modelo «push» en el que se combinan los datos con la vista para producir el resultado. Este modelo «push» cada vez me convence menos a pesar de ser ampliamente usado en muchos motores de plantillas y <em>frameworks</em> web, la razón es que las vistas al final acaban conteniendo lógica si son algo complejas, eso no es bueno. Tapestry por el contrario usa un modelo «pull» en el que la plantilla para generar el contenido puede acceder al controlador por lo que las plantillas no tienen lógica, estando extraída a una clase java con lo que nos beneficiaremos del compilador y el IDE para esa lógica. Además, los componentes de Tapestry son una manera fácil de reutilizar código, por si fuera poco si pasado un tiempo quisiese desplegar Blog Stack como aplicación web podría aprovechar prácticamente todo el código.</p>
<p>Estando convencido del uso del software libre para ser coherente no tenía otra opción que publicar el <a href="https://github.com/picodotdev/blog-stack/">código fuente</a> bajo alguna licencia de software libre, la opción que elegí fue <a href="http://www.gnu.org/licenses/agpl-3.0.html">AGPL</a>. Uno puede tener dudas de &ldquo;dar&rdquo; el código fuente pero creía que ganaba si alguien en un caso remoto hiciese un fork de BS, ya que Tapestry siendo una parte tan importante sería lo usado y por tanto habría hecho que otra persona usase Tapestry. Si basándose en la misma idea se hacía un proyecto similar competiríamos y que triunfase la mejor opción. Pero lo más probable que ocurra es que se colabore con el desarrollo de BS, con esta opción también ganaría. De tres opciones posibles en dos ganaría, en la tercera se competiría y las opciones que elegí eran de lo mejor que hay en el mundo Java, BS está bien armado.</p>
<p>Con el desarrollo de Blog Stack he tenido que resolver unos cuantos problemas, en posteriores entradas explicaré como he implementado las soluciones a algunas funcionalidades que son comunes a los proyectos web, como la correspondencia entre las urls y los artículos o etiquetas para <a href="https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/">no poner identificadores de entidades de la base de datos en las urls y que queden más limpias y amigables</a>, como hacer la transliteración de los títulos de las entradas para la construcción de las urls, como obtener un extracto de la entrada (puede parecer simple pero no lo es tanto), como usar un servidor embebido que sirva el contenido estático o como procesar recursos estáticos como archivos less para generar el css con <a href="https://code.google.com/p/wro4j/">wro4j</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/">Presentación de Blog Stack</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/</id>
        <title>Presentación de Blog Stack</title>
        <updated>2014-05-06T21:00:00+02:00</updated>
        <published>2014-05-04T11:51:38+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogstack.png" width="300" height="65" alt="Blog Stack" title="Blog Stack"  class=""></p>
</div>
<p>Con este artículo quiero presentar un nuevo proyecto, Blog Stack. <a href="http://www.blogstack.info/">Blog Stack</a> (BS) es una agregador, planeta, o fuente de información de bitácoras sobre programación, desarrollo, desarrollo ágil, software, software libre, hardware, gnu/linux o en general temas relacionados con la tecnología.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/images/blogstack-portada_hu340b56fc393dee703dec6a4fb7fc71ae_275117_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Portada de Blog Stack"><img src="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/images/blogstack-portada_hu340b56fc393dee703dec6a4fb7fc71ae_275117_300x200_fit_box_3.png" width="216" height="200" alt="Portada de Blog Stack" title="Portada de Blog Stack"  class="lozad "></a></p>
</figure>
</div>
<p>Otro agregador o planeta no es ninguna idea nueva pero BS incorpora alguna cosa adicional como poder suscribirse a únicamente el contenido etiquetado en que cada uno esté interesando (programación, desarrollo-ágil, java, python, linux, ubuntu, &hellip;) o recibir el contenido publicado en todas las bitácoras agregadas sin tener que suscribirse individualmente a cada una de ellas. BS aún está en desarrollo y posiblemente vaya incorporando nuevas ideas que me surjan o se me propongan pero en el estado actual ya cumple con la función básica de agregador.</p>
<p>Como comento en la <a href="http://www.blogstack.info/faq">página de pregutnas frecuentes</a> hay varios motivos por los que he iniciado el proyecto, la semilla es que quería hacer un proyecto personal con cierta utilidad para otras personas empleando de alguna forma el <em>framework</em> para el desarrollo de aplicaciones web <a href="http://tapestry.apache.org/">Apache Tapestry</a>. Como catalizador de la semilla ha sido que recientemente, abril de 2014, <a href="http://planetalinux.org/">Planeta Linux</a> ha dejado de estar accesible dejando un gran vacío entre las bitácoras sobre gnu/linux y el software libre y por tanto al igual que en el caso de muchos otros blogeros los artículos que publicaba en mi bitácora sobre estos temas ya no son agregados en este planeta y van a dejar de llegar a muchos potenciales lectores. Al menos, solo ha sido durante unas semanas, después de escribir un correo electrónico a la persona que se encarga de su mantenimiento preguntándole por la situación finalmente Planeta Linux está disponible. Por otro lado también tengo mi bitácora agregada a <a href="http://planetacodigo.com/">Planeta Código</a> y <a href="http://bitacoras.com/">Bitacoras.com</a> pero creo que se les podría hacer algunos añadidos para tener un mejor agregador, planeta, o fuente de información o al menos con alguna idea diferente. Desde darle un mejor aspecto hasta el permitir incluir el contenido que en la mayoría de agregadores es filtrado por seguridad como <a href="https://www.youtube.com/">vídeos de Youtube</a> o <a href="http://vimeo.com/">Vimeo</a>, <a href="http://speakerdeck.com/">presentaciones de Speaker Deck</a>, <a href="http://gist.github.com/">Gist de GitHub</a>, <a href="http://disqus.com/">comentarios de Disqus</a> y permitir monetizar el contenido con <a href="https://www.google.com/adsense/">publicidad de AdSense</a> o el programa de <a href="https://afiliados.amazon.es/">afiliados de Amazon</a> directamente desde Blog Stack. Como decía a través de las etiquetas los lectores pueden suscribirse únicamente a los temas que les interesen sin tener que suscribirse a cada bitácora de forma individual o descubrir nuevas bitácoras que se agreguen y su contenido sin tener que buscarlas. Otro planeta en el que tengo mi <a href="https://elblogdepicodev.blogspot.com.es/">antigua bitácora</a> agregada es <a href="http://planeta.archlinux-es.org/">Planeta Arch Linux</a> pero aún estoy esperando a que me agreguen <a href="https://picodotdev.github.io/blog-bitix/">el nuevo</a> supongo que por falta de tiempo por parte de las personas encargadas de su mantenimiento, en cualquier caso tampoco he recibido al menos una respuesta.</p>
<p>También quería poner a las bitácoras personales y al contenido, en los que algunos se escriben valiosas píldoras de conocimiento concentrado, en el lugar que se merecen en esta época de redes sociales en las que lo relevante es compartirlo o comentarlo, esto también es importante y valioso pero no siempre más que el propio contenido que parece que queda relegado en un segundo plano más allá de los titulares o entradillas. Por último, a veces encontrar las bitácoras de esas personas que publican contenido interesante no siempre es sencillo y a las nuevas bitácoras en los inicios les cuesta llegar a un número amplio de lectores hasta que es conocido o indexado en las páginas de resultados de los buscadores en las primeras posiciones. Blog Stack permitirá descubrir nuevo contenido a través de las etiquetas en las que se publican los artículos, también permitirá descubrir nuevas bitácoras que se agreguen y quizá en un futuro a medida que se vaya conociendo y en el que se vayan agregando bitácoras y atrayendo lectores hacer que el inicio de una bitácora no sea escribir para uno mismo.</p>
<p>Blog Stack es algo más que el agregador, es software libre con <a href="http://www.gnu.org/licenses/agpl-3.0.html">licencia AGPL</a> y el <a href="https://github.com/picodotdev/blog-stack">código fuente</a> usado para generarlo está disponible en un repositorio de GitHub. Cualquiera podría usarlo para crear un agregador de temática similar o de otra (deportes, música, conciertos, cocina, arte, ciencia, educación, ocio, juegos, moda, noticias, literatura, cine, sociedad, economía, política, &hellip;) y con las herramientas que ofrece GitHub cualquiera podría colaborar con su desarrollo, es más, sería bien recibido, a través de código con «pull request» o creando «issues» con cualquier sugerencia o problema que se detecte. Blog Stack está desarrollado usando <a href="https://www.oracle.com/es/technologies/java/overview/index.html">Java</a> y el <em>framework</em> <a href="http://tapestry.apache.org/">Apache Tapestry</a> no como aplicación web sino como motor de plantillas para generar el contenido. Usar Tapestry de esta forma no es lo habitual pero el modelo «pull» seguido por Tapestry en las plantillas que generan el html y el conjunto controlador + plantilla que siguen los componentes me resulta mejor que la separación entre controlador y vista que es lo habitual en encontrar en la mayoría de motores de plantillas o <em>frameworks</em> web. Además, si en un futuro BS se generase en vez como contenido estático mediante una aplicación web prácticamente podría reutilizar todo el código de la aplicación. El funcionamiento de BS es similar a <a href="http://octopress.org/">Octopress</a> (con el que estoy bastante contento al usarlo en mi bitácora) generando el sitio de forma estática en <a href="https://www.openshift.com/">OpenShift</a> y posteriormente hospedado en <a href="https://pages.github.com/">GitHub Pages</a>, generar el contenido de forma estática tiene algunas limitaciones pero por el momento es suficiente y para el proyecto es importante que sea una solución cuyo coste sea bajo. En el inicio está solo en la compra del dominio, con <a href="http://dondominio.com/">DonDominio</a> 10 € anuales. Con un poco de suerte la publicidad permitirá que BS genere en ingresos sus propios gastos lo que garantiza que el coste no lo asuma yo, si fuera así posiblemente pasado un tiempo provocaría que acabase cerrando el servicio.</p>
<p>Si tienes una bitácora sobre programación, desarrollo ágil, software, software libre, gnu/linux, hardware, tecnología o demás temas relacionados solo tienes que indicármelo como explico en la <a href="http://www.blogstack.info/faq">página de preguntas frecuentes</a> y en un poco de tiempo haré que BS agregue el contenido de tu bitácora. Y si estás interesado en información sobre estos temas y quieres descubrir nuevo contenido solo debes suscribirte a alguna de las etiquetas o a la <a href="http://www.blogstack.info/feed.atom.xml">fuente atom de la portada</a>. Por el momento, solo esta agregado el contenido de mis bitácoras pero espero que después de leer esta presentación algunos blogeros se animen a que agregue su contenido.</p>
<p>En las próximas semanas publicaré en mi blog de forma más detallada <a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/">como está montado tecnológicamente Blog Stack por 10 € al año</a> y como he resuelto algunos asuntos comunes en las páginas o aplicaciones web.</p>
<p>¡Hola planeta!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/">Arquitectura y hospedaje de Blog Stack</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="gnu-linux"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/</id>
        <title>Anexo a la guía de instalación y del principiante de Arch Linux</title>
        <updated>2015-05-25T23:00:00+02:00</updated>
        <published>2014-05-02T19:09:56+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Arch Linux es una distribución que deja al usuario decidir en gran medida los componentes que quiere usar. Desde el sistema de arranque, el entorno de escritorio hasta los programas. Para ello no proporciona un instalador ni en modo texto ni con interfaz gráfica que guíe al usuario en diferentes pasos en la instalación de la distribución, en vez de eso proporciona una guía con la información relevante que el usuario necesita conocer para el mismo mediante comandos instale y configure el sistema con los componentes que desee. Este anexo complementa y reúne los comandos que sigo para instalar Arch Linux desde la imagen de instalación hasta el entorno de escritorio GNOME.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p>Antes de migrar a una distribución como <a href="https://www.archlinux.org/">Arch Linux</a> es recomendable ver si esta distribución GNU/Linux es la adecuada para nosotros en función de su <a href="https://wiki.archlinux.org/index.php/The_Arch_Way">filosofía (The Arch Way)</a>, sus <a href="https://wiki.archlinux.org/index.php/Arch_Linux">principales características</a> y las <a href="https://wiki.archlinux.org/index.php/FAQ">preguntas frecuentes</a>. Arch Linux es una distribución orientada a personas que no les importa dedicar un tiempo a aprender como instalarla y posteriormente mantenerla actualizada, esto tampoco debe asustarnos, la <a href="https://wiki.archlinux.org/">wiki de arch</a> es de las mejores fuentes de información que hay para cualquier cosa que necesitemos. Si la wiki no es suficiente ayuda en los <a href="https://bbs.archlinux.org/">foros</a> muy posiblemente encontraremos la solución. Pero para alguien que vaya a <a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html">migrar de Windows o Mac a Linux</a> creo que es más recomendable empezar con alguna distribución que lo pone más fácil para empezar con unos pocos clics, las más conocidas son <a href="http://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="http://www.debian.org/">Debian</a>, <a href="https://www.opensuse.org/">openSUSE</a>, o al menos primeramente probarla en un máquina virtual como <a href="https://www.virtualbox.org/">VirtualBox</a>.</p>
<p>Dado que Arch Linux es una distribución <a href="https://en.wikipedia.org/wiki/Rolling_release">«rolling release»</a> hacer una guía de instalación detallada para ella haría que se quedase obsoleta en ciertos aparatados al cabo de un tiempo. Por ello y aunque a continuación escribiré una guía de instalación es muy recomendable leer la <a href="https://wiki.archlinux.org/index.php/Beginners%27_Guide">guía oficial de Arch Linux</a> y la <a href="https://wiki.archlinux.org/index.php/Beginners%27_Guide">guía de principiante</a> más detallada y en cualquier caso entendamos las acciones que estamos haciendo con cada comando.</p>
<p>Arch Linux no tiene un asistente de instalación y la misma se hace desde la terminal introduciendo comandos, además no hay una guía oficial única que sirva para todos los sistemas ya que algunas cosas cambian dependiendo de las características de nuestro sistema o preferencias, deberemos dedicar algo de tiempo a leer las guías oficiales y alguna otra guía en alguna bitácora como esta, quizá también alguna sección de la wiki. A cambio de este tiempo tendremos un sistema tal y como nosotros queremos y no como los desarrolladores del instalador quisieron. Una vez sabemos que pasos hay que realizar y que comandos hay que introducir y en que orden la instalación no es complicada, lo difícil está en que comandos son dependiendo de nuestro sistema, si tiene BIOS o EFI, si tiene una gráfica AMD, Intel o NVIDIA, si tiene un disco mecánico o SSD, y de nuestras preferencias si queremos una partición swap, el formato de las particiones (ext4, btrfs, &hellip;) y tamaño para cada una.</p>
<p>A pesar de que la guía oficial de Arch Linux está muy bien hay que leer varias páginas de la wiki y hay algunas cosas importantes que hay que tener en cuenta. Lo que aportará esta guía sobre la oficial son esos pequeños detalles a tener en cuenta y mi experiencia con la instalación en mi ordenador.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="1-instalación-base">1. Instalación base</h3>
<p>Sin más, comencemos con la guía. Lo primero que deberemos hacer es <a href="https://www.archlinux.org/download/">descargar el medio de instalación</a> de algún espejo de la red. Los medios con la coletilla -dual nos servirán tanto para sistemas de x86 (32 bits) como para sistemas x86_64 (64 bits). Una vez descargado deberemos grabarlo en un CD o más recomendable en una memoria USB.</p>
<p>Para grabarlo en una memoria USB deberemos usar el comando dd reemplazando /dev/sdx por el dispositivo de la memoria USB en la que queramos grabar el medio cosa que en linux podemos conocer usando el comando lsblk:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ lsblk&#10;</span></span><span class="line"><span class="cl"><span class="c1"># dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx &amp;&amp; sync</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-0.sh</span>
    </div>
</div>
<p>Una vez disponemos del CD o memoria USB deberemos iniciar el sistema con él. La forma de hacerlo cambiará según la marca de nuestro ordenador pero normalmente es usando alguna tecla de entre ESC, F2, F8, F10, F10, en el caso de mi Sony Vaio es usando la tecla ASSIST y con el sistema apagado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux_hubb820d9a5eaf0d8ae98c7f69b9bf8a1b_54396_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Menú instalación Arch Linux"><img src="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux_hubb820d9a5eaf0d8ae98c7f69b9bf8a1b_54396_300x200_fit_box_3.png" width="267" height="200" alt="Menú instalación Arch Linux" title="Menú instalación Arch Linux"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux-prompt_hu99ffacce89647591c52857ba2efec9e0_2199_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio instalación Arch Linux"><img src="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux-prompt_hu99ffacce89647591c52857ba2efec9e0_2199_300x200_fit_box_3.png" width="300" height="167" alt="Inicio instalación Arch Linux" title="Inicio instalación Arch Linux"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez estemos en el prompt inicial de la instalación deberemos cargar el mapa según nuestro teclado, para un teclado español usaremos normalmente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># loadkeys es</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>Modificamos también el archivo locale.gen y descomentamos el dato es_ES.UTF-8 UTF-8, finalmente lo exportamos para el shell:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/locale.gen</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># export LANG=es_ES.UTF-8</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-2.sh</span>
    </div>
</div>
<h4 id="11-particionar-el-disco">1.1 Particionar el disco</h4>
<p>El siguiente paso es particionar el disco duro y antes de hacerlo deberemos asegurarnos de que hemos hecho una copia de seguridad de los datos ya que en el siguiente paso se perderá el contenido del disco duro o SSD. Usaremos el siguiente comando para hacer el <a href="https://wiki.archlinux.org/index.php/GUID_Partition_Table">particionado usando GPT</a>. En función de si nuestro sistema tiene BIOS o EFI las particiones son distintas, si es un ordenador de unos dos años o menos o venía con Windows 8 preinstalador probablemente tenga EFI.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># cgdisk /dev/sda</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-3.sh</span>
    </div>
</div>
<h5 id="111-para-un-sistema-con-bios">1.1.1 Para un sistema con BIOS</h5>
<p>En un sistema BIOS usando GPT el esquema de particiones será el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Tamaño&nbsp;&nbsp;&nbsp;&nbsp; Tipo&#10;</span></span><span class="line"><span class="cl">10 MiB&nbsp;&nbsp;&nbsp;&nbsp; BIOS Boot Partition (ef02)&#10;</span></span><span class="line"><span class="cl">resto&nbsp;&nbsp;&nbsp;&nbsp;  Linux filesystem (8300)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-42.txt</span>
    </div>
</div>
<h5 id="112-para-un-sistema-con-efi">1.1.2 Para un sistema con EFI</h5>
<p>En un sistema EFI las particiones deberán ser las siguientes:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Tamaño&nbsp;&nbsp;&nbsp;&nbsp; Tipo&#10;</span></span><span class="line"><span class="cl">512 MiB&nbsp;&nbsp;&nbsp;&nbsp;EFI System Partition (ef00)&#10;</span></span><span class="line"><span class="cl">resto&nbsp;&nbsp;&nbsp;&nbsp;  Linux filesystem (8300)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-43.txt</span>
    </div>
</div>
<p>Si tenemos un sistema con 8 GiB o más de memoria probablemente podamos prescindir de la partición de swap. Sino podemos crear una tal que:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Tamaño&nbsp;&nbsp;&nbsp;&nbsp; Tipo&#10;</span></span><span class="line"><span class="cl">4 GiB&nbsp;&nbsp;&nbsp;&nbsp;  swap (8200)&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-44.txt</span>
    </div>
</div>
<h4 id="12-formatear-las-particiones">1.2 Formatear las particiones</h4>
<p>Una vez tenemos las particiones creados deberemos formatearlas, sustituimos sdaX por lo que corresponda según el orden en que hemos creado las particiones:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mkfs.fat -F32 /dev/sda1</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkfs.ext4 /dev/sda2</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-4.sh</span>
    </div>
</div>
<p>Y si tenemos partición de swap:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mkswap /dev/sdaX</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># swapon /dev/sdaX</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-5.sh</span>
    </div>
</div>
<h4 id="13-montar-las-particiones">1.3 Montar las particiones</h4>
<p>Lo siguiente que haremos es montar las particiones para empezar a usarlas, primero la partición root (/), que en esta guía es sda2 y luego la partición boot (/boot):</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mount /dev/sda2 /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkdir -p /mnt/boot</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mount /dev/sda1 /mnt/boot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-6.sh</span>
    </div>
</div>
<p>Si nuestro sistema tiene EFI hacemos:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mount /dev/sda2 /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkdir -p /mnt/boot</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mount /dev/sda1 /mnt/boot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-7.sh</span>
    </div>
</div>
<p>Si tenemos un disco SSD montamos las particiones usando las opciones de montaje adecuados para que se use TRIM:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mount -o noatime,discard /dev/sda2 /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkdir -p /mnt/boot</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mount -o noatime,discard /dev/sda1 /mnt/boot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-8.sh</span>
    </div>
</div>
<h4 id="14-establecer-el-mirror">1.4 Establecer el mirror</h4>
<p>Debemos seleccionar un espejo del que se descargarán los paquetes del sistema base, modificamos el archivo /etc/pacman.d/mirrrorlist y ponemos el primero el que deseemos, yo suelo usar:</p>
<p>Server = http://mirrors.kernel.org/archlinux/$repo/os/$arch</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/pacman.d/mirrrorlist</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-9.sh</span>
    </div>
</div>
<h4 id="15-instalar-paquetes-del-sistema-base">1.5 Instalar paquetes del sistema base</h4>
<p>Lo siguiente será instalar los archivos del sistema base el siguiente comando que descargará del espejo de paquetes que hayamos elegido los paquetes del sistema base:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacstrap /mnt base base-devel</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-10.sh</span>
    </div>
</div>
<h4 id="16-generar-de-fstab">1.6 Generar de fstab</h4>
<p>Generamos el archivo fstab que contendrá las características de nuestras particiones y opciones de montaje:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-11.sh</span>
    </div>
</div>
<p>Si usamos un disco SSD revisaremos el archivo asegurándonos que contiene las opciones noatime y discard.</p>
<h4 id="17-chroot-y-configuración-de-sistema-base">1.7 Chroot y configuración de sistema base</h4>
<p>Hacemos un chroot para cambiar el directorio root que estamos usando para configurar nuestro sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># arch-chroot /mnt /bin/bash</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-12.sh</span>
    </div>
</div>
<p>Editamos /etc/locale.gen, lo generamos y exportamos las variables:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/locale.gen</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># locale-gen</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># echo LANG=es_ES.UTF-8 &gt; /etc/locale.conf</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-13.sh</span>
    </div>
</div>
<p>Editamos el archivo /etc/vconsole.conf para cambiar el mapa de teclas de las terminales TTY:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/vconsole.conf</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-14.sh</span>
    </div>
</div>
<p>Introducimos el siguiente contenido:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">KEYMAP=es&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-15.txt</span>
    </div>
</div>
<h4 id="18-establecer-la-zona-horaria">1.8 Establecer la zona horaria</h4>
<p>Establecemos la zona horaria de nuestro sistema:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ln -s /usr/share/zoneinfo/Europe/Madrid /etc/localtime</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-16.sh</span>
    </div>
</div>
<h4 id="19-modificar-el-nombre-de-nuesta-máquina">1.9 Modificar el nombre de nuesta máquina</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># echo archlinux &gt; /etc/hostname</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-17.sh</span>
    </div>
</div>
<h4 id="110-instalar-el-gestor-de-redes">1.10 Instalar el gestor de redes</h4>
<p>NetworkManager puede servirnos, lo instalamos con el gestor de paquetes de arch pacman y activamos el servicio:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S networkmanager</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># systemctl enable NetworkManager.service</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-18.sh</span>
    </div>
</div>
<h4 id="111-cambiar-la-contraseña-de-root">1.11 Cambiar la contraseña de root</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># passwd</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-19.sh</span>
    </div>
</div>
<h4 id="112-instalar-el-gestor-de-arranque">1.12 Instalar el gestor de arranque</h4>
<p>Este es el punto más delicado y que más problemas puede dar, ya que si no lo hacemos bien probablemente nuestro sistema no arrancará y por desgracia está al final de todo el proceso.</p>
<p>Para un sistema con BIOS:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S grub</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-install --target=i386-pc --recheck /dev/sda</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-mkconfig -o /boot/grub/grub.cfg</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-20.sh</span>
    </div>
</div>
<p>Para un sistema con EFI:</p>
<p>En mi equipo que es un Sony Vaio SVE con EFI aún no he conseguido que GRUB me arranque correctamente (al inicial parece que se queda con la pantalla en negro y aparentemente bloqueado aunque puedo reiniciarlo con ctrl-alt-supr) y he tenido que usar <a href="https://wiki.archlinux.org/index.php/REFInd">rEFInd</a>. Aún así también tengo instalado Grub que iniciándolo a través de rEFInd si funciona bien.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S grub efibootmgr dosfstools</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub --recheck</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-mkconfig -o /boot/grub/grub.cfg</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-21.sh</span>
    </div>
</div>
<p>Posteriormente instalo rEFInd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S rEFInd</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp /usr/share/refind/refind_x64.efi /boot/EFI/refind/refind_x64.efi</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp /usr/share/refind/refind.conf-sample  /boot/EFI/refind/refind.conf</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp -r /usr/share/refind/icons /boot/EFI/refind/</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp -r /usr/share/refind/fonts /boot/EFI/refind/</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp -r /usr/share/refind/drivers_x64 /boot/EFI/refind</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-22.sh</span>
    </div>
</div>
<p>Edito el archivo /boot/FI/refind/refind.conf modificando el timeout y la opción seleccionada por defecto:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">timeout 5&#10;</span></span><span class="line"><span class="cl">default_selection &#34;bzImage,vmlinuz&#34;&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-23.txt</span>
    </div>
</div>
<p>También debemos modificar el archivo /boot/refind_linux.conf</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># cp /usr/share/refind/refind_linux.conf-sample /boot/refind_linux.conf</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># blkid &gt;&gt; /boot/refind_linux.conf</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-24.sh</span>
    </div>
</div>
<p>En el archivo sustituiremos los PARTUUID por los que correspondan en nuestro sistema, con el comando blkid los habremos añadido al final del archivo, el contenido debe quedarnos algo como:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">## This file should be present in the same directory as the EFISTUB kernel and initramfs files&#10;</span></span><span class="line"><span class="cl">## More info at http://www.rodsbooks.com/refind/linux.html , http://www.rodsbooks.com/efi-bootloaders/efistub.html&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#34;Boot with defaults&#34;&nbsp;&nbsp;&nbsp;&nbsp;&#34;root=PARTUUID=4e1f91cf-0e6c-41df-82f0-a16134c5973a rootfstype=ext4 rw initrd=/boot/initramfs-linux.img&#34;&#10;</span></span><span class="line"><span class="cl">&#34;Boot to terminal&#34;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;root=PARTUUID=4e1f91cf-0e6c-41df-82f0-a16134c5973a rootfstype=ext4 rw systemd.unit=multi-user.target initrd=/boot/initramfs-linux.img&#34;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-25.txt</span>
    </div>
</div>
<p>Además, con rEFInd hemos de crear el gestor de arranque con el comando efobootmgr. Pero en mi caso para que funcione primero he de borrar todos los que ya existen sino parece que en mi caso se recrea y usa el gestor de arranque EFI de Windows y al inicial el sistema me sale el mensaje «Operating System Not Found», podemos ver los gestores de arranque con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># efibootmgr</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-26.sh</span>
    </div>
</div>
<p>Los borramos con el siguiente comando, donde xxxx se corresponde con el número de gestor de arranque:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># efibootmgr -b xxxx -B</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-27.sh</span>
    </div>
</div>
<p>Finalmente, creamos el gestor de arranque para rEFInd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># efibootmgr -c -d /dev/sda -p 1 -l /EFI/refind/refind_x64.efi -L &#34;rEFInd&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-28.sh</span>
    </div>
</div>
<h4 id="113-finalizar-la-instalación">1.13 Finalizar la instalación</h4>
<p>Finalmente, salimos del entorno enjaulado, desmontamos las particiones y reiniciamos el sistema:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># exit</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># umount -R /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># reboot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-29.sh</span>
    </div>
</div>
<h3 id="2-post-instalación-base">2. Post instalación base</h3>
<p>Ya tenemos el sistema base pero para usarlo seguramente queramos un entorno gráfico, un usuario propio para no usar el usuario root y los programas que solemos usar habitualmente. Para ellos continuaremos en la postinstalación.</p>
<h4 id="21-creación-de-usuario">2.1 Creación de usuario</h4>
<p>Creamos un usuario para no usar el usuario root, sustituimos picodotdev por el nuestro:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># useradd -m -G wheel -s /bin/bash picodotdev</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># passwd picodotdev</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-30.sh</span>
    </div>
</div>
<p>Permitirmos a los usuarios del grupo wheel usar el comando sudo:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S sudo</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># visudo</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-31.sh</span>
    </div>
</div>
<p>Descomentamos la siguiente linea:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">%wheel ALL=(ALL) ALL&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-32.txt</span>
    </div>
</div>
<p>Editamos el archivo <em>pacman.conf</em> según nuestras preferencias, por ejemplo, para permitir el color en la terminal y para mostrar el progreso global.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/pacman.conf</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-33.sh</span>
    </div>
</div>
<h4 id="22-instalar-el-entorno-gráfico">2.2 Instalar el entorno gráfico</h4>
<p>Instalamos los paquetes básicos del entorno gráfico, en este caso los controladores para una tarjeta gráfica intel:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S xorg-server xorg-xinit xorg-server-utils mesa xf86-video-intel&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-34.sh</span>
    </div>
</div>
<h4 id="23-instalar-el-entorno-de-escritorio">2.3 Instalar el entorno de escritorio</h4>
<p>Instalamos el entorno de escritorio según nuestras preferencias, en mi caso GNOME:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S gnome gnome-extra gnome-tweak-tool&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-35.sh</span>
    </div>
</div>
<p>Habilitamos el servicio del gestor de escritorio GDM:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> gdm.service&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-36.sh</span>
    </div>
</div>
<h4 id="24-instalación-de-yaourt">2.4 Instalación de yaourt</h4>
<p>Si pretendemos usar algún paquete de <a href="https://wiki.archlinux.org/index.php/Arch_User_Repository">AUR</a> deberemos instalar la herramienta <em>yaourt</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/pacman.conf</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-37.sh</span>
    </div>
</div>
<p>Añadimos su repositorio:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">[archlinuxfr]&#10;</span></span><span class="line"><span class="cl">SigLevel=Optional TrustAll&#10;</span></span><span class="line"><span class="cl">Server=http://repo.archlinux.fr/$arch</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-38.txt</span>
    </div>
</div>
<p>Lo instalamos con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -Syu&#10;</span></span><span class="line"><span class="cl">$ sudo pacman -S yaourt&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-39.sh</span>
    </div>
</div>
<p>A partir de este momento podemos usar el comando <em>yaourt</em> en vez de pacman.</p>
<h4 id="25-instalar-de-programas">2.5 Instalar de programas</h4>
<p>Los programas que instalaremos cambiarán según nuestras preferencias, estos son casi todos los que suelo utilizar:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ yaourt -S vim vim-spell-es chromium firefox firefox-i18n-es-es ntfs-3g faenza-icon-theme gimp filezilla imagemagick gparted ufw shotwell libreoffice vlc gstreamer0.10-plugins calibre ntp flashplugin tomcat-native rsync jdk7-openjdk mariadb redis wget git subversion openssh unrar base-devel&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-40.sh</span>
    </div>
</div>
<h4 id="26-activar-el-servicio-de-sincronización-de-hora">2.6 Activar el servicio de sincronización de hora</h4>
<p>Para mantener la hora de nuestro sistema correctamente podemos usar un servicio que se encargue de mantenerla con un servicio a través de la red.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> ntpd.service&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-41.sh</span>
    </div>
</div>
<p>El resultado de la instalación y usando GNOME es el siguiente:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/escritorio-gnome_hu23bbeee9dabb636c901d0c64f6ff7acd_101598_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/escritorio-gnome_hu23bbeee9dabb636c901d0c64f6ff7acd_101598_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a></p>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/</id>
        <title>Introducción a Elasticsearch</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-04-25T17:15:05+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Elasticsearch es una potente herramienta que nos permite indexar una gran volumen de datos y posteriormente hacer consultas sobre ellos soportando entre otras muchas cosas búsquedas aproximadas, facetas y resaltado. Un uso puede ser hacer consultas de texto completo, al estar los datos indexados los resultados se obtienen de forma muy rápida.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/elastic-elasticsearch.svg" width="200" height="200" alt="Elasticsearch" title="Elasticsearch"  class=""></p>
</div>
<p>Continuando con la forma de como dar solución a la búsquedas en las entidades de dominio en esta entrada profundizaré en la solución que comentaba de usar <a href="https://www.elastic.co/es/elasticsearch/">Elasticsearch</a>. Elasticsearch se basa en <a href="https://lucene.apache.org/core/">Lucene</a> pero expone su funcionalidad a través de una interfaz REST recibiendo y enviando datos en formato JSON y oculta mediante esta interfaz los detalles internos de Lucene. Esta interfaz permite que pueda ser utilizada por cualquier plataforma no solo Java, puede usarse desde Python, .NET, PHP o incluso desde un navegador con JavaScript. Es persistente, es decir, que lo que indexemos en ella sobrevivirá a un reinicio del servidor.</p>
<p>Como comentaba en <a href="https://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html">el artículo anterior de búsquedas sobre entidades de dominio</a> ES nos puede servir para hacer búsquedas a texto completo pero también podemos hacer otra serie de cosas adicionales que no podemos con una base de datos relacional aunque soporte en su lenguaje SQL búsqueda a texto completo, por ejemplo, resaltado (highlight) y facetas (facets), también permite hacer búsquedas vagas (fuzzy) y soporta diferentes analizadores según el idioma de la propiedad en que se busque. El indexar y desindexar los datos en elasticsearch para que luego puedan ser buscados es responsabilidad nuestra y además de insertarlos o eliminarlos en la base de datos debemos hacer lo mismo en ES ya sea haciéndolo en ambos sitios a la vez o mediante un proceso de fondo que se encargue de ello.</p>
<p>La instalación de ES es muy sencilla, basta con <a href="https://www.elastic.co/es/downloads/">descargar el zip de su distribución</a>, descomprimirlo e iniciarlo con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ elasticsearch&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>Después de unos segundos deberemos ver algo como lo siguiente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/images/elasticsearch_hu7ee877f142c7fa41ee5fe0416e5b8906_76248_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/images/elasticsearch_hu7ee877f142c7fa41ee5fe0416e5b8906_76248_300x200_fit_box_3.png" width="300" height="126"  class="lozad "></a></p>
</figure>
</div>
<p>Elasticsearch usa sus propios conceptos y aunque no es una base de datos relacional algunos pueden ser similares. Lo que en en una base de datos relacional es un esquema en ES es un índice, lo que en la primera es una tabla en ES es un tipo, continuando una fila en ES es un documento y finalmente una columna es una propiedad en ES.</p>
<p>La documentación de Elasticsearch es un documentación de referencia probablemente pero para aprender a sacarle el máximo provecho probablemente debamos buscar algún manual o libro que nos lo explique de una forma más didáctica. Algunas opciones son el libro <a href="https://exploringelasticsearch.com/">Exploring Elasticsearch</a> y el <a href="https://www.elasticsearchtutorial.com/">tutorial Elasticsearch</a>.</p>
<p>Veamos como crear y borrar un índice, para ello utilizaremos la herramienta curl:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPUT <span class="s1">&#39;http://localhost:9200/blogbitix&#39;</span>&#10;</span></span><span class="line"><span class="cl">$ curl -XDELETE <span class="s1">&#39;http://localhost:9200/blogbitix&#39;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-2.sh</span>
    </div>
</div>
<p>Aunque Elasticsearch es orientado a documentos y estos no tienen que adherirse a un esquema como en una base de datos relacional, podemos instruir a Elasticsearch como queremos que haga las búsquedas sobre los campos del documento. Para ello definimos la correspondencia (mapping). A continuación pondré el caso hipotético de un tipo libro que tiene las propiedades de nombre y descripción en varios idiomas, una serie de etiquetas para catalogarlo y una cantidad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPUT <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_mapping&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;properties&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;nombre&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;type&#34; : &#34;object&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;properties&#34; : { &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: { &#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;analyzed&#34;, &#34;analyzer&#34; : &#34;spanish&#34; },&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: { &#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;analyzed&#34;, &#34;analyzer&#34; : &#34;english&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;descripcion&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;type&#34; : &#34;object&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;properties&#34; : { &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: { &#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;analyzed&#34;, &#34;analyzer&#34; : &#34;spanish&#34;, &#34;store&#34;: &#34;yes&#34; },&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: { &#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;analyzed&#34;, &#34;analyzer&#34; : &#34;english&#34;, &#34;store&#34;: &#34;yes&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;etiquetas&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;type&#34; : &#34;object&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;properties&#34; : { &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: { &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;type&#34; : &#34;multi_field&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fields&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;term&#34; : { &#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;analyzed&#34;, &#34;analyzer&#34; : &#34;spanish&#34; },&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;untouched&#34; : {&#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;not_analyzed&#34;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: { &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;type&#34; : &#34;multi_field&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fields&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;term&#34; : { &#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;analyzed&#34;, &#34;analyzer&#34; : &#34;english&#34; },&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;untouched&#34; : {&#34;type&#34; : &#34;string&#34;, &#34;index&#34; : &#34;not_analyzed&#34;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;cantidad&#34; : { &#34;type&#34; : &#34;long&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-3.sh</span>
    </div>
</div>
<p>Con la siguiente petición podemos ver el mapeo de un tipo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_mapping?pretty=true&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-4.sh</span>
    </div>
</div>
<p>El mapeo no es necesario definirlo previamente pero es aconsejable para ciertas propiedades sino queremos que ES tome valores por defecto o haga suposiciones, a continuación insertamos los documentos. Cada documento tiene un identificativo que deberemos asignarle y para indexarlo básicamente proporcionamos un JSON con las propiedades del documento. Elasticsearch se encargará de indexarlo para que una búsqueda posterior se ejecute rápidamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPUT <span class="s1">&#39;http://localhost:9200/blogbitix/libro/1&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;nombre&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: &#34;PlugIn Tapestry&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: &#34;PlugIn Tapestry&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;descripcion&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: &#34;Desarrollo de aplicaciones y páginas web con Apache Tapestry&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: &#34;Development of applications and web pages with Apache Tapestry&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;etiquetas&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: [&#34;libro&#34;, &#34;tecnologia&#34;, &#34;tapestry&#34;, &#34;java&#34;, &#34;español&#34;],&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: [&#34;book&#34;, &#34;tecnology&#34;, &#34;tapestry&#34;, &#34;java&#34;, &#34;spanish&#34;]&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;cantidad&#34; : 1000&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -XPUT <span class="s1">&#39;http://localhost:9200/blogbitix/libro/2&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;nombre&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: &#34;Tapestry 5 - Desarrollo rápido de aplicaciones web en Java&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: &#34;Tapestry 5 - Rapid web application development in Java&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;descripcion&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: &#34;Una guía completa presentando Apache Tapestry y su aproximación inovadora para la construcción de aplicaciones web modernas&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: &#34;A comprehensive guide, introducing Apache Tapestry and its innovative approach to building modern web applications&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;etiquetas&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: [&#34;libro&#34;, &#34;tecnologia&#34;, &#34;tapestry&#34;, &#34;java&#34;, &#34;inglés&#34;],&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: [&#34;book&#34;, &#34;tecnology&#34;, &#34;tapestry&#34;, &#34;java&#34;, &#34;english&#34;]&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;cantidad&#34; : 1000&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -XPUT <span class="s1">&#39;http://localhost:9200/blogbitix/libro/3&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;nombre&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: &#34;Tapestry in Action&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: &#34;Tapestry in Action&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;descripcion&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: &#34;Tapestry in Action e la introducción definitiva a Tapestry 3 escrito por Howard Lewis Ship, el creador de Tapestry&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: &#34;Tapestry in Action is the definitive introduction to Tapestry 3 written by Howard Lewis Ship, the creator of Tapestry&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;etiquetas&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;es&#34;: [&#34;libro&#34;, &#34;tecnologia&#34;, &#34;tapestry&#34;, &#34;java&#34;, &#34;inglés&#34;],&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;en&#34;: [&#34;book&#34;, &#34;tecnology&#34;, &#34;tapestry&#34;, &#34;java&#34;, &#34;english&#34;]&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;cantidad&#34; : 1000&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-5.sh</span>
    </div>
</div>
<p>Con las anteriores peticiones hemos indexado 3 documentos, podemos ver los datos de cada uno de ellos con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-6.sh</span>
    </div>
</div>
<p>Una vez tenemos unos cuantos documentos indexados en ES podemos empezar a hacer búsquedas. Elasticsearch para hacer las búsquedas usa su propio lenguaje de DSL, no es sencillo y la documentación de ES no es muy útil para aprender a como usarla. Pondré algunos ejemplos simples, probablemente no reales y no representativos de todo el potencial que puede ofrecer ES. El primero es una búsqueda por una determinada palabra.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_search?pretty=true&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fuzzy&#34; : { &#34;descripcion.es&#34;: &#34;tapestry&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-7.sh</span>
    </div>
</div>
<p>Una búsqueda similar a la anterior pero con más condiciones, exigiendo que no tenga unas palabras en concreto y algunas que deberían tener haciendo que ES valore más los documentos que las tengan.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_search?pretty=true&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;bool&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;must&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fuzzy&#34; : { &#34;descripcion.es&#34;: &#34;tapestry&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;must_not&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;query_string&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fields&#34; : [&#34;descripcion.es&#34;],&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : &#34;\&#34;tapestry 3\&#34;&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;should&#34; : [{ &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;match&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;descripcion.es&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : &#34;guía&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;type&#34; : &#34;phrase&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-8.sh</span>
    </div>
</div>
<p>Además de búsquedas ES puede ofrecernos más funcionalidades como las facetas con las que podemos obtener un sumatorio de los resultados. En la siguiente consulta buscamos los documentos con una determinada palabra y además le pedimos a ES que nos devuelva cuantos documentos hay que cumplan ese criterio en cada etiqueta. Esto probablemente es lo que usen en la tienda de Amazon cuando muestran cuantos elementos hay en las diferentes categorizaciones. Aunque en Amazon solo muestran las categorías de los elementos buscados probablemente podrían mostrar cuantos elementos hay en cada una de esas categorías.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_search?pretty=true&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fuzzy&#34; : { &#34;descripcion.es&#34;: &#34;tapestry&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;facets&#34;: {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;etiquetas&#34;: { &#34;terms&#34;: { &#34;field&#34;: &#34;etiquetas.es.untouched&#34; } }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-9.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/images/categorias-amazon_hu1dcef78c0f3b8024ebdf2c7c44f6bce9_17382_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Categorías de productos (facets) en Amazon"><img src="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/images/categorias-amazon_hu1dcef78c0f3b8024ebdf2c7c44f6bce9_17382_300x200_fit_box_3.png" width="85" height="200" alt="Categorías de productos (facets) en Amazon" title="Categorías de productos (facets) en Amazon"  class="lozad "></a></p>
</figure>
</div>
<p>Otra de las funcionalidades que nos puede interesar es que ES nos ofrezca sugerencias para determinados términos, en el siguiente ejemplo solicitamos además de la búsqueda sugerencias para algunas palabras que tienen fallos de escritura.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_search?pretty=true&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fuzzy&#34; : { &#34;descripcion.es&#34;: &#34;tapestry&#34; }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;suggest&#34;: {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;suggest1&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;text&#34; : &#34;tapestyr desarrallo&#34;,&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;term&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;field&#34; : &#34;descripcion.es&#34;  &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-10.sh</span>
    </div>
</div>
<p>Finalmente, otra cosa que nos puede interesar es que ES nos resalte las palabras de determinados campos para destacar las coincidencias de los resultados de forma visual que se han encontrado. Esto necesita { store: &ldquo;yes&rdquo; } en la correspondencia de la propiedad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XGET <span class="s1">&#39;http://localhost:9200/blogbitix/libro/_search?pretty=true&#39;</span> -d <span class="s1">&#39;{&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;query_string&#34;: {  &#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;query&#34;: &#34;Tapestry&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&#34;highlight&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;fields&#34; : {&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;descripcion.es&#34; : { }&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-11.sh</span>
    </div>
</div>
<p>Estos son solo unos pocos ejemplos, ES seguro que puede ofrecer muchas cosas más que leyendo solo la documentación de referencia es difícil descubrir. Unos buenos libros que explican muchas de las posibilidades y opciones de forma más didáctica son <a href="https://amzn.to/2sChYkF">Elasticsearch: The Definitive Guide</a> y/o <a href="https://amzn.to/37GgF31">Elasticsearch Server</a>, en algunos casos la documentación propia del proyecto es suficiente pero en el caso de Elasticsearch algunos libros como estos son casi necesarios para dominarlo.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1449358543&amp;linkId=f844862e917834820c94b2dbae241b1c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00JXLF7AK&amp;linkId=b790502cf2724f0007de5bc473e81c9e" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/08/busquedas-de-texto-completo-en-objetos-de-dominio.html">Búsquedas de texto completo en objetos de dominio</a></li>
<li><a href="http://www.elasticsearch.org">Elasticsearch</a></li>
<li><a href="http://exploringelasticsearch.com/">Exploring Elasticsearch</a></li>
<li><a href="http://www.elasticsearchtutorial.com/">Tutorial Elasticsearch</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/</id>
        <title>Ejemplo lista de tareas con Backbone y React</title>
        <updated>2015-10-01T20:00:00+02:00</updated>
        <published>2014-04-11T16:33:28+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>He desarrollado este ejemplo de lista de tareas usando diferentes herramientas javascript primeramente con solo Backbone y después con Marionette. En este caso realizaré el mismo ejemplo para ver las diferencias usando la combinación Backbone para los modelos y React para las vistas junto con otras herramientas como ReactJS, Mustache, Jasmine, Grunt e i18n. Un ejemplo bastante completo de lo que ofrece javascript en estos momentos con la composición de herramientas que más me ha gustado.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/backbone.svg" width="200" height="35" alt="Backbone" title="Backbone"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/react.svg" width="200" height="200" alt="React" title="React"  class=""></p>
</div>
<p>En anteriores entradas explicaba como hacer el típico ejemplo que se suele usar como demostración en los <em>framework</em> MVC de JavaScript que consiste en una lista de tareas en la que se pueden añadir nuevas, marcarlas como completadas y eliminarlas. Realice este ejemplo en uno de ellos <a href="https://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html">usando solo Backbone</a> y posteriormente <a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">usando Marionette</a>. Estos ejemplos eran parte de una serie de artículos sobre JavaScript que la que mostraba como usar muchas otras herramientas como <a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">Require JS</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html">Mustache</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html">logging con javscript</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html">capturar errores en javascript</a>, <a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html">introducción a Backbone</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html">lista de tarea con Backbone, RESTEasy y Tapestry</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html">pruebas unitarias con Jasmine y Sinon</a>, <a href="https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/">Usar Grunt para ejecutar teses unitarios de código JavaScript</a> y que constituyen parte del actual «estado del arte» en cuanto a desarrollo con JavaScript.</p>
<p>La lista de tareas aunque es un ejemplo sencillo sirve perfectamente como ejercicio para mostrar el uso de los <em>frameworks</em> MVC. En esta entrada voy a mostrar como hacer el mismo ejemplo usando <a href="http://backbonejs.org/">Backbone</a> y <a href="https://reactjs.org/">React</a> y veremos, en mi opinión, que el ejemplo es mucho mas sencillo y lógico.</p>
<p>La parte más complicada y menos intuitiva del ejemplo de la lista de tareas con solamente Backbone o con <a href="https://marionettejs.com/">Marionette</a> probablemente era la V del MVC. Backbone es un <em>framework</em> que deja bastante libertad al desarrollador pudiendo usar únicamente las partes que necesitemos de él, sin embargo, esta sencillez nos obliga a gestionar ciertas «tareas de fontanería» y repetitivas nosotros mismos como la gestión de las vistas y la memoria. Marionette trata de dar solución a parte de estas tareas necesarias además de proporcionar unas guías y arquitectura para el desarrollo de las aplicaciones. Sin embargo, aún con Marionette la construcción de la parte de la vista con el uso de ItemView, CollectionView y Layout comentados en la <a href="https://github.com/marionettejs/backbone.marionette">documentación</a> me resultó poco intuitivo y en cierta medida todavía complicado, no acabé convencido del todo, con React he acabado con la sensación que hacer algo más complejo que este ejemplo es algo al menos manejable.</p>
<p>React es una librería que en algunos casos se está usando en aplicaciones junto con Backbone para proporcionar la parte de la vista y controlador que en conjunto definen lo que en React se conoce como un componente. De esta manera Backbone proporciona los modelos, eventos, routing , &hellip; y React proporciona la representación de esos modelos en html y el código encargado de gestionar el estado de esa vista. React tiene ciertas ventajas adicionales por su funcionamiento y es que cuando se cambia algo en la vista no se reemplaza el html completo de la vista y se inserta uno nuevo sino que React busca las diferencias entre la vista actual y la nueva y realiza únicamente los cambios necesarios para tener la vista nueva, esto tiene la ventaja de que el proceso es más eficiente y rápido y puede notarse en aplicaciones con muchos datos gestionados en el cliente. Pero lo que más me ha gustado de React es la definición del concepto de componente (vista + controlador) que por una parte hace que la creación de las vistas sea mucho más sencilla e intuitiva que en Backbone o Marionette y que junto con el controlador permite crear piezas reusables de código.</p>
<p>Los componentes de React reemplazan a las vistas de Backbone y vistas, controladores y layouts de Marionette. En el nuevo ejemplo los cambios principales se encuentran en el archivo tareas.js que contiene el código de la aplicación de lista de tareas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span><span class="lnt">144&#10;</span><span class="lnt">145&#10;</span><span class="lnt">146&#10;</span><span class="lnt">147&#10;</span><span class="lnt">148&#10;</span><span class="lnt">149&#10;</span><span class="lnt">150&#10;</span><span class="lnt">151&#10;</span><span class="lnt">152&#10;</span><span class="lnt">153&#10;</span><span class="lnt">154&#10;</span><span class="lnt">155&#10;</span><span class="lnt">156&#10;</span><span class="lnt">157&#10;</span><span class="lnt">158&#10;</span><span class="lnt">159&#10;</span><span class="lnt">160&#10;</span><span class="lnt">161&#10;</span><span class="lnt">162&#10;</span><span class="lnt">163&#10;</span><span class="lnt">164&#10;</span><span class="lnt">165&#10;</span><span class="lnt">166&#10;</span><span class="lnt">167&#10;</span><span class="lnt">168&#10;</span><span class="lnt">169&#10;</span><span class="lnt">170&#10;</span><span class="lnt">171&#10;</span><span class="lnt">172&#10;</span><span class="lnt">173&#10;</span><span class="lnt">174&#10;</span><span class="lnt">175&#10;</span><span class="lnt">176&#10;</span><span class="lnt">177&#10;</span><span class="lnt">178&#10;</span><span class="lnt">179&#10;</span><span class="lnt">180&#10;</span><span class="lnt">181&#10;</span><span class="lnt">182&#10;</span><span class="lnt">183&#10;</span><span class="lnt">184&#10;</span><span class="lnt">185&#10;</span><span class="lnt">186&#10;</span><span class="lnt">187&#10;</span><span class="lnt">188&#10;</span><span class="lnt">189&#10;</span><span class="lnt">190&#10;</span><span class="lnt">191&#10;</span><span class="lnt">192&#10;</span><span class="lnt">193&#10;</span><span class="lnt">194&#10;</span><span class="lnt">195&#10;</span><span class="lnt">196&#10;</span><span class="lnt">197&#10;</span><span class="lnt">198&#10;</span><span class="lnt">199&#10;</span><span class="lnt">200&#10;</span><span class="lnt">201&#10;</span><span class="lnt">202&#10;</span><span class="lnt">203&#10;</span><span class="lnt">204&#10;</span><span class="lnt">205&#10;</span><span class="lnt">206&#10;</span><span class="lnt">207&#10;</span><span class="lnt">208&#10;</span><span class="lnt">209&#10;</span><span class="lnt">210&#10;</span><span class="lnt">211&#10;</span><span class="lnt">212&#10;</span><span class="lnt">213&#10;</span><span class="lnt">214&#10;</span><span class="lnt">215&#10;</span><span class="lnt">216&#10;</span><span class="lnt">217&#10;</span><span class="lnt">218&#10;</span><span class="lnt">219&#10;</span><span class="lnt">220&#10;</span><span class="lnt">221&#10;</span><span class="lnt">222&#10;</span><span class="lnt">223&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s1">&#39;tareas&#39;</span><span class="p">,</span> <span class="p">[</span> <span class="s1">&#39;jquery&#39;</span><span class="p">,</span> <span class="s1">&#39;underscore&#39;</span><span class="p">,</span> <span class="s1">&#39;backbone&#39;</span><span class="p">,</span> <span class="s1">&#39;react&#39;</span><span class="p">,</span> <span class="s1">&#39;mustache&#39;</span><span class="p">,</span> <span class="s1">&#39;plantillas&#39;</span><span class="p">,</span> <span class="s1">&#39;i18n!i18n/nls/mensajes&#39;</span> <span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">React</span><span class="p">,</span> <span class="nx">Mustache</span><span class="p">,</span> <span class="nx">Plantillas</span><span class="p">,</span> <span class="nx">Mensajes</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nx">render</span><span class="p">(</span><span class="nx">plantilla</span><span class="p">,</span> <span class="nx">datos</span><span class="p">,</span> <span class="nx">mensajes</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nx">datos</span> <span class="o">||</span> <span class="p">{};</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nx">mensajes</span> <span class="o">||</span> <span class="p">{};</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">vista</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nx">message</span><span class="o">:</span> <span class="nx">m</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">p</span> <span class="o">=</span> <span class="nx">Plantillas</span><span class="p">[</span><span class="nx">plantilla</span><span class="p">];</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">pp</span> <span class="o">=</span> <span class="nx">p</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nx">pp</span><span class="p">(</span><span class="nx">vista</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="c1">// An example generic Mixin that you can add to any component that should react&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// to changes in a Backbone component. The use cases we&#39;ve identified thus far&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// are for Collections -- since they trigger a change event whenever any of&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// their constituent items are changed there&#39;s no need to reconcile for regular&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// models. One caveat: this relies on getBackboneModels() to always return the&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// same model instances throughout the lifecycle of the component. If you&#39;re&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// using this mixin correctly (it should be near the top of your component&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// hierarchy) this should not be an issue.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="kd">var</span> <span class="nx">BackboneMixin</span> <span class="o">=</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">componentDidMount</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="c1">// Whenever there may be a change in the Backbone data, trigger a reconcile.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">this</span><span class="p">.</span><span class="nx">getBackboneModels</span><span class="p">().</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">model</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;add change remove reset&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">forceUpdate</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="kc">null</span><span class="p">),</span> <span class="k">this</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">},</span> <span class="k">this</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">componentWillUnmount</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="c1">// Ensure that we clean up any dangling references when the component is&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// destroyed.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">this</span><span class="p">.</span><span class="nx">getBackboneModels</span><span class="p">().</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">model</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">},</span> <span class="k">this</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">Tarea</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">urlRoot</span> <span class="o">:</span> <span class="s1">&#39;rest/tareas/tarea&#39;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">defaults</span> <span class="o">:</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nx">id</span> <span class="o">:</span> <span class="kc">null</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nx">descripcion</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nx">completada</span> <span class="o">:</span> <span class="kc">false</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">toogle</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;completada&#39;</span><span class="p">,</span> <span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;completada&#39;</span><span class="p">));</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">Tareas</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;rest/tareas&#39;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">model</span><span class="o">:</span> <span class="nx">Tarea</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">findCompletadas</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">models</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">tarea</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="nx">tarea</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;completada&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">removeCompletadas</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">findCompletadas</span><span class="p">(),</span> <span class="kd">function</span><span class="p">(</span><span class="nx">tarea</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">tarea</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">TareaComponent</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">componentDidMount</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">_this</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">ui</span> <span class="o">=</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">completada</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;input[name=completada]&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDOMNode</span><span class="p">())</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">};</span>&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">completada</span><span class="p">.</span><span class="nx">change</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">_this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tarea</span><span class="p">.</span><span class="nx">toogle</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">_this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tarea</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>		&#10;</span></span><span class="line"><span class="cl">		<span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">//			return (&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//				&lt;label className=&#34;checkbox&#34;&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;input type=&#34;checkbox&#34; name=&#34;completada&#34; checked={(this.props.tarea.get(&#39;completada&#39;))?&#39;checked&#39;:&#39;&#39;}/&gt; &lt;span className={this.props.tarea.completada}&gt;{this.props.tarea.get(&#39;descripcion&#39;)}&lt;/span&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//				&lt;/label&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//			);&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">return</span> <span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">label</span><span class="p">({</span><span class="nx">className</span><span class="o">:</span><span class="s1">&#39;checkbox&#39;</span><span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">input</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;checkbox&#39;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span><span class="s1">&#39;completada&#39;</span><span class="p">,</span> <span class="nx">checked</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tarea</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;completada&#39;</span><span class="p">))</span><span class="o">?</span><span class="s1">&#39;checked&#39;</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">}),</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">span</span><span class="p">({</span><span class="nx">className</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tarea</span><span class="p">.</span><span class="nx">completada</span><span class="p">},</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tarea</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;descripcion&#39;</span><span class="p">))</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">TareasComponent</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">tareas</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">tarea</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">//		&nbsp;&nbsp;&nbsp;&nbsp;	return (&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//		&nbsp;&nbsp;&nbsp;&nbsp;		&lt;li&gt;&lt;TareaComponent tarea={tarea}/&gt;&lt;/li&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//		&nbsp;&nbsp;&nbsp;&nbsp;	);&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="k">return</span> <span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">li</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">						<span class="nx">TareaComponent</span><span class="p">({</span><span class="nx">tarea</span><span class="o">:</span><span class="nx">tarea</span><span class="p">})</span>&#10;</span></span><span class="line"><span class="cl">				<span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span> <span class="k">this</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">//			return (&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//				&lt;ul&gt;{tareas}&lt;/ul&gt;				&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//			);&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">return</span> <span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">ul</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">tareas</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">EstadoComponent</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getData</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="s1">&#39;COMPLETADAS_tareas_de_TOTAL_completadas&#39;</span><span class="o">:</span> <span class="nx">Mustache</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="nx">Mensajes</span><span class="p">.</span><span class="nx">COMPLETADAS_tareas_de_TOTAL_completadas</span><span class="p">,</span> <span class="nx">d</span><span class="p">),</span>&#10;</span></span><span class="line"><span class="cl">				<span class="s1">&#39;Muy_bien_has_completado_todas_las_tareas&#39;</span><span class="o">:</span> <span class="nx">Mensajes</span><span class="p">.</span><span class="nx">Muy_bien_has_completado_todas_las_tareas</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">};</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">estado</span> <span class="o">=</span> <span class="nx">render</span><span class="p">(</span><span class="s1">&#39;estado&#39;</span><span class="p">,</span> <span class="nx">d</span><span class="p">,</span> <span class="nx">m</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">//			return (&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//				&lt;span className=&#34;estado&#34;&gt;{estado}&lt;/span&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//			);&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">return</span> <span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">span</span><span class="p">({</span><span class="nx">className</span><span class="o">:</span><span class="s1">&#39;estado&#39;</span><span class="p">},</span> <span class="nx">estado</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Métodos&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">getData</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">completadas</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">findCompletadas</span><span class="p">().</span><span class="nx">length</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">total</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">completadas</span><span class="o">:</span> <span class="nx">completadas</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">total</span><span class="o">:</span> <span class="nx">total</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">};</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">TareasApp</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">mixins</span><span class="o">:</span> <span class="p">[</span><span class="nx">BackboneMixin</span><span class="p">],</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">getBackboneModels</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">];</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">getInitialState</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="p">{</span><span class="nx">tareas</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Tareas</span><span class="p">()};</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">componentDidMount</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">var</span> <span class="nx">_this</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">ui</span> <span class="o">=</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">nuevaTarea</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;input[name=nuevaTarea]&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDOMNode</span><span class="p">()),</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">limpiar</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;input[name=limpiar]&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getDOMNode</span><span class="p">())</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">};</span>&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">nuevaTarea</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Eventos&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">nuevaTarea</span><span class="p">.</span><span class="nx">keypress</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="c1">// Comprobar si la tecla pulsada es el return&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="k">if</span> <span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">which</span> <span class="o">==</span> <span class="mi">13</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="kd">var</span> <span class="nx">descripcion</span> <span class="o">=</span> <span class="nx">_this</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">nuevaTarea</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">trim</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">					<span class="c1">// Comprobar si se ha introducido descripción de la tarea&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="k">if</span> <span class="p">(</span><span class="nx">descripcion</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">						<span class="k">return</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">					<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">					<span class="c1">// Añadir la tarea y limpiar el input&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>					<span class="kd">var</span> <span class="nx">tarea</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Tarea</span><span class="p">({</span>&#10;</span></span><span class="line"><span class="cl">						<span class="nx">descripcion</span><span class="o">:</span> <span class="nx">descripcion</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">						<span class="nx">completada</span><span class="o">:</span> <span class="kc">false</span>&#10;</span></span><span class="line"><span class="cl">					<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">_this</span><span class="p">.</span><span class="nx">addTarea</span><span class="p">(</span><span class="nx">tarea</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">_this</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">nuevaTarea</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">limpiar</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="nx">_this</span><span class="p">.</span><span class="nx">removeTareasCompletadas</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">		&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">//			return (&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//				&lt;div&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;h2&gt;{Mensajes.Lista_de_tareas}&lt;/h2&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;input type=&#34;text&#34; name=&#34;nuevaTarea&#34; className=&#34;form-control&#34; placeholder={Mensajes.Introduce_una_nueva_tarea} /&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;TareasComponent tareas={this.state.tareas} /&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;EstadoComponent tareas={this.state.tareas} /&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;br/&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//					&lt;input type=&#34;button&#34; name=&#34;limpiar&#34; value={Mensajes.Limpiar} disabled={(this.isTareasCompletadas())?null:&#39;disabled&#39;} className=&#34;btn&#34; /&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//				&lt;/div&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="c1">//			);&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">return</span> <span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">div</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">h2</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">Mensajes</span><span class="p">.</span><span class="nx">Lista_de_tareas</span><span class="p">),</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">input</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;text&#39;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span><span class="s1">&#39;nuevaTarea&#39;</span><span class="p">,</span> <span class="nx">className</span><span class="o">:</span><span class="s1">&#39;form-control&#39;</span><span class="p">,</span> <span class="nx">placeholder</span><span class="o">:</span><span class="nx">Mensajes</span><span class="p">.</span><span class="nx">Introduce_una_nueva_tarea</span><span class="p">}),</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">TareasComponent</span><span class="p">({</span><span class="nx">tareas</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">}),</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">EstadoComponent</span><span class="p">({</span><span class="nx">tareas</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">}),</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">br</span><span class="p">(),</span>&#10;</span></span><span class="line"><span class="cl">					<span class="nx">React</span><span class="p">.</span><span class="nx">DOM</span><span class="p">.</span><span class="nx">input</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;button&#39;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span><span class="s1">&#39;limpiar&#39;</span><span class="p">,</span> <span class="nx">value</span><span class="o">:</span><span class="nx">Mensajes</span><span class="p">.</span><span class="nx">Limpiar</span><span class="p">,</span> <span class="nx">disabled</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isTareasCompletadas</span><span class="p">())</span><span class="o">?</span><span class="s1">&#39;&#39;</span><span class="o">:</span><span class="s1">&#39;disabled&#39;</span><span class="p">,</span> <span class="nx">className</span><span class="o">:</span><span class="s1">&#39;btn&#39;</span><span class="p">})</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Métodos&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">isTareasCompletadas</span><span class="o">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">findCompletadas</span><span class="p">().</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">addTarea</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">tarea</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">tarea</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nx">tarea</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">removeTareasCompletadas</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">removeCompletadas</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">resetTareas</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">tareas</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">reset</span><span class="p">(</span><span class="nx">tareas</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">fetch</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="c1">// Con reset:true solo se lanza un evento para todos los cambios que se produzcan en la colección&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">tareas</span><span class="p">.</span><span class="nx">fetch</span><span class="p">({</span><span class="nx">reset</span><span class="o">:</span><span class="kc">true</span><span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">Tarea</span><span class="o">:</span> <span class="nx">Tarea</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">Tareas</span><span class="o">:</span> <span class="nx">Tareas</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">TareaComponent</span><span class="o">:</span> <span class="nx">TareaComponent</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">TareasComponent</span><span class="o">:</span> <span class="nx">TareasComponent</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">EstadoComponent</span><span class="o">:</span> <span class="nx">EstadoComponent</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">		<span class="nx">TareasApp</span><span class="o">:</span> <span class="nx">TareasApp</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">};</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">});</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tareas.js</span>
    </div>
</div>
<p>El resultado es el siguiente:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/images/backbone-react_hua47f19bdb771f96b8f9ecc179db0dc06_133834_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/images/backbone-react_hua47f19bdb771f96b8f9ecc179db0dc06_133834_300x200_fit_box_3.png" width="237" height="200"  class="lozad "></a></p>
</figure>
</div>
<p>Los elementos de las vistas se recomienda definirlas con los elementos que proporciona React con React.DOM, pueden definirse más al estilo de html con jsx pero esto hace que el javascript haya de compilarse para transformar ese jsx/html a los elementos React.DOM, el mayor problema es que esto es un proceso costoso lo que puede ralentizar la carga de una página y que el compilador tiene un tamaño considerable de unos 300 KiB. El JSX es más claro y parecido al resultado final que el código equivalente React.DOM pero aún así el código javascript es suficientemente claro. Si aún así quisiésemos usar JSX lo recomendable sería que los archivos con contenido jsx se precompilase en un momento anterior de enviarlo al cliente, posiblemente antes del despliegue de la aplicación en el servidor.</p>
<p>Para probar el código podemos hacerlo abriendo el archivo test/javascript/SpecRunner.html, sin embargo, deberemos hacerlo con Chrome o Chromium y lanzándolo con un parámetro opcional para permitir la carga de los archivos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chromium --allow-file-access-from-files&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chromium.sh</span>
    </div>
</div>
<p>También podríamos probarlo usando gradle con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew jasmine&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew.sh</span>
    </div>
</div>
<p>Sin embargo, <a href="http://phantomjs.org/">PhantomJS</a> que es lo que se utiliza para simular el navegador en las pruebas con jasmine y grunt, no soporta la función bind produciéndose la siguiente excepción al usarse en la librería de React.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Error: define: &#39;undefined&#39; is not a function (evaluating &#39;RegExp.prototype.test.bind(&#10;</span></span><span class="line"><span class="cl">&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; /^(data|aria)-[a-z_][a-z\d_.\-]*$/&#10;</span></span><span class="line"><span class="cl">&gt;&gt;   )&#39;)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>error-bind.txt</span>
    </div>
</div>
<p>Para evitarlo debemos añadir un <em>polyfill</em>. Deberemos añadir los polyfills de <a href="https://github.com/cujojs/poly">cujojs/poly</a>, podemos hacer uso de ellos con RequireJS basta como añadirlo como dependencia:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;poly/function&#39;</span><span class="p">,</span> <span class="s1">&#39;specs/tareas-specs&#39;</span><span class="p">],</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">});</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main-specs.js</span>
    </div>
</div>
<p>Este problema de la función <em>bind</em> ya esta incluido como <a href="https://code.google.com/p/phantomjs/issues/detail?id=522">petición en PhantomJS</a> y probablemente se resuelva en la versión 2.0.</p>
<p>El ejemplo con el <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/BackboneReact">código fuente completo de este ejemplo</a> está en <a href="https://github.com/picodotdev">mi repositorio de GitHub</a>, puedes probarlo en tu equipo con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew tomcatRun&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-tomcatRun.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">Introducción y ejemplo de RequireJS</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html">Introducción y ejemplo de Mustache</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html">Logging en JavaScript con log4javascript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html">Capturar errores de JavaScript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/optimizar-modulos-de-requirejs.html">Optimizar módulos de RequireJS y archivos JavaScript</a></li>
<li><a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html">Introducción y ejemplo de Backbone.js</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html">Ejemplo de pruebas unitarias en javascript con Jasmine y Sinon</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">Ejemplo lista de tareas con Marionette</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/">Usar Grunt para ejecutar teses unitarios de código JavaScript</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/">Moment.js, librería JavaScript para fechas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/">Internacionalización (i18n) en JavaScript</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Compatibility">Function/bind#Compatibility</a></li>
<li><a href="http://neugierig.org/software/blog/2014/02/react-jsx-coffeescript.html">React, JSX, and CoffeeScript</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="programacion"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/</id>
        <title>Usar Grunt para ejecutar teses unitarios de código JavaScript</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-04-04T16:43:23+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/grunt.png" width="200" height="236" alt="Grunt" title="Grunt"  class=""></p>
</div>
<p>En la <a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">serie de artículos que escribí sobre javascript</a> hice un ejemplo más o menos complejo y parecido a lo que podría ser una aplicación real usando muchas de las herramientas que ahora se consideran una buena opción para desarrollar aplicaciones javascript como <a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">RequireJS</a>, <a href="http://www.genbetadev.com/desarrollo-web/patron-de-diseno-mvc-del-lado-cliente-con-backbonejs">Backbone</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">Marionette</a>, <a href="https://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html">Jasmine y Sinon</a>. En el <a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">ejemplo de la lista de tareas con estas herramientas</a> hice unas cuantas pruebas unitarias para mostrar en un ejemplo como son y la forma de usar <a href="http://jasmine.github.io/">Jasmine</a>.</p>
<p>Sin embargo, para ejecutar las pruebas unitarias se necesitaba un navegador y hacerlo de forma manual cuando quisiéramos comprobar el estado de las pruebas. Lo ideal tal y como se comenta en el libro <a href="https://amzn.to/2SVraLu">The Pragmatic programmer</a>, es que las pruebas unitarias se ejecuten de forma automatizada con la herramienta de construcción que usemos, esto evitará que se nos olvide ejecutarlas en cada cambio y así descubriremos los errores pronto, también podremos hacer que se ejecuten en un entorno de integración continua como podría ser <a href="http://jenkins-ci.org/">Jenkins</a>. En esta entrada mostraré como ejecutar esas pruebas unitarias de javascript con una tarea de la herramienta <a href="http://www.gradle.org/">Gradle</a> y usando una herramienta similar a Gradle pero para JavaScript llamada <a href="http://gruntjs.com/">Grunt</a>.</p>
<p>Primeramente necesitaremos instalar node.js y el paquete de javascript grunt-cli con de forma global en el sistema:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S nodejs</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># npm install -g grunt-cli</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>En caso de que tengamos pruebas unitarias con Jasmine como es el caso de este ejemplo deberemos instalar los siguientes paquetes en el directorio raíz del proyecto:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ npm install grunt-contrib-jasmine&#10;</span></span><span class="line"><span class="cl">$ npm install grunt-template-jasmine-requirejs&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-2.sh</span>
    </div>
</div>
<p>La siguiente linea como se explica en <a href="https://www.npmjs.org/package/grunt-template-jasmine-requirejs">la documentación del paquete grunt-template-jasmine-requirejs</a> puede ser necesaria si en algún momento obtenemos el siguiente error:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ npm install grunt-contrib-jasmine@0.5.3 --save-dev&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-3.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">npm ERR! peerinvalid The package grunt-contrib-jasmine does not satisfy its siblings&#39; peerDependencies requirements!&#10;</span></span><span class="line"><span class="cl">npm ERR! peerinvalid Peer grunt-template-jasmine-requirejs@0.1.10 wants grunt-contrib-jasmine@~0.5.3&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mensaje.txt</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ npm install&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-4.sh</span>
    </div>
</div>
<p>Si usamos <a href="https://mochajs.org/">Mocha</a> como librería de pruebas unitarias probablemente disponemos de varios paquetes que podemos instalar de forma similar. Una vez instaladas estas herramientas debemos crear dos archivos necesarios para Grunt, que son <a href="https://github.com/picodotdev/elblogdepicodev/blob/master/MarionetteREST/package.json">package.json</a> y <a href="https://github.com/picodotdev/elblogdepicodev/blob/master/MarionetteREST/grunt.js">grunt.js</a>. El primero contiene la definición del paquete js para Grunt, quizá lo más destacable es que el nombre del paquete debe estar en minúsculas sino obtendremos un error parecido a «Error: Invalid name: &ldquo;MarionetteREST&rdquo; npm ERR! at ensureValidName». El archivo grunt.js es la descripción de las tareas de grunt que contiene un poco de configuración donde indicamos las especificaciones que contienen las pruebas unitarias, las dependencias necesarias para ejecutar las pruebas y las tareas que se definen. Con todo esto ya podemos ejecutar las pruebas con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ grunt --gruntfile grunt.js jasmine:requirejs&#10;</span></span><span class="line"><span class="cl">$ ./gradlew jasmine&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-5.sh</span>
    </div>
</div>
<p>Sin embargo, puede que deseemos ejecutarlas desde la herramienta de construcción que usemos, en mi caso con Gradle. Para añadir el soporte a Gradle de ejecutar las pruebas unitarias a su vez con Grunt debemos añadir la siguiente configuración a nuestro archivo build.gradle:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">jasmine</span><span class="o">(</span><span class="nl">type:</span> <span class="n">GruntTask</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gruntArgs</span> <span class="o">=</span> <span class="s2">&#34;jasmine:requirejs&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">GruntTask</span> <span class="kd">extends</span> <span class="n">Exec</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">String</span> <span class="n">gruntExecutable</span> <span class="o">=</span> <span class="n">Os</span><span class="o">.</span><span class="na">isFamily</span><span class="o">(</span><span class="n">Os</span><span class="o">.</span><span class="na">FAMILY_WINDOWS</span><span class="o">)</span> <span class="o">?</span> <span class="s2">&#34;grunt.cmd&#34;</span> <span class="o">:</span> <span class="s2">&#34;grunt&#34;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">String</span> <span class="n">switches</span> <span class="o">=</span> <span class="s2">&#34;--gruntfile grunt.js&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">String</span> <span class="n">gruntArgs</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span> &#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="nf">GruntTask</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">super</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="na">setExecutable</span><span class="o">(</span><span class="n">gruntExecutable</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setGruntArgs</span><span class="o">(</span><span class="n">String</span> <span class="n">gruntArgs</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="na">args</span> <span class="o">=</span> <span class="s2">&#34;$switches $gruntArgs&#34;</span><span class="o">.</span><span class="na">trim</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s2">&#34; &#34;</span><span class="o">)</span> <span class="k">as</span> <span class="n">List</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Veremos como salida el siguiente resultado en la terminal.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/images/grunt-jasmine_hu79f9c7ae54435c10e67b3a5309b3972b_34504_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ejecutar teses Jasmine con Grunt"><img src="https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/images/grunt-jasmine_hu79f9c7ae54435c10e67b3a5309b3972b_34504_300x200_fit_box_3.png" width="300" height="147" alt="Ejecutar teses Jasmine con Grunt" title="Ejecutar teses Jasmine con Grunt"  class="lozad "></a></p>
</figure>
</div>
<p>Al hacer esta entrada de forma que las pruebas se ejecuten con Grunt he movido las plantillas de Mustache de lugar, antes estaban embebidas en el html en el ejemplo <a href="https://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html">Backbone</a> y las he movido a dentro del javascript de la aplicación de la lista de tareas. Esto hace que para pasar las pruebas no tengamos una dependencia sobre un archivo html externo en el que buscar las plantillas, también así el javascript es más autónomo y está incluido en él todo lo que necesita.</p>
<p>Aún tengo otra entrada preparada sobre javascript que es el mismo ejemplo de la lista de tareas pero en vez de usando las vistas de Backbone o Marionette usando <a href="https://reactjs.org/">React</a>. El <a href="https://github.com/picodotdev/elblogdepicodev/tree/master/MarionetteREST">código fuente completo de este ejemplo sobre pruebas unitarias y Marionette</a> está en <a href="https://github.com/picodotdev">mi repositorio de GitHub</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">Introducción y ejemplo de RequireJS</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html">Introducción y ejemplo de Mustache</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html">Logging en JavaScript con log4javascript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html">Capturar errores de JavaScript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/optimizar-modulos-de-requirejs.html">Optimizar módulos de RequireJS y archivos JavaScript</a></li>
<li><a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html">Introducción y ejemplo de Backbone.js</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html">Ejemplo de pruebas unitarias en javascript con Jasmine y Sinon</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">Ejemplo lista de tareas con Marionette</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Ejemplo lista de tareas con Backbone y React</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="programacion"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/</id>
        <title>Desempaquetado y análisis Samsung SSD 840 EVO 250 GB</title>
        <updated>2017-01-31T22:00:00+01:00</updated>
        <published>2014-03-28T18:22:41+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>En estos momentos sin lugar a dudas la actualización más provechosa para mejorar el rendimiento de un equipo es una unidad de estado sólido o <a href="https://es.wikipedia.org/wiki/Unidad_de_estado_s%C3%B3lido"><abbr title="Solid State Drive">SSD</abbr></a> una vez tengamos memoria RAM suficiente, unos 2 GiB suelen ser suficientes para tareas ofimáticas y acceder a internet y los equipos que se están vendiendo ahora ya suelen venir con 4 GiB e incluso 8 GiB. El tiempo de acceso a un disco duro mecánico es grande y la velocidad de transferencia es pequeña, en los momentos que se require un uso intensivo del disco se nota que son el cuello de botella del sistema. A veces una mejora en el software puede producir una notable aumento de rendimiento con el mismo hardware pero cuando ya no hay margen de mejora en el software con una mejora en el hardware podemos conseguir el aumento de rendimiento buscado, este es el caso de los SSD.</p>
<p>Así que después de estar leyendo prácticamente en todas las opiniones de los usuarios que han adquirido un SSD la apreciable mejora conseguida finalmente decidí comprar uno. El modelo que he elegido ha sido un Samsung 840 EVO SSD de 250 GB, que en el momento de adquirirlo es posiblemente una de las mejores opciones en cuanto calidad/precio, aunque posteriormente ha salido la evolución de este modelo el <a href="https://amzn.to/2kdQsRO">Samsung 850 EVO de 250 GB</a> con la novedad de que usa 3D NAND con la que consigue mayor densidad de almacenamiento que para los usuarios se traducirá en menor coste, otra buena opción era el Crucial MX100 256 GB o el Crucial M550 256 GB. Los SSD aún siguen siendo un producto con un precio más alto que los discos mecánicos pero desde la aparición de los primeros modelos han bajado notablemente de precio y ya se están poniendo alrededor de los 110 € para los modelos de 250 GB y en 65 € para los modelos de 120 GB, unos precios que empiezan a ser muy accesibles y posiblemente sus ventas empiecen a dispararse y a ser incluidos de serie en los equipos nuevos. Hay modelos de más capacidad, de <a href="https://amzn.to/2kdYGJK">1 TB también en la serie Samsung 850 EVO</a> y <a href="https://amzn.to/2jSgJ7j">500 GB</a> pero los precios son algo abultados y posiblemente tampoco necesitemos tanto espacio.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08PC5DKZQ&amp;linkId=dcd291ad706e925f4dfca3c39045a54f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B077SF8KMG&amp;linkId=30e60238410c4c1f9584f13e067e8cca" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07MFBLN7K&amp;linkId=d8ee308b386ae8fc1ed0978391f98ade" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B077SQ8J1V&amp;linkId=048e7dde98c59aff3bdf3eda82b0057a" title="Amazon" class="lozad"></iframe>
</div>
<p>En cualquier caso el SSD para mi tampoco ha sido una necesidad real sino más bien un capricho que me he permitido, si bien es cierto que el rendimiento del SSD hace palidecer al disco duro mecánico que tenía y los comentarios sobre los SSD están totalmente justificados también se puede vivir perfectamente con un disco duro mecánico si no nos importa esperar algo de tiempo. Con el disco duro mecánico el sistema me iniciaba en 1 minuto 30 segundos hasta llegar al inicio de sesión GDM y otros 30 segundos más hasta que el equipo me era usable en el escritorio. Con el SSD, y sin exagerar, el sistema se inicia en unos 10 segundos hasta llegar al inicio de sesión GDM y pocos segundos más hasta llegar al escritorio. En el inicio del sistema y en el arranque de alguna aplicación pesada que es donde más intensivamente se usa el disco es donde más notaremos el aumento de rendimiento, en mi caso que uso <a href="https://www.archlinux.org/">Arch Linux</a> también lo noto en las actualización del sistema cuando instala los nuevos paquetes. Mi opinión es que el SSD es posiblemente la mejor actualización para prolongar algo más la vida de un equipo si la memoria RAM no es el problema pero tampoco es imprescindible a pesar de ser cierto el gran aumento de rendimiento.</p>
<p>El disco Samsung 840 EVO SSD de 250 GB lo compré en <a href="https://amzn.to/2kdYOJe">Amazon</a>, en algunos productos como este suelen tener los mejores precios y una abundante cantidad de modelos donde elegir. En las ocasiones que he comprado en ellos el proceso de compra y el envío ha sido perfecto, en tres días laborables tenía los productos en la dirección de entrega y en todo momento he estado informado tanto del estado del pedido como del envío del producto. Amazon es un buen modelo a seguir en cuanto a comercio electrónico. Si bien es cierto que si hubiese tenido oportunidad y los precios hubiesen sido similares o un poco superiores lo hubiese preferido comprar en un tienda local, <a href="http://www.izarmicro.net/">IzarMicro</a> me era una buena opción pero en el momento que hice el pedido el precio era algo superior.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-1_hue875e3cde77b35c74edb7fda5287dd14_41072_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Samsung SSD 840 EVO 250 GB"><img src="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-1_hue875e3cde77b35c74edb7fda5287dd14_41072_300x200_fit_q90_box.jpg" width="209" height="200" alt="Samsung SSD 840 EVO 250 GB" title="Samsung SSD 840 EVO 250 GB"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-2_hua8ac5d32dabfa939737cb1a81dce974f_52578_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Samsung SSD 840 EVO 250 GB"><img src="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-2_hua8ac5d32dabfa939737cb1a81dce974f_52578_300x200_fit_q90_box.jpg" width="214" height="200" alt="Samsung SSD 840 EVO 250 GB" title="Samsung SSD 840 EVO 250 GB"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-3_hud320d1470c31ae4ba3244cf3c280b515_46140_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Samsung SSD 840 EVO 250 GB"><img src="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-3_hud320d1470c31ae4ba3244cf3c280b515_46140_300x200_fit_q90_box.jpg" width="224" height="200" alt="Samsung SSD 840 EVO 250 GB" title="Samsung SSD 840 EVO 250 GB"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-4_hu86c6b2fdb83a5e1c7277d0569203f917_38656_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Samsung SSD 840 EVO 250 GB"><img src="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-4_hu86c6b2fdb83a5e1c7277d0569203f917_38656_300x200_fit_q90_box.jpg" width="210" height="200" alt="Samsung SSD 840 EVO 250 GB" title="Samsung SSD 840 EVO 250 GB"  class="lozad "></a></p>
</figure>
</div>
<p>Como se aprecia en las imágenes de desempaquetado el disco viene en una caja del tamaño de un CD conteniendo:</p>
<ul>
<li>El disco SSD</li>
<li>Unas pegatinas</li>
<li>Un CD con el manual y software.</li>
<li>Unas guías de instalación</li>
<li>La hoja de garantía</li>
</ul>
<p>Las especificaciones técnicas de la serie de discos SSD de Samsung 840 EVO SSD son:</p>
<ul>
<li>SATA 3 (6 Gbps) compatible con SATA 2 (3 Gbps)</li>
<li>7 mm de altura en 2.5&quot;</li>
<li>Lectura secuencial hasta 540 MB/s y 520 MB/s de escritura</li>
</ul>
<p>El disco es muy ligero pesando solo unos pocos gramos, tiene un tamaño de 7 milímetros de altura y la dimensiones son de 2.5 pulgadas, el tamaño más ampliamente usando en los discos para los portátiles no muy viejos. El disco se nota que en su mayor parte está vacío, he visto en <a href="http://www.xbitlabs.com/articles/storage/display/samsung-840-evo_3.html">alguna foto</a> que en realidad el disco solo ocupa una fracción del tamaño total de 2.5 pulgadas, por lo que los SSD todavía tienen margen para aumentar su capacidad, un punto donde aún les ganan los discos mecánicos. El ruido que hace es ninguno por lo que ya no oiremos &ldquo;rascar&rdquo; al disco cuando se escriba de forma intensiva en él. Aunque en la etiqueta se indica que el disco tiene una capacidad de 250 GB en realidad usables son unos 232 GiB una vez formateado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-5_hu55e9c6599c56f8a877c891ff2c742b32_48431_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-5_hu55e9c6599c56f8a877c891ff2c742b32_48431_300x200_fit_q90_box.jpg" width="300" height="187"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-6_hufaa2f94481d86770cb24bb55a5d83e6b_76320_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/images/samsung-840-evo-ssd-6_hufaa2f94481d86770cb24bb55a5d83e6b_76320_300x200_fit_q90_box.jpg" width="300" height="195"  class="lozad "></a></p>
</figure>
</div>
<p>Los SSD aún tienen margen de mejora, seguirán bajando de precio, aumentarán de capacidad y no tardarán mucho en masificarse para dejar de ser un producto a comprar para los que buscan una mejora de rendimiento. Como muestra no hace ni una semana de que lo compre y ya ha bajado de 125 € a 120 €. Un punto donde todavía puede haber dudas es cuanto a la durabilidad, si realizamos tareas que escriban muchos datos en el disco puede que prefiramos usarlo junto con un disco mecánico. En teoría los discos TLC como el <a href="https://amzn.to/2kdQsRO">Samsung 850 EVO de 250 GB</a> tiene una esperanza de vida de 1000 escrituras por celda, a unos 10 GiB de datos escritos por día la esperanza de vida estimada es de 11.7 años para el modelo de 120 GB y 23.4 para el modelo de 250 GB. Los 10 GiB de escritura por día me parece una estimación escasa para un día de trabajo, en mi trabajo suelo estar entre 20 GiB y 40 GiB de escritura, principalmente porque uso una base de datos MySQL que por cada importación escribe al disco unos 14 GiB. También es cierto que los 1000 ciclos de escritura quizá sean algo bajos y las celdas aguanten algo más, probablemente y salvo que le demos mucho uso al disco antes de que falle cambiaremos de equipo.</p>
<p>Si alguien está pensando en comprar un disco SSD lo primero que deberá hacer es calcular el espacio mínimo que va a necesitar para saber que modelo comprar y el uso que le va a dar, una opción de 120 GB puede que sea más que suficiente, se recomienda que el espacio ocupado no sea superior al 75% de la capacidad. Si va usarse de forma intensiva en cuanto a escrituras o se necesita mucho espacio es recomendable seguir usando un disco mecánico. También se puede optar por un SSD para el sistema y un disco duro mecánico USB externo para el almacenamiento de datos, con una caja de disco duro USB externa podemos aprovechar el disco duro mecánico que sustituimos, una opción es <a href="https://amzn.to/3hnky2h">una caja USB 3.0</a> que cumple perfectamente la misión además de tener un precio bastante asequible.</p>
<p>En siguientes artículos comentaré como monitorizar las escrituras a disco, obtener la cantidad de datos escritos y leídos, una guía de instalación de <a href="https://www.archlinux.org/">Arch Linux</a> con notas específicas para SSD entre otras cosas y una serie de recomendaciones para proteger la esperanza de vida del SSD. En internet hay multitud de análisis sobre este SSD, dos de los que más me han gustado han sido <a href="http://www.anandtech.com/show/6459/samsung-ssd-840-testing-the-endurance-of-tlc-nand">Testing the endurance of TLC NAND</a> y otro de <a href="http://www.xbitlabs.com/articles/storage/display/samsung-840-evo.html">xbitlabs</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.samsung.com/global/business/semiconductor/minisite/SSD/us/html/about/SSD840EVO.html">Página de Samsung SSD 840 EVO</a></li>
<li><a href="http://www.samsung.com/global/business/semiconductor/minisite/SSD/global/html/ssd850evo/overview.html">Página de Samsung SSD 850 EVO</a></li>
<li><a href="http://www.anandtech.com/show/6459/samsung-ssd-840-testing-the-endurance-of-tlc-nand">Test de resistencia SSD 840 EVO</a></li>
<li><a href="http://www.xbitlabs.com/articles/storage/display/samsung-840-evo.html">Artículo sobre Samsung 840 EVO</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/</id>
        <title>Novedades y nuevas características de Java 8</title>
        <updated>2016-03-12T12:00:00+01:00</updated>
        <published>2014-03-21T16:03:27+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La octava versión de Java añade numerosas novedades importantes al lenguaje. Algunas de las más destacadas son las expresiones lambdas y los streams que dotan al lenguaje de características de programación funcional pero también lo hacen en muchas construcciones de código comunes más expresivo, menos extenso y más legible. Pero hay otras novedades relevantes que detallo en el artículo como los métodos por defecto en interfaces o la nueva API para fechas.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El 18 de marzo de 2014 se publicó la nueva versión de la plataforma <a href="https://www.oracle.com/technetwork/java/javase/overview/java8-2100321.html">Java 8</a>, Java 7 fue liberada el en julio de 2011. Java 8 incorpora varias novedades siguiendo la tendencia de otros lenguajes como <em>lambdas</em> o <em>closures</em> o una demandada nueva API para el manejo de fechas entre otras muchas características más. La <a href="http://openjdk.java.net/projects/jdk8/features">lista completa de novedades</a> es bastante amplia, a continuación algunas características de Java explicadas con un poco más de detalle.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="introducción">Introducción</h3>
<p>Java 8 representa una evolución notable en este lenguaje de programación al mismo nivel o más del que supuso la versión Java 5. Aunque tengas varios años de experiencia quizá aún no has tenido oportunidad de usar todas las novedades que se han incorporado en cada versión en proyectos reales, probablemente porque los caminos de migración de las empresas son lentos y muchas siguen usando versiones antiguas en sus aplicaciones. Para conocer y aprovechar todas estas novedades de Java recomiendo los siguientes libros que son de lo mejor que he encontrado como documentación, el primer libro es <a href="https://amzn.to/2Qt2Mzv">Thinking in Java</a> que nos introduce en este lenguaje de programación desde el inicio, aunque ya conozcas o uses Java el libro <a href="https://amzn.to/39FqX5c">Effective Java</a> contiene gran cantidad de información y consejos para usar Java de una forma más efectiva haciendo un repaso de las características del lenguaje que aunque no esté actualizado con las novedades que introduce Java 8 casi todo sigue siendo aplicable, el último libro es <a href="https://amzn.to/2QNW1XJ">Java 8 in Action</a> que explica en mucho más detalle que lo hecho en este artículo cada una de las nuevas características de Java 8 y complementa el libro Effective Java pero aprovechando las novedades introducidas en el lenguaje.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk8/">Características de Java 8</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/8-relnotes.html">Documentación de Java 8</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/overview-summary.html">Documentación Javadoc de Java 8</a></li>
</ul>
<p>La lista de novedades es la siguiente:</p>
<ul>
<li>Se añaden las expresiones <em>lambda</em> o closures y se adapta la API para usarlas en los sitios que se pueda.</li>
<li>Se definen nuevos perfiles compactos para dispositivos que no necesitan toda la API Java, esto es una alternativa a la modularización. Inicialmente la modularización era una característica que estaba planificada para Java 8 pero finalmente se ha aplazado a posteriores versiones.</li>
<li>Incluido nuevo <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/nashorn/index.html">motor de JavaScript Nashorn</a> que implementa ECMAscript 5.1 y es más rápido que su predecesor Rhino.</li>
<li>Eliminación de espacio de memoria Permanent Generation (PermGen) que pasa a llamarse Metaspace. Su tamaño
será dinámico pero no evitará fugas de memoria.</li>
<li>Soporte para la creación de una máquina virtual menor a 3 MB.</li>
<li>Acceso mediante reflection a los nombres de los parámetros. Mejorará la legibilidad del código que use reflection y permitirá mejorar el soporte en los IDE.</li>
<li>Ordenación en java.util.Arrays de forma paralela.</li>
<li>Operaciones masivas sobre colecciones tales como filter/map/reduce (streams) de forma serializada o paralela.</li>
<li>Soporte de forma estándar para la codificación y decodificación Base64.</li>
<li>Nueva API para Date y Time.</li>
<li>Varias mejoras de seguridad.</li>
<li>Se incorporan en la máquina virtual Java HotSpot características que estaban en JRockit, convergiendo ambas máquinas virtuales. Se incorpora Mission Control.</li>
<li>Mejoras en JDBC la base para el acceso en bases de datos en Java.</li>
<li><a href="http://openjdk.java.net/projects/jdk8/features">Otras novedades</a>.</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0131872486&amp;linkId=13cd447a466645c3dd9162d935caf076" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00B8V09HY&amp;linkId=8bb841ba7a877bb075e20d754e9df4fd" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291994&amp;linkId=51d39d999467395851bae9f3931e788c" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="nuevas-características">Nuevas características</h3>
<h4 id="streams">Streams</h4>
<p>Los streams no son un nuevo tipo de colección son una nueva forma de recorrer las colecciones distinta a los <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html">Iterator</a>. La ventaja de los streams es que pueden procesarse de forma serializada o paralela y proporcionan un estilo de operaciones más funcionales. Un flujo consiste un una fuente (una colección), varias operaciones intermedias (de filtrado o transformación) y una operación final que produce un resultado (suma, cuenta&hellip;). Los streams son lazy de modo que las operaciones solo se realizan cuando se llama a la operación final, también son eficientes no necesitando en algunos casos procesar todos los elementos del stream para devolver el resultado final.</p>
<p>Tradicionalmente en la API de colecciones la iteración sobre los elementos debíamos proporcionarla de forma externa. Con Java 8 podemos expresarla de forma interna, de la siguiente manera.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">alturaMedia</span> <span class="o">=</span> <span class="n">personas</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">mapToInt</span><span class="o">((</span><span class="n">Persona</span> <span class="n">p</span><span class="o">)</span> <span class="err">–</span><span class="o">&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">p</span><span class="o">.</span><span class="na">getAltura</span><span class="o">();</span> <span class="o">})</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">average</span><span class="o">();</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Stream.java</span>
    </div>
</div>
<h4 id="lambda">Lambda</h4>
<p>Esta es una de las principales novedades y que más se estaba echando de menos en Java de otros lenguajes como <a href="https://www.groovy-lang.org/">Groovy</a> o <a href="https://www.python.org/">Python</a>. Las expresiones <em>lambda</em> son funciones que no está asociadas a un determinado nombre y que pueden pasarse como argumento a otras funciones. Tienen el siguiente aspecto:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="o">(</span><span class="n">Persona</span> <span class="n">persona</span><span class="o">)</span> <span class="err">–</span><span class="o">&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">persona</span><span class="o">.</span><span class="na">getAltura</span><span class="o">();</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Lambda.java</span>
    </div>
</div>
<p>El uso de expresiones lambdas junto con el stream API proporciona a Java 8 características de programación funcional, pero sobre todo hace el código más sencillo, menos extenso, más expresivo y más legible. En las expresiones <em>lambda</em> de Java podemos seguir aprovechándonos de la compilación estática y del tipado fuerte.</p>
<h4 id="referencias-de-métodos">Referencias de métodos</h4>
<p>Todo el código desarrollado previamente a Java 8 no hace uso de las lambdas, pero con las <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html">referencias a métodos</a> podemos usar esos métodos ya implementados como si se tratasen de funciones lambdas. Hay diferentes formas de hacer referencias a métodos:</p>
<ul>
<li>A métodos estáticos</li>
<li>A un método de una instancia concreta</li>
<li>A un método de instancia de una instancia arbitraria de un tipo</li>
<li>A un constructor</li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="c1">// Método estático&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nl">Persona:</span><span class="o">:</span><span class="n">compareAltura</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Método de una instancia concreta&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nl">persona:</span><span class="o">:</span><span class="n">getAltura</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Método de instancia de una instancia arbitraria de un tipo&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nl">Persona:</span><span class="o">:</span><span class="n">getAltura</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Constructor&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nl">Persona:</span><span class="o">:</span><span class="k">new</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ReferenciaMetodos.java</span>
    </div>
</div>
<h4 id="interfaces-funcionales">Interfaces funcionales</h4>
<p>Una interfaz funcional es aquella que solo tiene un método abstracto (sin implementación). Algunos ejemplos de interfaces funcionales son <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html">Runnable</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/awt/event/ActionListener.html">ActionListener</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html">Comparator</a> y <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html">Callable</a>. Para definir una interfaz funcional se puede usar la anotación <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html">@FunctionalInterface</a> y pueden representarse con una expresión lambda. En el siguiente ejemplo puede apreciarse que con las interfaces funcionales y las lambdas podemos hacer lo mismo de forma más clara, menos verbosa y con código más legible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">personas</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Persona</span> <span class="n">p1</span><span class="o">,</span> <span class="n">Persona</span> <span class="n">p2</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">p1</span><span class="o">.</span><span class="na">getAltura</span><span class="o">().</span><span class="na">compareTo</span><span class="o">(</span><span class="n">p2</span><span class="o">.</span><span class="na">getAltura</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">});</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>InterfazFuncional-1.java</span>
    </div>
</div>
<p>En Java 8 podemos hacer:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">personas</span><span class="o">,</span> <span class="o">(</span><span class="n">Persona</span> <span class="n">p1</span><span class="o">,</span> <span class="n">Persona</span> <span class="n">p2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">p2</span><span class="o">.</span><span class="na">getAltura</span><span class="o">().</span><span class="na">compareTo</span><span class="o">(</span><span class="n">p2</span><span class="o">.</span><span class="na">getAltura</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">});</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>InterfazFuncional-2.java</span>
    </div>
</div>
<p>Java 8 incorpora varias interfaces funcionales que puede ser usadas en expresiones <em>lambda</em>, entre ellas están:</p>
<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html">Predicate</a>: función que retorna un booleano dado un argumento.</li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html">Function</a>: función que retorna un valor dado un argumento.</li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Supplier.html">Supplier</a>: producen un tipo, al contrario que las funciones no tienen argumento</li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Consumer.html">Consumer</a>: representa una operación a realizarse en un argumento.</li>
</ul>
<h4 id="métodos-por-defecto-en-interfaces">Métodos por defecto en interfaces</h4>
<p>Hasta ahora las interfaces en Java solo podían definir métodos pero no sus implementaciones. El problema con las interfaces es que cuando se modifican se rompen todas las clases que las usan. Esto se ha resuelto de tal forma que se puedan añadir nuevos métodos con implementación a las interfaces y ha sido necesario para incorporar las lambdas a interfaces existentes como List. En Java 8 las interfaces podrán incorporar implementaciones para algunos de sus métodos, teniendo así algo parecido a herencia múltiple.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Math</span> <span class="o">{</span> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="kt">int</span> <span class="nf">multiply</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MetodosDefault.java</span>
    </div>
</div>
<h4 id="métodos-estáticos-en-interfaces">Métodos estáticos en interfaces</h4>
<p>Además de definir métodos por defecto en las interfaces a partir de ahora podemos definir métodos estáticos. Definiendo métodos estáticos en las interfaces evitaremos tener que crear clases de utilidad. Podremos incluir en un mismo tipo (la interfaz) todos los métodos relacionados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Persona</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="nf">getNombre</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">getAltura</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="n">String</span> <span class="nf">toStringDatos</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getNombre</span><span class="o">()</span> <span class="o">+</span> <span class="s">&#34; &#34;</span> <span class="o">+</span> <span class="n">getAltura</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MetodosStatic.java</span>
    </div>
</div>
<h4 id="mejoras-en-la-programación-asíncrona">Mejoras en la programación asíncrona</h4>
<p>Los procesadores actuales están aumentando su capacidad de proceso más a base de concurrencia proporcionando más núcleos que a base de hacerlos más rápidos en Ghz o <a href="https://es.wikipedia.org/wiki/Instrucciones_por_ciclo">instrucciones por ciclo</a>, los lenguajes de programación tienen que adaptarse para facilitar su aprovechamiendo de forma fácil. Desde las primeras versiones de Java ya se incluía soporte para trabajar con hilos o threads sin embargo su programación es propensa a errores y difícil de depurar. Java 7 con el nuevo soporte conocido como <a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html">Fork/Join</a> mejoraba la situación.</p>
<p>Por otra parte para maximizar el aprovechamiento de los recursos disponibles cuando surgen bloqueos de entrada/salida como acceso a disco o comunicación por red surge la programación asíncrona. Para ello Java 8 mejora el soporte existente desde Java 7 con la clase <a href="https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Future.html">Future</a> que permite recoger el resultado de una operación mientras se realiza otra al mismo tiempo, en Java 8 se proporciona la clase <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html">CompletableFuture</a> que implementa la interfaz Future. La clase CompletableFuture soporta el uso de lambdas, hace más fácil la programación concurrente y programación asíncrona que el Fork/Join y el Future respectivamente permitiendo igualmente ejecutar tareas de forma concurrente, combinar el resultado de dos tareas que se ejecutan al mismo tiempo, realizar otra tarea al terminar una prevía o por supuesto esperar a que todas las tareas concurrentes finalicen.</p>
<h4 id="anotaciones-en-cualquier-uso-de-tipos">Anotaciones en cualquier uso de tipos</h4>
<p>Con la introducción de anotaciones en Java 5 podemos usar anotaciones en la declaración de los tipos (definición de clases, interfaces, propiedades, métodos, &hellip;). Desde ahora podremos usar las anotaciones en el uso de cualquier tipo como por ejemplo expresiones new, casts, cláusulas implements y cláusulas throws.</p>
<h4 id="java-time">Java Time</h4>
<p>Trabajar con fechas, horas y diferentes zonas horarias en Java tradicionalmente ha sido molesto, para tratar de mejorar la situación podíamos usar la librería JodaTime. Finalmente, después de mucho tiempo esperando a que se hiciera se va a proporcionar una mejor <a href="https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html">API en el JDK 8 para trabajar con fechas, horas y zonas horarias</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/images/componentes-jpse8_hue75c3af3f21500b54941dca45968f0dd_53901_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/images/componentes-jpse8_hue75c3af3f21500b54941dca45968f0dd_53901_300x200_fit_box_3.png" width="282" height="200"  class="lozad "></a></p>
</figure>
</div>
<h3 id="futuro-con-java-9">Futuro con Java 9</h3>
<p>Viendo el pasado reciente de Java hablar del futuro puede ser precipitado, quizá la característica más comentada sea la modularización con el proyecto conocido como <a href="http://openjdk.java.net/projects/jigsaw/">Jigsaw</a>, pero ha sido abandonada para Java 8 según tengo entendido por ser difícil incorporarla manteniendo la compatibilidad hacia atrás, por el momento dispondremos de una solución intermedia con los compact profiles.</p>
<p>Otro de los puntos donde parece que se pondrá énfasis es en el soporte para entornos en la nube que son en estos momentos la tendencia hacia la que evolucionan las aplicaciones.</p>
<h3 id="versiones-anteriores-de-java">Versiones anteriores de Java</h3>
<p>Las versiones de Java 5, 6 y 7 también incluyeron varias novedades y dado que en el ámbito empresarial la tecnología se adopta de forma lenta es posible que mucha gente (incluido yo mismo) aún desconozca cuales eran algunas de las principales novedades y características de versiones anteriores.</p>
<h4 id="java-7">Java 7</h4>
<ul>
<li>Project coin</li>
<li>Strings en switchs</li>
<li>Gestión automática de recursos en sentencias try-catch</li>
<li>Multicatch</li>
<li>Rethrow de excepciones más precisos</li>
<li>Operador diamante &lt;&gt;</li>
<li>Literales binarios</li>
<li>Guiones bajos en literales numéricos</li>
<li>Fork/Join y utilidades de concurrencia</li>
<li>Mejoras en trabajo con archivos y carpetas</li>
</ul>
<p>Más en <a href="https://www.oracle.com/technetwork/java/javase/jdk7-relnotes-418459.html">Java 7 New Features and Enhancements</a> y <a href="https://www.javacodegeeks.com/2013/10/java7-a-look-back.html">Java 7 a look back</a></p>
<h4 id="java-6">Java 6</h4>
<ul>
<li>Lenguajes de scripting</li>
<li>API para el compilador</li>
<li>Nuevas anotaciones</li>
<li>Nueva API para XML (StaX)</li>
</ul>
<p>Más en <a href="https://www.oracle.com/technetwork/java/javase/features-141434.html">Java 6 New Features and Enhancements</a> y <a href="https://www.javabeat.net/introduction-to-java-6-0-new-features-part-i/">Introduction to java 6 new features</a></p>
<h4 id="java-5">Java 5</h4>
<ul>
<li>Generics</li>
<li>Bucle for mejorado</li>
<li>Autoboxing/unboxing</li>
<li>Enums</li>
<li>Varargs</li>
<li>Static import</li>
<li>Anotaciones</li>
</ul>
<p>Más en <a href="https://docs.oracle.com/javase/1.5.0/docs/relnotes/features.html">Java 5 New Features and Enhancements</a></p>
<h3 id="presentación">Presentación</h3>
<p>Finalmente, una presentación muy interesante en forma de <a href="https://www.youtube.com/watch?v=FTfAP29TjUk">vídeo de Youtube</a> en español y la <a href="http://www.javahispano.org/storage/documentacion/2013-JUG-Madrid.pdf">presentación de la que se habla en formato pdf</a> que fue publicada en <a href="http://www.javahispano.org/portada/2014/3/10/video-y-presentacion-de-la-charla-sobre-java-8.html">JavaHispano</a>, en él se habla de muchas de las novedades y de algunas futuras en Java 9.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/FTfAP29TjUk" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<hr>
<p>En los <a href="https://docs.oracle.com/javase/tutorial/">tutoriales de Java</a> hay algunos de estos puntos más ampliados y algunos apartados no comentados en esta entrada. Otros artículos muy completos son <a href="http://winterbe.com/posts/2014/03/16/java-8-tutorial/">Java 8 Tutorial</a> y <a href="http://www.techempower.com/blog/2013/03/26/everything-about-java-8/">Everything about Java 8</a>, en el apartado de referencia al final de la entrada hay algún enlace más digno de lectura.</p>
<p>Java es usado ampliamente en entornos empresariales ya sean públicos o privados, pequeños o grandes que con las <a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">especificaciones de Java EE 7</a> proporcionan a las aplicaciones un conjunto de funcionalidades estadarizadas con las que tendremos posibilidad de elegir la implementación que mejor consideremos no encadenándonos a un determinado vendedor.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://openjdk.java.net/projects/jdk8/">JDK 8</a></li>
<li><a href="https://www.javacodegeeks.com/2013/10/java8.html">Java 8</a></li>
<li><a href="http://winterbe.com/posts/2014/03/16/java-8-tutorial/">Java 8 Tutorial</a></li>
<li><a href="http://zeroturnaround.com/rebellabs/java-8-explained-default-methods/">Java 8 Explained Default Methods</a></li>
<li><a href="https://www.javacodegeeks.com/2013/10/introduction-to-java-lambdas.html">Introduction to Java lambdas</a></li>
<li><a href="http://zeroturnaround.com/rebellabs/java-8-revealed-lambdas-default-methods-and-bulk-data-operations/">Java 8 revealed, lambdas, default methods and bulk data operations</a></li>
<li><a href="https://www.javacodegeeks.com/2013/07/lambdas-coming-to-a-java-8-near-you.html">Lambdas coming to a Java 8 near you</a></li>
<li><a href="http://viralpatel.net/blogs/java-8-default-methods-tutorial/">Java 8 default methods</a></li>
<li><a href="http://unpocodejava.wordpress.com/2014/01/22/novedades-relevantes-java-8/">Novedades relevantes Java 8</a></li>
<li><a href="https://www.javacodegeeks.com/2014/03/the-optional-type-api.html">The optional type API</a></li>
<li><a href="http://www.techempower.com/blog/2013/03/26/everything-about-java-8/">Everything about Java 8</a></li>
<li><a href="https://www.javacodegeeks.com/2014/03/8-new-features-for-java-8.html">8 new features for java 8</a></li>
<li><a href="https://www.javacodegeeks.com/2014/03/happy-8th-birthday-java.html">Happy 8th birthday Java</a></li>
<li><a href="https://www.javacodegeeks.com/2014/01/compiling-lambda-expressions-scala-vs-java-8.html">Compiling lambda expressions scala vs Java 8</a></li>
<li><a href="https://java.dzone.com/articles/java-8-permgen-metaspace">Java 8 PermGen to metaspace</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress/</id>
        <title>Guía para la creación de un blog con Octopress</title>
        <updated>2014-06-07T01:00:00+02:00</updated>
        <published>2014-03-14T18:19:24+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/octopress.png" width="300" height="300" alt="Octopress" title="Octopress"  class=""></p>
</div>
<p>En la <a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">primera entrada de este blog usando Octopress</a> ya comentaba las razones por las que he pasado de usar <a href="http://www.blogger.com">Blogger</a> a usar <a href="http://octopress.org/">Octopress</a>. Entre las razones del cambio estaban la posibilidad en Octopress de escribir en markdown, edición desconectado (para textos e imágenes), diseño adaptable y más personalizable, git y control de versiones, alojamiento en cualquier servidor web. Aún sin ser Octpress también tiene cosas mejorables pero desde luego me está resultando mucho mejor que blogger.</p>
<p>En esta entrada quiero escribir una guía con los pasos necesarios para crear un blog en Octopress de forma rápida y algunas funcionalidades a tener en cuenta o que deberemos realizar.</p>
<p>Antes de empezar supondré que ya tenemos en nuestro sistema <a href="https://www.archlinux.org/packages/extra/x86_64/ruby/">ruby</a> y <a href="https://www.archlinux.org/packages/extra/x86_64/git/">git</a> instalados. En Linux basta con buscar el paquete correspondiente para nuestra distribución e instalarlo con el gestor de paquetes. Con <a href="https://www.archlinux.org">Arch Linux</a> tan simple como:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S ruby git</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>Empezamos clonando con git el repositorio de Octopress y la configuración inicial, sustituyendo blog-bitix por el nombre del repositorio del blog en GitHub que habremos creado previamente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone git://github.com/imathis/octopress.git blog-bitix&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> blog-bitix&#10;</span></span><span class="line"><span class="cl">$ gem install bundler&#10;</span></span><span class="line"><span class="cl">$ bundle install&#10;</span></span><span class="line"><span class="cl">$ bundle update rake&#10;</span></span><span class="line"><span class="cl">$ rake install</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-2.sh</span>
    </div>
</div>
<p>En esta guía voy a comentar como alojar el blog empleando <a href="http://pages.github.com/">GitHub Pages</a> que nos ofrece alojamiento gratuito tanto para el blog como para el repositorio git de código fuente, la URL será del estilo <em>http://[usuario].github.io/[nombre-blog]</em>. Para ello, primero en la página de GitHub crearemos el repositorio para alojar el código y el blog, después ejecutaremos el siguiente comando que nos pedirá la dirección de nuestro repositorio en mi caso git@github.com:picodotdev/blog-bitix.git:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rake setup_github_pages&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-3.sh</span>
    </div>
</div>
<p>Configuramos git para que conozca nuestro usuario al hacer commits:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git config user.email <span class="s2">&#34;pico.dev@gmail.com&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ git config user.name <span class="s2">&#34;pico.dev&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ git config core.editor <span class="s2">&#34;vim&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-4.sh</span>
    </div>
</div>
<p>Hacemos lo mismo en el repositorio git de la carpeta _deploy. Octopress usa dos repositorios git, uno para el código fuente del repositorio y otro para lo que ven los usuarios del blog. Octopress configura git de tal forma que los dos repositorios sean dos ramas del mismo repositorio en GitHub:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> _deploy&#10;</span></span><span class="line"><span class="cl">$ git config user.email <span class="s2">&#34;pico.dev@gmail.com&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ git config user.name <span class="s2">&#34;pico.dev&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ git config core.editor <span class="s2">&#34;vim&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> ..</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-5.sh</span>
    </div>
</div>
<p>Cambiamos el origen de la rama master a la de nuestro GitHub en vez del origen de Octopress:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git remote add origin git@github.com:picodotdev/blog-bitix.git&#10;</span></span><span class="line"><span class="cl">$ git config branch.master.remote origin&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-6.sh</span>
    </div>
</div>
<p>Podemos previsualizar el estado actual del blog en el navegador introduciendo en él la dirección <em>http://localhost:4000/blog-bitix/</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rake preview&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-7.sh</span>
    </div>
</div>
<p>Haciendo el primer deploy del blog (deberemos <a href="https://help.github.com/articles/generating-ssh-keys">configurar SSH</a>) dispondremos del blog en la siguiente dirección <a href="https://picodotdev.github.io/blog-bitix/">https://picodotdev.github.io/blog-bitix/</a>. Puede que el blog tarde unos minutos en estar disponible y deberemos hacerlo cada vez queramos que los cambios se apliquen al blog.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rake generate&#10;</span></span><span class="line"><span class="cl">$ rake deploy&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-8.sh</span>
    </div>
</div>
<p>Ya estamos listos para empezar a hacer cambios en el blog y crear entradas:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rake new_post<span class="o">[</span><span class="s2">&#34;titulo&#34;</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-9.sh</span>
    </div>
</div>
<p>Subimos los cambios al repositorio de GitHub con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add .&#10;</span></span><span class="line"><span class="cl">$ git commit -m <span class="s1">&#39;Mensaje del commit&#39;</span>&#10;</span></span><span class="line"><span class="cl">$ git push origin master</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-10.sh</span>
    </div>
</div>
<p>Si queremos que el blog tenga un dominio propio en vez de un subdominio de GitHub deberemos crear un archivo CNAME con el nombre del dominio, subirlo al repositorio y hacer el deploy aparte de la <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">configuración que debamos hacer en los registros DNS de dominio</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;dominio.com&#39;</span> &gt;&gt; source/CNAME&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-11.sh</span>
    </div>
</div>
<p>Probablemente lo siguiente que deberemos empezar a hacer es <a href="http://octopress.org/docs/configuring/">configurar ciertas propiedades</a> que afectan al blog, como las urls, nombre del blog, número de post por página, cambiar estilos, etc&hellip;</p>
<p>En un futuro quizá necesitemos obtener el repositorio del blog y la forma de disponer de él es diferente que crearlo desde cero con los pasos anteriores. Como comentaba en realidad los blogs con Octopress son dos repositorios de git y por tanto deberemos hacer un clone para cada uno de ellos, los comandos para clonar los repositorios son:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone -b master git@github.com:picodotdev/blog-bitix.git&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> blog-bitix&#10;</span></span><span class="line"><span class="cl">$ git clone -b gh-pages git@github.com:picodotdev/blog-bitix.git _deploy</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-12.sh</span>
    </div>
</div>
<p>Hay algunas cosas adicionales que he tenido que hacer para disponer de un blog completamente funcional como deseaba:</p>
<ul>
<li>Dado que el blog lo tengo alojado con el modo Project Pages en vez de User/Organization Pages he necesitado crear otro repositorio para que las <a href="http://www.google.es/webmasters/tools/?hl=ES">Web Master Tools</a> me considere el dueño del dominio <a href="http://picodotdev.github.io">http://picodotdev.github.io</a>.</li>
<li>En el blog es habitual que incluya capturas de pantalla a modo de explicación. Usando <a href="https://elblogdepicodev.blogspot.com.es/2012/11/convertir-imagenes-entre-formatos-y.html">ImageMagick para crear las pequeñas vistas previas</a> y <a href="http://blueimp.github.io/Bootstrap-Image-Gallery/">Bootstrap Image Gallery</a> consigo reducir el tamaño en KiB de la página ya que inicialmente solo se cargan las thumbnails que son mucho más pequeñas que las imágenes originales, aparte de que si las imágenes son muy grandes y se incluyen en su tamaño original es difícil que entren en el espacio reservado para el texto.</li>
<li>Para facilitar que el contenido sea compartido he necesitado hacer una cuantas modificaciones para incorporar a Octopress <a href="http://karmacracy.com/">Karmacracy</a>, <a href="https://www.sharethis.com/">ShareThis</a> y <a href="http://disqus.com/">Disqus</a>. Con estas herramientas sociales facilitaremos a los usuarios que compartan el contenido más fácilmente.</li>
<li>También he necesitado modificar algunos estilos para dar al blog el aspecto que quería, para una persona con algunos conocimientos de programación y desarrollo web no es nada complicado.</li>
<li>Para tener el directorio de imágenes organizado y no se convierta en un cajón desastre a cada post le doy un identificador y en la carpeta images/custom/posts creo una carpeta con ese identificador. De esa manera es fácil saber que imágenes he usado en cada post. Los logotipos que usaré en varias entradas las pongo en la carpeta images/custom/logotipos.</li>
</ul>
<p>En el <a href="https://github.com/picodotdev/blog-bitix">código fuente del blog</a> se puede ver los archivos para hacerlo. Por ejemplo, para integrar Karmacracy he necesitado modificar los siguientes archivos.</p>
<ul>
<li>source/layouts/_post.html</li>
<li>custom/post/karmacracy.html</li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">Hola nuevo mundo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/mi-experiencia-y-consejos-para-un-blog/">Mi experiencia y consejos para un blog</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/</id>
        <title>Introducción y ejemplo sencillo de Java Message Service (JMS)</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-03-07T18:31:22+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>JMS es una especificación de Java que define en esta plataforma una forma comunicación entre aplicaciones basada en el intercambio de mensajes. Los mensajes permiten a las aplicaciones no conocerse entre sí y comunicarse de forma asíncrona pudiendo hacer que los mensajes de una cola solo sean consumidos por un único receptor o por varios suscriptores interesados en un determinado tema. En el código de ejemplo muestro tanto la comunicación con colas (queues) como con temas (topics)</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p><a href="https://en.wikipedia.org/wiki/Java_Platform">La plataforma Java EE</a> (Java Enterprise Edition) pone a disposición de los desarrolladores varias especificaciones, estas especificaciones describen las funcionalidades y la API que deben proporcionar las implementaciones y proporcionan al desarrollador herramientas para facilitar, hacer mejor las aplicaciones y de forma estándar según estas especificaciones. Haciendo uso de una de estas especificaciones es posible cambiar de una implementación a otra de forma transparente y sin modificar ninguna línea de código de la aplicación (en teoría). Hay especificaciones para persistencia en base de datos (JPA), para transaccionalidad (JTA), para servicios web (JAX-WS ) y REST (JAX-RS) entre otras. En el siguiente enlace puede encontrarse el <a href="https://glassfish.java.net/downloads/ri/">listado completo de especificaciones y sus versiones de JEE 7</a>.</p>
<p>Una de ellas es el <a href="https://es.wikipedia.org/wiki/Java_Message_Service">servicio de mensajería JMS</a> (Java Message Service). JMS es un sistema de comunicación entre aplicaciones en base a mensajes. El usar mensajes como forma de comunicación entre aplicaciones tiene los siguientes beneficios o ventajas:</p>
<ul>
<li>Integración de sistemas: las aplicaciones que se comunican intercambiando mensajes puede ser desarrolladas con tecnologías diferentes el único requisito es que cada una de ellas tenga una forma de enviar y recibir los mensajes.</li>
<li>Escalabilidad: en caso de necesitar más capacidad para procesar los mensajes se pueden añadir más procesadores de mensajes sin que los emisores tengan ningún conocimiento de ello.</li>
<li>Asincronía: los mensajes puede ser procesados de forma asíncrona de forma que si un mensaje desencadena un proceso largo en tiempo el emisor del mensaje no tiene que esperar a que el proceso termine, el emisor puede enviar el mensaje y olvidarse. Además, el emisor no necesita que un receptor exista para enviar el mensaje tampoco el receptor necesita que que el emisor exista para recibir el mensaje. Cuando haya un receptor este se encargará de procesar los mensajes que se hayan enviado y estén aún sin procesar.</li>
<li>No acoplamiento: el emisor y el receptor no se conocen directamente de forma que cada uno de ellos puede reemplazarse por una nueva implementación de forma transparente para el otro.</li>
</ul>
<p>La comunicación puede realizarse de dos formas cada una con sus características:</p>
<ul>
<li>Punto a punto (P2P): mediante esta comunicación el mensaje se garantiza que es procesado únicamente una vez independientemente del numero de posibles procesadores que podrían recibir el mensaje. El procesado del mensaje puede ser síncrono o asíncrono. En caso de que no haya un receptor disponible el mensaje se guarda hasta poder entregarse a un receptor. Se realiza mediante colas (Queue). En este modelo al emisor se le denomina Sender y al receptor Receiver.</li>
<li>Pub/Sub: en este modelo un mensaje es recibido por todos los receptores suscritos a un tema (Topic) de forma similar a una emisión broadcast. Al emisor se le denomina Publisher y al receptor Subscriber. El emisor y receptor están más desacoplados ya que el emisor no conoce cual de los receptores procesará el mensaje.</li>
</ul>
<p>Esta comunicación de mensajes entre aplicaciones o entre diferentes partes de una aplicación tiene muchas posibilidades, podría ser utilizado para que un receptor enviase mensajes electrónicos en base a los mensajes enviados a una cola o para actualizar o precalcular datos de una base de datos que puede llevar un considerable tiempo y que de hacerlo en la misma petición de una aplicación web haría que el cliente estuviese esperando hasta que el proceso terminase, en ambos casos no es necesario que los procesos se hagan inmediatamente, son solo dos ejemplos de aplicación real. Esta es la misma funcionalidad que expliqué como hacerla con <a href="https://elblogdepicodev.blogspot.com.es/2012/04/ejemplo-del-patron-de-diseno-command-y.html">programación concurrente y el patrón de diseño Command</a> pero pudiéndola implementar con JMS.</p>
<p>Los mensajes puede tener cabeceras (asignada automáticamente por JMS o por el desarrollador), atributos y y los datos (payload) que pueden transportar texto, un stream de objetos primitivos, &hellip; en función del tipo de mensaje. Cualquiera de estas cabeceras, atributos y datos puede utilizarse como información	 para procesar el mensaje.</p>
<p>A continuación pondré el código de una sencilla aplicación que se conecta al servicio JMS de un <a href="https://picodotdev.github.io/blog-bitix/2014/02/el-servidor-de-aplicaciones-jboss-slash-wildfly/">servidor de aplicaciones WildFly</a> de forma remota y envía y recibe unos pocos mensajes de texto.</p>
<p>Primero el código de un modelo Pub/Sub. Como es propio de este modelo los mensajes se reciben por todos los receptores (los dos threads que escuchan en un topic que debemos crear), en este caso hay un publicador y dos suscriptores:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.bitix.jms</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.Message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.MessageListener</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.Session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TextMessage</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TopicConnection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TopicConnectionFactory</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TopicPublisher</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TopicSession</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TopicSubscriber</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.naming.Context</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.naming.InitialContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Ejemplo que muestra como como enviar y recibir mensajes JMS de un Topic de forma remota.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Topic</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">	 * Antes de ejecutar este ejemplo, usando WildFly se ha de crear un usuario guest y clave guest con el &#10;</span></span></span><span class="line"><span class="cl"><span class="cm">	 * script WILDFLY_HOME/bin/add-user.sh.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">	 */</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Usuario y password para conectarse al servidor JNDI y al Topic&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">String</span> <span class="n">usuario</span> <span class="o">=</span> <span class="s">&#34;guest&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">String</span> <span class="n">contrasena</span> <span class="o">=</span> <span class="s">&#34;guest&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Propiedades para crear el contexto: clase factoría, url del servidor JNDI y credenciales&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">Properties</span> <span class="n">env</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">INITIAL_CONTEXT_FACTORY</span><span class="o">,</span> <span class="s">&#34;org.jboss.naming.remote.client.InitialContextFactory&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">PROVIDER_URL</span><span class="o">,</span> <span class="s">&#34;http-remoting://localhost:8080&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">SECURITY_PRINCIPAL</span><span class="o">,</span> <span class="n">usuario</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">SECURITY_CREDENTIALS</span><span class="o">,</span> <span class="n">contrasena</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// El objeto InitialContext permite obtener la referencias de los objetos registrado en el ábol JNDI&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">InitialContext</span> <span class="n">ic</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InitialContext</span><span class="o">(</span><span class="n">env</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Objetos a obtener para usar JMS: &#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - TopicConnectionFactory&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - TopicConection&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - Topic&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - TopicSession&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - TopicSubscriber&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - TopicPublisher&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">TopicConnectionFactory</span> <span class="n">connectionFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">TopicConnectionFactory</span><span class="o">)</span> <span class="n">ic</span><span class="o">.</span><span class="na">lookup</span><span class="o">(</span><span class="s">&#34;jms/RemoteConnectionFactory&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">TopicConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">connectionFactory</span><span class="o">.</span><span class="na">createTopicConnection</span><span class="o">(</span><span class="n">usuario</span><span class="o">,</span> <span class="n">contrasena</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Obtener el Topic en el cual se publicarán y del cual se recibirán los mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Topic</span> <span class="n">topic</span> <span class="o">=</span> <span class="o">(</span><span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Topic</span><span class="o">)</span> <span class="n">ic</span><span class="o">.</span><span class="na">lookup</span><span class="o">(</span><span class="s">&#34;jms/topic/test&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Preparar el publicador y subscriptor al Topic&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">Subscriber</span> <span class="n">subscriber1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Subscriber</span><span class="o">(</span><span class="n">connection</span><span class="o">,</span> <span class="n">topic</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Subscriber</span> <span class="n">subscriber2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Subscriber</span><span class="o">(</span><span class="n">connection</span><span class="o">,</span> <span class="n">topic</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Publisher</span> <span class="n">publisher</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Publisher</span><span class="o">(</span><span class="n">connection</span><span class="o">,</span> <span class="n">topic</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Inicializar la recepción y envío de los mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">connection</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Empezar a publicar mensajes en el Topic (y a recibirlos)&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">Thread</span> <span class="n">thread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="n">publisher</span><span class="o">);</span>		&#10;</span></span><span class="line"><span class="cl">		<span class="n">thread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Esperar a que el publicador termine de enviar mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">thread</span><span class="o">.</span><span class="na">join</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Parar el envío y recepción de mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">connection</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Terminar liberando los recursos&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">subscriber1</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">subscriber2</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">publisher</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>		&#10;</span></span><span class="line"><span class="cl">		<span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">ic</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Subscriber</span> <span class="kd">implements</span> <span class="n">MessageListener</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">TopicSession</span> <span class="n">session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">TopicSubscriber</span> <span class="n">subscriber</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="nf">Subscriber</span><span class="o">(</span><span class="n">TopicConnection</span> <span class="n">connection</span><span class="o">,</span> <span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Topic</span> <span class="n">topic</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">session</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createTopicSession</span><span class="o">(</span><span class="kc">false</span><span class="o">,</span> <span class="n">Session</span><span class="o">.</span><span class="na">AUTO_ACKNOWLEDGE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">subscriber</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">session</span><span class="o">.</span><span class="na">createSubscriber</span><span class="o">(</span><span class="n">topic</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">subscriber</span><span class="o">.</span><span class="na">setMessageListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">subscriber</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">TextMessage</span> <span class="n">text</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextMessage</span><span class="o">)</span> <span class="n">message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Suscriptor (%s): El publicador dice: «%s»\n&#34;</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="n">text</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Publisher</span> <span class="kd">implements</span> <span class="n">Runnable</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">TopicSession</span> <span class="n">session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">TopicPublisher</span> <span class="n">publisher</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="nf">Publisher</span><span class="o">(</span><span class="n">TopicConnection</span> <span class="n">connection</span><span class="o">,</span> <span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Topic</span> <span class="n">topic</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">session</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createTopicSession</span><span class="o">(</span><span class="kc">false</span><span class="o">,</span> <span class="n">Session</span><span class="o">.</span><span class="na">AUTO_ACKNOWLEDGE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">publisher</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">session</span><span class="o">.</span><span class="na">createPublisher</span><span class="o">(</span><span class="n">topic</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">publisher</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">Message</span> <span class="n">mensaje</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createTextMessage</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;¡Hola mundo! (%d)&#34;</span><span class="o">,</span> <span class="n">i</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">publisher</span><span class="o">.</span><span class="na">publish</span><span class="o">(</span><span class="n">mensaje</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">1000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Topic.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/images/topic_hu56b39483b649e598428d5492a72852dc_134239_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Resultado de Topic.java"><img src="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/images/topic_hu56b39483b649e598428d5492a72852dc_134239_300x200_fit_box_3.png" width="300" height="136" alt="Resultado de Topic.java" title="Resultado de Topic.java"  class="lozad "></a></p>
</figure>
</div>
<p>A continuación el código de utilizando un modelo punto a punto en el que vuelve a haber un emisor y dos receptores. En el resultado de la ejecución puede observarse que a pesar de haber dos receptores solo uno de los dos recibe cada mensaje:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.bitix.jms</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.Message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.MessageListener</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.QueueConnection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.QueueConnectionFactory</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.QueueReceiver</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.QueueSender</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.QueueSession</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.Session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.jms.TextMessage</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.naming.Context</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.naming.InitialContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Ejemplo que muestra como como enviar y recibir mensajes JMS de un Queue de forma remota.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Queue</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">	 * Antes de ejecutar este ejemplo, usando WildFly se ha de crear un usuario guest y clave guest con el &#10;</span></span></span><span class="line"><span class="cl"><span class="cm">	 * script WILDFLY_HOME/bin/add-user.sh.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">	 */</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Usuario y password para conectarse al servidor JNDI y al Queue&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">String</span> <span class="n">usuario</span> <span class="o">=</span> <span class="s">&#34;guest&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">String</span> <span class="n">contrasena</span> <span class="o">=</span> <span class="s">&#34;guest&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Propiedades para crear el contexto: clase factoría, url del servidor JNDI y credenciales&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">Properties</span> <span class="n">env</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">INITIAL_CONTEXT_FACTORY</span><span class="o">,</span> <span class="s">&#34;org.jboss.naming.remote.client.InitialContextFactory&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">PROVIDER_URL</span><span class="o">,</span> <span class="s">&#34;http-remoting://localhost:8080&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">SECURITY_PRINCIPAL</span><span class="o">,</span> <span class="n">usuario</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">env</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">SECURITY_CREDENTIALS</span><span class="o">,</span> <span class="n">contrasena</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// El objeto InitialContext permite obtener la referencias de los objetos registrado en el ábol JNDI&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">InitialContext</span> <span class="n">ic</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InitialContext</span><span class="o">(</span><span class="n">env</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Objetos a obtener para usar JMS: &#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - QueueConnectionFactory&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - QueueConection&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - Queue&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - QueueSession&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - QueueSubscriber&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// - QueuePublisher&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">QueueConnectionFactory</span> <span class="n">connectionFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">QueueConnectionFactory</span><span class="o">)</span> <span class="n">ic</span><span class="o">.</span><span class="na">lookup</span><span class="o">(</span><span class="s">&#34;jms/RemoteConnectionFactory&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">QueueConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">connectionFactory</span><span class="o">.</span><span class="na">createQueueConnection</span><span class="o">(</span><span class="n">usuario</span><span class="o">,</span> <span class="n">contrasena</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Obtener el Queue en el cual se publicarán y del cual se recibirán los mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Queue</span> <span class="n">queue</span> <span class="o">=</span> <span class="o">(</span><span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Queue</span><span class="o">)</span> <span class="n">ic</span><span class="o">.</span><span class="na">lookup</span><span class="o">(</span><span class="s">&#34;jms/queue/test&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Preparar el publicador y subscriptor al Queue&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">Receiver</span> <span class="n">receiver1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Receiver</span><span class="o">(</span><span class="n">connection</span><span class="o">,</span> <span class="n">queue</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Receiver</span> <span class="n">receiver2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Receiver</span><span class="o">(</span><span class="n">connection</span><span class="o">,</span> <span class="n">queue</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Sender</span> <span class="n">sender</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sender</span><span class="o">(</span><span class="n">connection</span><span class="o">,</span> <span class="n">queue</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Inicializar la recepción y envío de los mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">connection</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Empezar a enviar mensajes en el Queue (y a recibirlos)&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">Thread</span> <span class="n">thread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="n">sender</span><span class="o">);</span>		&#10;</span></span><span class="line"><span class="cl">		<span class="n">thread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Esperar a que el enviador termine de enviar mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">thread</span><span class="o">.</span><span class="na">join</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Parar el envío y recepción de mensajes&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">connection</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Terminar liberando los recursos&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">receiver1</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">receiver2</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">sender</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>		&#10;</span></span><span class="line"><span class="cl">		<span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">ic</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Receiver</span> <span class="kd">implements</span> <span class="n">MessageListener</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">QueueSession</span> <span class="n">session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">QueueReceiver</span> <span class="n">receiver</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="nf">Receiver</span><span class="o">(</span><span class="n">QueueConnection</span> <span class="n">connection</span><span class="o">,</span> <span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Queue</span> <span class="n">queue</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">session</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createQueueSession</span><span class="o">(</span><span class="kc">false</span><span class="o">,</span> <span class="n">Session</span><span class="o">.</span><span class="na">AUTO_ACKNOWLEDGE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">receiver</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">session</span><span class="o">.</span><span class="na">createReceiver</span><span class="o">(</span><span class="n">queue</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">receiver</span><span class="o">.</span><span class="na">setMessageListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">receiver</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">TextMessage</span> <span class="n">text</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextMessage</span><span class="o">)</span> <span class="n">message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Receptor (%s): Un publicador dice: «%s»\n&#34;</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="n">text</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Sender</span> <span class="kd">implements</span> <span class="n">Runnable</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">QueueSession</span> <span class="n">session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">private</span> <span class="n">QueueSender</span> <span class="n">sender</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="nf">Sender</span><span class="o">(</span><span class="n">QueueConnection</span> <span class="n">connection</span><span class="o">,</span> <span class="n">javax</span><span class="o">.</span><span class="na">jms</span><span class="o">.</span><span class="na">Queue</span> <span class="n">queue</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">session</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createQueueSession</span><span class="o">(</span><span class="kc">false</span><span class="o">,</span> <span class="n">Session</span><span class="o">.</span><span class="na">AUTO_ACKNOWLEDGE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">this</span><span class="o">.</span><span class="na">sender</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">session</span><span class="o">.</span><span class="na">createSender</span><span class="o">(</span><span class="n">queue</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">sender</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">		<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">Message</span> <span class="n">mensaje</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createTextMessage</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;¡Hola mundo! (%d)&#34;</span><span class="o">,</span> <span class="n">i</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">sender</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">mensaje</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">1000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Queue.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/images/queue_huba3dbeccedc7d2cbd298ae503bd31db0_89085_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Resultado de Queue.java"><img src="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/images/queue_huba3dbeccedc7d2cbd298ae503bd31db0_89085_300x200_fit_box_3.png" width="300" height="95" alt="Resultado de Queue.java" title="Resultado de Queue.java"  class="lozad "></a></p>
</figure>
</div>
<p>Comentar que los mensajes se procesan en serie por cada MessageListener, esto es, hasta que no termina el consumo de uno no se consume el siguiente. Esto se aplica por MensajeListener y sesión.</p>
<p>Si queremos probar los ejemplos deberemos disponer del servidor de aplicaciones WildFly. Para que los ejemplos funcionen deberemos configurarlo añadiendo un usuario «guest», de contraseña «guest» y de rol «guest», el añadirlo lo podemos hacer con la utilidad add-user.sh. También deberemos modificar el archivo standalone-full.xml añadiendo el topic y el queue en la sección de JMS e iniciar WildFly usando esa configuración:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./standalone.sh --server-config<span class="o">=</span>standalone-full.xml&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>standalone.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="line"><span class="cl"><span class="nt">&lt;subsystem</span> <span class="na">xmlns=</span><span class="s">&#34;urn:jboss:domain:messaging:2.0&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;hornetq-server&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;jms-destinations&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;jms-queue</span> <span class="na">name=</span><span class="s">&#34;testQueue&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;entry</span> <span class="na">name=</span><span class="s">&#34;jms/queue/test&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;entry</span> <span class="na">name=</span><span class="s">&#34;java:jboss/exported/jms/queue/test&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/jms-queue&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;jms-topic</span> <span class="na">name=</span><span class="s">&#34;testTopic&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;entry</span> <span class="na">name=</span><span class="s">&#34;jms/topic/test&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;entry</span> <span class="na">name=</span><span class="s">&#34;java:jboss/exported/jms/topic/test&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/jms-topic&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/jms-destinations&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/hornetq-server&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/subsystem&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>standalone-full.xml</span>
    </div>
</div>
<p>Para terminar y conocer más sobre JMS un buen libro es <a href="https://amzn.to/3qxq7SK">Java Message Service</a> de O&rsquo;Reilly, que explica de forma mucho más extensa y completa este tema.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596000685&amp;linkId=70a9c20200ad5af74dc72b63f355aa27" title="Amazon" class="lozad"></iframe>
</div>
<p>El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoJMS">código fuente completo de estos ejemplos</a> los puedes descargar de <a href="https://github.com/picodotdev/blog-ejemplos">mi repositorio de GitHub</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.jboss.org/author/display/WFLY8/Messaging&#43;configuration">WildFly Messaging configuration</a></li>
<li><a href="https://docs.jboss.org/author/display/WFLY8/Getting&#43;Started&#43;Guide#GettingStartedGuide-WildFly8Configurations">WildFly8Configurations</a></li>
<li><a href="https://github.com/wildfly/quickstart/blob/master/helloworld-jms/src/main/java/org/jboss/as/quickstarts/jms/HelloWorldJMSClient.java">HelloWorldJMSClient.java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/">Ejemplo de RabbitMQ con Java para enviar y recibir mensajes</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/">Publicación y suscripción de eventos con Guava EventBus en una aplicación Java</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/</id>
        <title>Configurar SSL/TLS en un servidor Tomcat, JBoss, WildFly, Lighttpd, Nginx o Apache</title>
        <updated>2016-03-05T12:00:00+01:00</updated>
        <published>2014-02-28T16:58:17+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Tanto en un servidor web como de aplicaciones podemos hacer que la comunicación entre el cliente y el servidor esté cifrada usando un protocolo seguro. La configuración para usar un protocolo seguro en cada servidor es diferente pero todos se basan en lo mismo, usar un certificado y un clave. En este artículo muestro la configuración necesaria en los servidores web y de aplicaciones más populares.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/openssl.svg" width="400" height="124" alt="OpenSSL" title="OpenSSL"  class=""></p>
</div>
<p>En entradas anteriores he explicado <a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">en que consiste la criptografía y GPG</a> y como podemos usarlo a nivel personal para firmar y cifrar archivos y <a href="https://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html">firmar correos electrónicos con el cliente de correo Evolution</a>. También he comentado <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">cómo crear un certificado con OpenSSL y como convertirlo a diferentes formatos</a>. En esta entrada explicaré como usar un certificado SSL creado con OpenSSL después de conocer los <a href="https://picodotdev.github.io/blog-bitix/2015/04/certificado-ssl-de-empresa-wildcard-y-de-validacion-extendida/">Certificados SSL, de empresa, «wildcard» y de validación extendida</a> para proporcionar acceso cifrado al servidor web o servidor de aplicaciones, explicaré cual es la configuración necesaria para los servidores <a href="http://tomcat.apache.org/">Tomcat</a>, <a href="http://www.lighttpd.net/">Lighttpd</a>, <a href="http://jbossas.jboss.org/">JBoss</a>/<a href="http://wildfly.org/">WildFly</a>, <a href="http://nginx.org/">Nginx</a> y <a href="http://www.apache.org/">Apache</a>.</p>
<p>Usar una conexión <abbr title="Secure Sockets Layer">SSL</abbr> o <abbr title="Transport Layer Security">TLS</abbr> y un certificado de servidor evita que los datos entre el navegador del usuario y el servidor sean legibles para una tercera parte siendo mayor la seguridad en nuestras aplicaciones o dando mayor confianza al usuario y usando algunos certificados al aparecer en la barra de navegación del navegador en verde el nombre de la entidad detrás de la página evitando problemas de suplantación de identidad.</p>
<p>Los principales navegadores han anunciado que una conexión cifrada SSL/TLS es condición necesaria para usar el ya presente <a href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/">protocolo HTTP/2</a> que es más eficiente tanto para el cliente como para el servidor y con menores latencias. <a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">Configurar HTTP/2 en Nginx, Apache HTTPD, WildFly o Jetty</a> es sencillo y mejorará el rendimiento de nuestros sitios web o aplicaciones. Utilizar el protocolo seguro HTTPS es también una condición necesaria por seguridad al <a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/">utilizar autenticación básica</a>.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="configurar-ssltls-en-tomcat">Configurar SSL/TLS en Tomcat</h3>
<p>Tomcat es uno de los servidores de aplicaciones más usado para desplegar aplicaciones web desarrolladas con el lenguaje Java. La forma que explicaré a continuación sobre como obtener cifrado SSL con este servidor será usando APR (<em>Apache Portable Runtime</em>). Previamente deberemos haber generado un certificado SSL con OpenSSL, una vez dispongamos del nuestro aunque sea autofirmado debemos añadir la siguiente configuración al archivo server.xml:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="line"><span class="cl"><span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">&#34;8443&#34;</span> <span class="na">protocol=</span><span class="s">&#34;HTTP/1.1&#34;</span> <span class="na">SSLEnabled=</span><span class="s">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">maxThreads=</span><span class="s">&#34;150&#34;</span> <span class="na">scheme=</span><span class="s">&#34;https&#34;</span> <span class="na">secure=</span><span class="s">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">clientAuth=</span><span class="s">&#34;false&#34;</span> <span class="na">sslProtocol=</span><span class="s">&#34;TLS&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">SSLCertificateFile=</span><span class="s">&#34;${catalina.home}/conf/localhost.crt&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">SSLCertificateKeyFile=</span><span class="s">&#34;${catalina.home}/conf/localhost.key&#34;</span><span class="nt">/&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server.xml</span>
    </div>
</div>
<p>Hay que activar el conector SSL (el anterior xml) y disponer del certificado y su clave privada, ambos archivos se indican en los atributos SSLCertificateFile y SSLCertificateKeyFile. Si queremos usar el puerto estándar del protocolo HTTPS cambiaremos el valor del puerto de 8443 a 443 en el atributo port. La configuración es la misma tanto para Tomcat 7 como para Tomcat 8.</p>
<h3 id="configurar-ssltls-en-jboss">Configurar SSL/TLS en JBoss</h3>
<p>JBoss es otro de los servidores que es ampliamente usado para desplegar aplicaciones Java y que proporciona un perfil completo de las especificaciones EE al contrario que Tomcat que solo proporciona un perfil web. La configuración que hay que indicar en JBoss 7.1 es la siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="line"><span class="cl"><span class="nt">&lt;subsystem</span> <span class="na">xmlns=</span><span class="s">&#34;urn:jboss:domain:web:1.1&#34;</span> <span class="na">default-virtual-server=</span><span class="s">&#34;default-host&#34;</span> <span class="na">native=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;connector</span> <span class="na">name=</span><span class="s">&#34;http&#34;</span> <span class="na">protocol=</span><span class="s">&#34;HTTP/1.1&#34;</span> <span class="na">scheme=</span><span class="s">&#34;http&#34;</span> <span class="na">socket-binding=</span><span class="s">&#34;http&#34;</span> <span class="na">redirect-port=</span><span class="s">&#34;8443&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;connector</span> <span class="na">name=</span><span class="s">&#34;https&#34;</span> <span class="na">protocol=</span><span class="s">&#34;HTTP/1.1&#34;</span> <span class="na">scheme=</span><span class="s">&#34;https&#34;</span> <span class="na">socket-binding=</span><span class="s">&#34;https&#34;</span> <span class="na">secure=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;ssl</span> <span class="na">name=</span><span class="s">&#34;jboss&#34;</span> <span class="na">certificate-key-file=</span><span class="s">&#34;${jboss.server.config.dir}/localhost.key&#34;</span> <span class="na">certificate-file=</span><span class="s">&#34;${jboss.server.config.dir}/localhost.crt&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/connector&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;...&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/subsystem&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>standalone-jboss.xml</span>
    </div>
</div>
<h3 id="configurar-ssltls-en-wildfly">Configurar SSL/TLS en WildFly</h3>
<p>JBoss cambió recientemente el nombre de la versión community de JBoss, esta ha pasado a llamarse WildFly y la comercial con soporte sigue llamándose JBoss. WildFly soporta las especificaciones de Java EE 7. En WildFly el contenedor web es <a href="http://undertow.io/">undertow</a> en vez de Tomcat y cambia la configuración de SSL. Se necesita crear un keystore JKS que contenga tanto la clave como el certificado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="line"><span class="cl"><span class="nt">&lt;security-realms&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;...&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;security-realm</span> <span class="na">name=</span><span class="s">&#34;SecureRealm&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;server-identities&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;ssl&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;keystore</span> <span class="na">path=</span><span class="s">&#34;localhost.keystore&#34;</span> <span class="na">relative-to=</span><span class="s">&#34;jboss.server.config.dir&#34;</span> <span class="na">keystore-password=</span><span class="s">&#34;wildfly&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/ssl&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/server-identities&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/security-realm&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/security-realms&gt;</span>&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;subsystem</span> <span class="na">xmlns=</span><span class="s">&#34;urn:jboss:domain:undertow:1.0&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;...&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;server</span> <span class="na">name=</span><span class="s">&#34;default-server&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;http-listener</span> <span class="na">name=</span><span class="s">&#34;default&#34;</span> <span class="na">socket-binding=</span><span class="s">&#34;http&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;https-listener</span> <span class="na">name=</span><span class="s">&#34;https&#34;</span> <span class="na">socket-binding=</span><span class="s">&#34;https&#34;</span> <span class="na">security-realm=</span><span class="s">&#34;SecureRealm&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;host</span> <span class="na">name=</span><span class="s">&#34;default-host&#34;</span> <span class="na">alias=</span><span class="s">&#34;localhost&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;location</span> <span class="na">name=</span><span class="s">&#34;/&#34;</span> <span class="na">handler=</span><span class="s">&#34;welcome-content&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;filter-ref</span> <span class="na">name=</span><span class="s">&#34;server-header&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;filter-ref</span> <span class="na">name=</span><span class="s">&#34;x-powered-by-header&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/host&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/server&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;...&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/subsystem&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>standalone-wildfly.xml</span>
    </div>
</div>
<h3 id="configurar-ssltls-en-lighttpd">Configurar SSL/TLS en Lighttpd</h3>
<p>Lighttpd es un servidor web de los denominados ligeros que aunque posiblemente no tiene toda la versatilidad de Apache ofrece un mayor rendimiento. Para activar SSL en lighttpd debemos modificar el archivo de configuración y añadir lo siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">$SERVER[&#34;socket&#34;] == &#34;:443&#34; {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;ssl.engine = &#34;enable&#34; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;ssl.pemfile = &#34;localhost.pem&#34; &#10;</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>lighttpd.conf</span>
    </div>
</div>
<p>Quizá debamos cambiar el propietario y permisos con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chown root:root /etc/lighttpd/ssl/localhost.pem&#10;</span></span><span class="line"><span class="cl">$ chmod <span class="m">400</span> /etc/lighttpd/ssl/localhost.pem&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>El archivo localhost.pem contiene la clave y el certificado.</p>
<h3 id="configurar-ssltls-en-nginx">Configurar SSL/TLS en Nginx</h3>
<p>El proceso es similar para el servidor web Nginx aunque lógicamente se usan las directivas propias de configuración de Nginx.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">http</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="kn">server</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">443</span> <span class="s">ssl</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">ssl_certificate</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">localhost.pem</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">ssl_certificate_key</span>  <span class="s">localhost.key</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">ssl_session_timeout</span>  <span class="mi">5m</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">ssl_protocols</span>  <span class="s">SSLv2</span> <span class="s">SSLv3</span> <span class="s">TLSv1</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">ssl_ciphers</span>  <span class="s">HIGH:!aNULL:!MD5</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">ssl_prefer_server_ciphers</span>   <span class="no">on</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.conf</span>
    </div>
</div>
<h3 id="configurar-ssltls-en-apache">Configurar SSL/TLS en Apache</h3>
<p>Apache es uno de los servidores web más utilizados para servir sitios web en internet. Para activar SSL en Apache debemos modificar el archivo de configuración, añadiendo la siguiente configuración que activa el soporte de SSL y especifica el archivo de clave y certificado, nada distinto de lo necesario en los servidores anteriores:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache"><span class="line"><span class="cl"><span class="nb">LoadModule</span> ssl_module modules/mod_ssl.so&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">Listen</span> <span class="m">443</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;VirtualHost</span> <span class="s">*:443</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">ServerName</span> localhost&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">SSLEngine</span> <span class="k">on</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">SSLCertificateFile</span> localhost.crt&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">SSLCertificateKeyFile</span> localhost.key&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VirtualHost&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>httpd.conf</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://tomcat.apache.org/tomcat-7.0-doc/ssl-howto.html">Tomcat</a></li>
<li><a href="http://docs.jboss.org/jbossweb/7.0.x/ssl-howto.html">JBoss</a></li>
<li><a href="https://community.jboss.org/message/824152#824152">WildFly (Undertow)</a></li>
<li><a href="http://redmine.lighttpd.net/projects/1/wiki/HowToSimpleSSL">Lighttpd</a></li>
<li><a href="http://nginx.org/en/docs/http/ngx_http_ssl_module.html">Nginx</a></li>
<li><a href="http://httpd.apache.org/docs/current/ssl/ssl_howto.html">Apache</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    
</feed>