<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/posts/2020/</id>
    <updated>2020-12-30T12:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/hemeroteca-17/</id>
        <title>Hemeroteca #17</title>
        <updated>2020-06-28T11:00:00+02:00</updated>
        <published>2020-06-28T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/hemeroteca-17/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Que leáis este blog para mi es mucho aparte de para compartir conocimiento que voy aprendiendo me permite canalizar la frustración de no poder usar en el trabajo mucho de lo que escribo, demasiados años ya. Los pocos comentarios, <em>retweets</em> y favoritos en twitter que recibo me hacen no perder la esperanza y en cierta medida me anima a seguir escribiendo. Aunque se que mi motivación no debería depender de esto si encima no recibiese vistas sería algo que me desmotivaría.</p>
<p>En meses anteriores he mejorado el diseño del blog, aún tengo mejoras pendientes que realizar pero no el suficiente tiempo para realizarlas. En los siguientes meses quiero aprender al menos a un nivel básico más sobre temas de SEO para que el tiempo que dedico al blog tenga el máximo rendimiento. Empezaré al publicar los artículos haciendo un pequeño análisis de palabras clave y primeras posiciones de resultados para el título que ponga en el artículo en el buscador Google y en la herramienta Google Search Console. Para los nuevos artículos que escribo pero también para los más visitados que he escrito, introduciendo en ellos algunos pequeños cambios y actualizaciones. Otro aspecto de SEO que tendré en cuenta es la intención de búsqueda, es decir, lo que un usuario espera encontrar cuando hace una búsqueda, normalmente la respuesta que se espera es a la pregunta ¿qué es? o ¿cómo? con lo que incluir un párrafo la respuesta a estas preguntas posiblemente los artículos posicionan mejor en Google.</p>
<p>En los cambios de diseño que he realizado están unas pequeñas modificaciones en la página de <a href="https://picodotdev.github.io/blog-bitix/archive/">Archivo y hemeroteca</a> donde recojo todos los artículos publicados, he añadido una pequeña descripción de cada sección y un icono junto al título del artículo que indique la temática del mismo. Esto permite identificar los artículos por tema de una forma visual y sin necesidad de leer texto si alguien busca artículos de un cierto tema.</p>
<p>Supongo que habrá sido por la pandemia del COVID-19 y las medidas de confinamiento durante estos meses y ahora con el verano y las vacaciones continuará algún tiempo más, en este tiempo he notado una pequeña bajada en las visitas y una notable bajada en los ingresos de AdSense pasando de unos 30 € mensuales a 15 €. Aunque no estoy completamente seguro de haya sido por los nuevos <a href="https://iabtechlab.com/ads-txt/">requerimientos para publicidad digital con los nuevos archivos ads.txt</a>, en principio cumplo y en Google AdSense no tengo ninguna advertencia.</p>
<p>En este semestre he seleccionado mejor la temática de los artículos a escribir y publicar siguiendo dos principios: que sean interesantes para mi o que tengan potencial de atraer visitas. Y de algunos estoy muy contento de haberlos escrito como los relativos a <a href="https://www.testcontainers.org/">Testcontainers</a> para pruebas de integración, <a href="https://sdkman.io/">SDKMAN</a> para instalar múltiples versiones de Java, <a href="https://storybook.js.org/">Storybook</a> para sistemas de diseño con <a href="https://www.typescriptlang.org/">TypeScript</a> y <a href="https://reactjs.org/">React</a>, el artículo sobre el futuro de la concurrencia con <a href="http://openjdk.java.net/projects/loom/">Project Loom</a>, el recolector de basura de Java, el patrón <em>open session in view</em> con sus ventajas y sus alternativa, programación con <a href="https://www.eclipse.org/aspectj/">AspectJ</a> e incluiría varios artículos más en este párrafo. En otras épocas los artículos que seleccionaba para escribir en algunas ocasiones lo hacía a modo de relleno sin prácticamente planificación planificaba más lo que podía escribir sin necesidad de investigar mucho. También contento con algunos de los artículos sobre <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como <a href="https://silverblue.fedoraproject.org/">Fedora Silverblue</a>.</p>
<p>También he seguido haciendo pequeños cambios en el <a href="https://picodotdev.github.io/blog-bitix/2017/01/script-para-instalar-arch-linux-facil-rapido-desatendido-automatizado-y-personalizable/"><em>script</em> para instalar Arch Linux</a> con múltiples correcciones de errores y soporte de nuevas características. El repositorio de GitHub de <a href="https://github.com/picodotdev/alis/">Arch Linux Install Script</a> ya tiene unas 230 estrellas y más de 100 <em>forks</em> de gente de numerosos países Australia, EEUU, Alemania, Colombia, Suecia y de muchos otros de todo el mundo. Hay un usuario que me envía que falla en el <em>script</em> cuando hago cambios lo cual se lo agradezco ya que algunos a mi me pasan desapercibidos y no tengo tiempo para probar cada cambio. También he recibido algunos <em>pull requests</em> que me han permitido corregir algunos otros errores y añadir algunas nuevas características.</p>
<p>En este semestre han sido 43 nuevos artículos de las temáticas habituales sobre Java, GNU/Linux e incluyendo como novedad el análisis de algún juego después de haber completado la historia principal. Estoy publicando casi dos artículos a la semana con la intención a ver si consigo hacer subir la curva de visitas.</p>
<p>Artículos sobre Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/">Los modificadores de acceso de clases, propiedades y métodos en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/programacion-orientada-a-aspectos-con-aspectj-spring-aop-y-la-clase-proxy/">Programación orientada a aspectos con AspectJ, Spring AOP y la clase Proxy</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/el-recolector-de-basura-de-java-que-hace-y-como-funciona-en-cada-version/">El recolector de basura de Java, que hace y como funciona en cada versión</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-convenciones-y-guia-de-estilos-para-el-codigo-fuente-de-java/">Las convenciones y guía de estilos para el código fuente de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/cambiar-los-niveles-de-log-de-forma-dinamica-sin-reiniciar-la-aplicacion-con-log4j/">Cambiar los niveles de log de forma dinámica sin reiniciar la aplicación con Log4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/novedades-de-java-14/">Novedades de Java 14</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/argumentos-de-linea-de-comandos-con-jcommander-en-una-aplicacion-java/">Argumentos de línea de comandos con JCommander en una aplicación Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/la-concurrencia-en-la-plataforma-java-con-project-loom/">La concurrencia en la plataforma Java con Project Loom</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/">El patrón Open Session in View, qué es, ventajas, problemas y alternativas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/copiar-datos-de-un-tipo-de-objeto-a-otro-con-modelmapper/">Copiar datos de un tipo de objeto a otro con ModelMapper</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/la-herramienta-sdkman-para-instalar-varias-versiones-del-jdk-y-software-de-la-plataforma-java/">La herramienta SDKMAN para instalar varias versiones del JDK y software de la plataforma Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/">Pruebas de integración con Testcontainers, ejemplo de JPA con la base de datos PostgreSQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/el-patron-de-diseno-specification-ejemplo-de-implementacion-y-uso-en-jpa-con-spring-data/">El patrón de diseño Specification, ejemplo de implementación y uso en JPA con Spring Data</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/">Generar en el dominio los identificativos de las entidades aplicando DDD antes de persistirlas en la base de datos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/">Las sentencias de control de flujo en Java (if, switch, for, while, do-while, try-catch, break, continue e invocación)</a></li>
</ul>
<p>Artículos bore GNU/Linux.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/los-permisos-del-sistema-de-archivos-de-gnu-linux/">Los permisos del sistema de archivos de GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/tareas-basicas-de-administracion-y-uso-despues-de-instalar-una-distribucion-gnu-linux/">Tareas básicas de administración y uso después de instalar una distribución GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-aplicaciones-integradas-del-entorno-de-escritorio-gnome/">Las aplicaciones integradas del entorno de escritorio GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/listado-de-programas-esenciales-segun-categoria-para-gnu-linux/">Listado de programas esenciales según categoría para GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/50-plus-comandos-basicos-y-utiles-de-gnu-linux/">50+ comandos básicos y útiles de GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/sobre-el-futuro-de-las-distribuciones-gnu-linux-y-los-sistemas-operativos/">Sobre el futuro de las distribuciones GNU/Linux y los sistemas operativos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/renombrar-multiples-archivos-en-gnome/">Renombrar múltiples archivos en GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/">Introducción y uso básico de la distribución GNU/Linux Fedora Silverblue</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/">La controversia sobre el sistema de inicio systemd adoptado en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/">Comando para convertir una imagen SVG a PNG y JPG con diferentes tamaños y color de fondo con Inkskape</a></li>
</ul>
<p>Artículos sobre desarrollo web.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/">Mejorar el tiempo de carga de una página web usando lazy load</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/">Tomar capturas de pantalla de páginas web desde la línea de comandos o desde la interfaz gráfica con Firefox</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/como-migrar-el-contenido-de-un-sitio-web-html-a-formato-markdown/">Cómo migrar el contenido de un sitio web HTML a formato Markdown</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/desarrollar-componentes-react-con-typescript-y-sistemas-de-diseno-con-storybook/">Desarrollar componentes React con TypeScript y sistemas de diseño con Storybook</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/usar-un-paquete-npm-con-webpack-creado-con-storybook-react-y-typescript/">Usar un paquete npm con Webpack creado con Storybook, React y TypeScript</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/animaciones-y-transformaciones-2d-y-3d-con-css/">Animaciones y transformaciones 2D y 3D con CSS</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/copia-de-seguridad-restauracion-y-carga-de-datos-en-postgresql-y-mysql/">Copia de seguridad, restauración y carga de datos en PostgreSQL y MySQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/">El problema de seguridad tabnabbing y phishing en los enlaces en nuevas pestañas a páginas externas y cómo solucionarlo</a></li>
</ul>
<p>Artículos sobre juegos con la PlayStation.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/el-juego-xcom-2-y-guia-de-estrategia/">El juego XCOM 2 y guía de estrategia</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/que-es-mejor-para-jugar-y-10-variables-para-elegir-entre-pc-o-consola/">Qué es mejor para jugar y 10+ variables para elegir entre PC o consola</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/introduccion-al-juego-de-batallas-navales-world-of-warships-legends-para-consola/">Introducción al juego de batallas navales World of Warships Legends para consola</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/">Análisis y guía del juego de estrategia Frostpunk</a></li>
</ul>
<p>Algunos nuevos desempaquetados.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/desempaquetado-olla-a-presion-rapida-kuhn-rikon-duromatic-supreme-de-3-5-litros/">Desempaquetado olla a presión rápida Kuhn Rikon Duromatic Supreme de 3,5 litros</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/">Desempaquetado y análisis de altavoz inteligente Amazon Echo con asistente Alexa</a></li>
</ul>
<p>Y una contribución al proyecto <a href="https://tapestry.apache.org/">Apache Tapestry</a> con la que actualicé el diseño de la página del proyecto a una versión más moderna y soportando múltiples dispositivos con un diseño adaptable.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/generar-enlaces-a-paginas-y-de-eventos-en-apache-tapestry/">Generar enlaces a páginas y de eventos en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/tres-contribuciones-al-proyecto-apache-tapestry-actualizacion-de-la-pagina-web-artwork-del-logotipo-y-arquetipo-maven-quickstart/">Tres contribuciones al proyecto Apache Tapestry, actualización de la página web, artwork del logotipo y arquetipo Maven quickstart</a></li>
</ul>
<p>Y otros que no entran en las categorías anteriores.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/">Conferencia BilboStack 2020</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/">10º aniversario del blog</a></li>
</ul>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/</id>
        <title>Desempaquetado y análisis de altavoz inteligente Amazon Echo con asistente Alexa</title>
        <updated>2020-06-26T20:30:00+02:00</updated>
        <published>2020-06-26T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El altavoz es un dispositivo que también ha añadido funciones de dispositivo inteligente, al igual que ha ocurrido con los teléfonos móviles y televisores. Son controlados  por voz y con la aplicación para <em>smartphone</em> capaces de leer noticias, el tiempo, el tráfico, música, radios o de servicios en <em>streaming</em>, el centro para controlar dispositivos del hogar y muchas otras funcionalidades agregables mediante <em>skills</em>. Amazon, Goolge y Apple tiene su versión de altavoz inteligente, pequeños con buena calidad de sonido y diferentes modelos entre los que elegir.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/amazon.svg" width="350" height="70" alt="Amazon" title="Amazon"  class=""></p>
</div>
<p>Los altavoces que tengo los compré con el primer ordenador, el venerable AMD Athlon XP 1800+, pagado con el dinero de mi primer trabajo en el 2004, unos <a href="https://www.cnet.com/products/cambridge-soundworks-fourpointsurround-fps1600-speaker-system-for-pc/">Creative Fourpointsurround FPS 1600 4.1</a>. Unos altavoces con uno dedicado a los graves o <em>subwoofer</em> con a mi entender una muy buena calidad de sonido y potencia. Durante esta casi una década y media he estado muy contento con ellos, hasta ahora que he decidido buscar una alternativa por un problema que llevo arrastrando no desde hace días, semanas o meses sino ya algunos años.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="el-problema-de-mis-altavoces">El problema de mis altavoces</h3>
<p>El problema es que aleatoriamente en ciertos periodos de tiempo cada pocos minutos el volumen sube y al cabo de un tipo vuelve a bajar, en algunas ocasiones aguanta un cuarto de hora o media hora sin variación de volumen. Para ver vídeos donde alguien está hablando y algunos sonidos no se nota pero escuchando música sí, la diferencia entre el tono alto y bajo tiene suficiente diferencia como para que sea molesto, con este problema es difícil ajustar el volumen y en algunas ocasiones requiere ajustarlo desde el mando de control y desde el volumen del entorno de escritorio del ordenador.</p>
<p>El problema tiene que estar en la placa alojada en el altavoz de graves o en el potenciómetro del control de volumen que tiene. He abierto el <em>subwoofer</em> y la placa electrónica tiene numerosos condensadores de electrolito líquido pero ninguno presenta signos de estar claramente dañado, normalmente los condensadores de electrolito líquido en mal estado se abomban en la parte superior y en los más dañados el líquido sale que al secarse genera alrededor del condensador como una arenilla.</p>
<p>Seguramente los altavoces tengan arreglo pero no sé lo suficiente ni tengo las herramientas como para arreglarlos, para cambiar el potenciómetro necesitaría comprar un soldador, estaño, desoldador y un potenciómetro sustituto para el actual. Comprar el material para intentar arreglarlos sin ninguna garantía de repararlos viene siendo algo similar a comprar unos altavoces nuevos, y al final es lo que he hecho buscar unos sustitutos.</p>
<p>Me dará pena tener que sustituirlos pero para escuchar música de forma cómoda no encuentro otra opción.</p>
<h3 id="los-altavoces-sustitutos-candidatos">Los altavoces sustitutos candidatos</h3>
<p>Cuando compro algo electrónico u algún otro producto que más o menos entiendo para saber las diferencias entre un producto y otro normalmente me informo lo mejor que puedo hasta decidirme por la opción que mejor considero evaluando el precio y características de cada opción. Los artículos de las series de <a href="https://picodotdev.github.io/blog-bitix/series/desempaquetado-tecnologia/">desempaquetado de tecnología</a> y <a href="https://picodotdev.github.io/blog-bitix/series/desempaquetado-otros/">desempaquetado de productos no tecnológicos</a> tienen algunos ejemplos que incluyen un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC</a>, una <a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">PlayStation 4</a> o un <a href="https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/">termo de agua sanitaria Fleck</a> o <a href="https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/">el contrato con la compañía eléctrica Holaluz</a>.</p>
<p>En esta ocasión no he evaluado muchas opciones ni he analizado en detalle todas las opciones. Sé que quería unos altavoces con una calidad como los que tenía ya que unos de los principales uso que les doy es escuchar música, esto incluye casi por necesidad que tengan altavoz de graves. Otro requerimiento es que no fuesen muy grandes y no tuviesen muchos cables, los que tenía eran 4.1 pero siempre los he usado como 2.1 por imposibilidad en mi habitación de colocar los traseros como se debiera. Un número grande de altavoces requiere muchos cables que hay que ordenar.</p>
<p>Con estas opciones he buscado las primeras opciones que ofrece <a href="https://amzn.to/2BG6lgI">Amazon al buscar por altavoces</a> y similares búsquedas (<em>altavoces subwoofer</em>, <em>altavoces 2.1</em>). Unos de la propia marca Amazon Basics, algunas otras opciones similares a los Creative en diferentes rangos de precio.</p>
<p>Los básicos.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07D924NF5&amp;linkId=d6e5b0f6c78bde2069d2e8821e095c63" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07DKG7K9Y&amp;linkId=9800857d36f4000427c267e498472bcc" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B018G4AZ7O&amp;linkId=8c04ddc7509093793947ae52029e83a2" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07ZKSKWCS&amp;linkId=c076445e432f6790037fac24032b806a" title="Amazon" class="lozad"></iframe>
</div>
<p>Los similares a los que tenía.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00PA99NSG&amp;linkId=f29c42af9d24204f63204729c16e36e6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00YR92T90&amp;linkId=ebdd422effdacdd847cd5bf7111ce06f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00S9P0II2&amp;linkId=6a1d0c9f5e5c02821cf8a6b227632d0f" title="Amazon" class="lozad"></iframe>
</div>
<p>En el momento de buscar estas opciones y un poco lo que me ha decidido a comprarlos es que los altavoces inteligentes de Amazon estaban de oferta, entre los varios que tiene está <a href="https://amzn.to/2G75Qyj">los altavoces inteligentes Echo con asistente Alexa</a>, bastante pequeño y compacto, con pocos cables y con buena calidad de sonido al tener altavoz de graves, mucho mejor que la de los propios altavoces del monitor o de un portátil, al menos la suficiente para mi.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B084DWG2VQ&amp;linkId=dfee8f752fb3ae262d93f965a17ac493" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09G3WTR3R&amp;linkId=5a877e9655eedb0a557c0a47ad5cb983" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07NQDHC7S&amp;linkId=818498cd99253ab7e47d0a6a4afbaeff" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00NO73MUQ&amp;linkId=3954e70941543ecb9ada5c76d26024e9" title="Amazon" class="lozad"></iframe>
</div>
<p>Finalmente, me he decidido por el Amazon Echo de tercera generación, por precio está en la categoría de altavoces de gama media-alta de las que he encontrado pero para lo que lo quería y este tiene es la que elegido. Mi uso será principalmente como altavoz para el ordenador y la PlayStation, posiblemente no use muchas de sus opciones como altavoz inteligente pero otras es posible que sí como la posibilidad de escuchar música de Amazon Music o la radio sin necesidad de tener el ordenador encendido o como hilo musical al dormir. Lo que pierdo es el sonido estéreo pero recupero una buena cantidad de espacio en la mesa y quito un par de cables.</p>
<h3 id="desempaquetado-de-amazon-echo-3ª-generación">Desempaquetado de Amazon Echo (3ª generación)</h3>
<p>El color que he elegido ha sido el negro o antracita, otros colores son azul o añil, gris claro y gris oscuro. Es bastante compacto, las dimensiones son de 14,5 cm de alto y 9,5 cm de diámetro, requiere alimentación eléctrica e incluye un pequeño cargador rectangular a juego con el color del altavoz también de color negro.</p>
<p>La caja incluye un pequeño manual de puesta en funcionamiento y configuración.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-1_hu4d491435f2275989db583f9bbb10f919_2209495_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-1_hu4d491435f2275989db583f9bbb10f919_2209495_200x150_fit_q90_box.jpg" width="76" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-2_hu0300a76c60999a4212f23851c26503cb_2608941_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-2_hu0300a76c60999a4212f23851c26503cb_2608941_200x150_fit_q90_box.jpg" width="75" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-3_hu0abdf4f3133bf193981f457ebaa411f6_2099575_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-3_hu0abdf4f3133bf193981f457ebaa411f6_2099575_200x150_fit_q90_box.jpg" width="77" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-4_hu17a3ee9c550389bfdb03543adf82a0c7_2362152_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-4_hu17a3ee9c550389bfdb03543adf82a0c7_2362152_200x150_fit_q90_box.jpg" width="76" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-5_hu981b8e7b6a6b61203f4021d6ceebb69b_1138192_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-5_hu981b8e7b6a6b61203f4021d6ceebb69b_1138192_200x150_fit_q90_box.jpg" width="151" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-6_huc2862c7f489e352dbdf2d51300867175_2000386_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-6_huc2862c7f489e352dbdf2d51300867175_2000386_200x150_fit_q90_box.jpg" width="135" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-7_hu804ec310445593c756685d0d24ef9358_2421729_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-7_hu804ec310445593c756685d0d24ef9358_2421729_200x150_fit_q90_box.jpg" width="78" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-8_hu417f86951ae3d71137b6ca17a5b5ae5b_1466962_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/caja-amazon-echo-8_hu417f86951ae3d71137b6ca17a5b5ae5b_1466962_200x150_fit_q90_box.jpg" width="121" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/desempaquetado-amazon-echo-1_hu6c1f7327f96938e20c2b7912ef479ee1_1587965_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/desempaquetado-amazon-echo-1_hu6c1f7327f96938e20c2b7912ef479ee1_1587965_200x150_fit_q90_box.jpg" width="149" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/desempaquetado-amazon-echo-2_hu353a61dede361639627330dbe4d322e0_2555757_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/desempaquetado-amazon-echo-2_hu353a61dede361639627330dbe4d322e0_2555757_200x150_fit_q90_box.jpg" width="110" height="150" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/desempaquetado-amazon-echo-3_hue387981d2a6fd5528859c37476f68fe3_1100362_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/desempaquetado-amazon-echo-3_hue387981d2a6fd5528859c37476f68fe3_1100362_200x150_fit_q90_box.jpg" width="200" height="66" alt="Desempaquetado Amazon Echo" title="Desempaquetado Amazon Echo"  class="lozad "></a></p>
<figcaption>Desempaquetado Amazon Echo</figcaption>
</figure>
</div>
<h3 id="primeros-pasos-funcionamiento-y-privacidad">Primeros pasos, funcionamiento y privacidad</h3>
<p>La configuración consiste básicamente en hacer que el altavoz Echo se conecte a la red WiFi de nuestra casa. Para hacer la configuración es necesario utilizar un <em>smartphone</em> y descargar e instalar <a href="https://play.google.com/store/apps/details?id=com.amazon.dee.app&amp;hl=es">la aplicación de Alexa para el móvil ya sea Android</a> o <a href="https://apps.apple.com/es/app/amazon-alexa/id944011620">iOS</a> de sus tiendas de aplicaciones, en el proceso también se requiere activar la conexión Bluetooth en el móvil y conectarse al dispositivo Echo.</p>
<p>Cuando se compra en Amazon se ofrece la posibilidad de preconfigurarlo para que se conecte a la WiFi automáticamente si ya se tiene otro dispositivo. Para hacer la configuración manualmente en la aplicación de Alexa del móvil es añadir el nuevo dispositivo y seguir los pasos, poner el altavoz en modo configuración si es necesario pulsado el botón de acción durante 6 segundos, se encenderá el anillo de luz con color naranja. Hay que buscar la red WiFi por el nombre e introducir su contraseña, si la WiFi está oculta hay que introducir además su nombre.</p>
<ul>
<li><a href="https://www.amazon.es/gp/help/customer/display.html?nodeId=GKFJXZCLQ83HGHQZ">Cómo configurar el altavoz Amazon Echo</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/configuracion-amazon-echo_hue8cb26c098e4b2c70c99919b427bde42_1600258_2560x1440_fit_q90_box.jpg" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/configuracion-amazon-echo_hue8cb26c098e4b2c70c99919b427bde42_1600258_200x150_fit_q90_box.jpg" width="125" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-1_hu4de5e8dae9d72659902e473a7c200f99_118237_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-1_hu4de5e8dae9d72659902e473a7c200f99_118237_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-2_hubd5958efb0cefeb7c57f0a46d0aba225_135561_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-2_hubd5958efb0cefeb7c57f0a46d0aba225_135561_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-3_hu4a7b0887db6b460ad3f5bf2d4f7fcf33_201208_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-3_hu4a7b0887db6b460ad3f5bf2d4f7fcf33_201208_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-4_hue2c7484e9fbb72ea9af95df75d930d14_101970_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-4_hue2c7484e9fbb72ea9af95df75d930d14_101970_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-5_hu2d49571ce7dc60dbc8979c53a17276c5_168038_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-5_hu2d49571ce7dc60dbc8979c53a17276c5_168038_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-6_huabf1d4204ff97da682e14e64ad8426de_104779_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-6_huabf1d4204ff97da682e14e64ad8426de_104779_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-7_huc98cc7b8653b75fb314b05e3df18f885_59814_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-7_huc98cc7b8653b75fb314b05e3df18f885_59814_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-8_hubbec5d260723737fa858754405c3f4d7_114789_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-8_hubbec5d260723737fa858754405c3f4d7_114789_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-9_hu8791ded8ba30a70a91a5bc7b6c15679c_253189_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-9_hu8791ded8ba30a70a91a5bc7b6c15679c_253189_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-10_hu3af8c9cf855b7679652cb123a74a2a18_131946_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-10_hu3af8c9cf855b7679652cb123a74a2a18_131946_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-11_hu1361d64581b5518f8b1e64124e90ca0b_202169_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-11_hu1361d64581b5518f8b1e64124e90ca0b_202169_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-12_hu2aefab8e456af601bfb9e50f0101a18d_174880_2560x1440_fit_box_3.png" data-gallery="" title="Configuración Amazon Echo"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-configuracion-12_hu2aefab8e456af601bfb9e50f0101a18d_174880_200x150_fit_box_3.png" width="84" height="150" alt="Configuración Amazon Echo" title="Configuración Amazon Echo"  class="lozad "></a></p>
<figcaption>Configuración Amazon Echo</figcaption>
</figure>
</div>
<p>La aplicación permite configurar el volumen, el ecualizador según las preferencias y el modo de entrada o salida de la clavija <em>jack</em> 3.5mm. En mi caso tengo el ordenador conectado por HDMI al monitor, por el mismo HDMI va la señal de imagen para el monitor y de sonido para los altavoces, desde el monitor con la salida de <em>jack</em> 3.5mm con un cable macho-macho conecto el monitor a los altavoces.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-alexa_hu7579bac2a9ae2889f9ec2af2f5845a76_152267_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación Alexa"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-alexa_hu7579bac2a9ae2889f9ec2af2f5845a76_152267_200x150_fit_box_3.png" width="84" height="150" alt="Aplicación Alexa" title="Aplicación Alexa"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-acerca-de-1_hu01850469186c21db498178d2ddc11250_94051_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación Alexa"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-acerca-de-1_hu01850469186c21db498178d2ddc11250_94051_200x150_fit_box_3.png" width="84" height="150" alt="Aplicación Alexa" title="Aplicación Alexa"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-acerca-de-2_hu2f75a3f37e182886cb6ea43e0d41d9fc_97245_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación Alexa"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-acerca-de-2_hu2f75a3f37e182886cb6ea43e0d41d9fc_97245_200x150_fit_box_3.png" width="84" height="150" alt="Aplicación Alexa" title="Aplicación Alexa"  class="lozad "></a></p>
<figcaption>Aplicación Alexa</figcaption>
</figure>
</div>
<p>Aparte de la aplicación móvil Alexa tiene una <a href="https://alexa.amazon.es">aplicación accesible con el navegador desde el ordenador</a>, en ella se pueden realizar las acciones de configuración, añadir nuevos dispositivos y ver las listas, recordatorios, alarmas y activar o desactivar <em>skills</em>.</p>
<p>El altavoz queda vinculado a la cuenta de Amazon y en esta se guarda todo el historial de comandos de voz, como esto es un inconveniente para los usuarios que protegen su privacidad se puede configurar para eliminar el historial de interacciones y hacerlo automáticamente para eliminar las interacciones más antiguas de 3 meses. También se puede configurar para que Amazon no utilice nuestra voz para entrenar sus algoritmos de inteligencia artificial de reconocimiento de voz. Otra opción recomendable a desactivar es la opción de realizar compras por control de voz, esto es un problema si viendo un vídeo que incluye el comando necesario para realizar la compra y se activa Alexa sin ser nosotros conscientes.</p>
<p>El asistente Alexa se basa en la nube por eso requiere conexión permanente a internet, se activa por una palabra de activación que puede ser <em>Alexa</em>, <em>Echo</em> o <em>Amazon</em>. El altavoz está permanentemente escuchando esta palabra, si la detecta a continuación escucha el comando de voz, cuando el comando termina lo transmite a la nube para su reconocimiento y recibe la respuesta. Mientras no se detecte la palabra de activación no hay comunicación con internet ni la nube. El altavoz posee un botón para desactivar completamente la escucha, incluida la palabra de activación, este estado se identifica por el anillo luminoso rojo. Esto dota al dispositivo de privacidad salvo que contenga funciones maliciosas ocultas.</p>
<p>El volumen de sonido al máximo en GNOME es muy bajo, tengo que poner el Echo al nivel 6 o 7 para tener un volumen satisfactorio, con este volumen si Alexa habla supongo es posible que se entere el vecino por eso me gustaría que Alexa tuviese el modo susurro activado siempre. En GNOME la aplicación <em>Retoques</em> tiene un opción para activar la sobreamplificación lo que permite subir el volumen por encima del máximo, la misma opción indica de que esto puede suponer una pérdida de calidad, no la he notado. El sobrevolumen se usa desde el mismo panel de control de volumen.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/retoques_huae9710c5bf89f859c5a1e06880a3e5e0_42629_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación Retoques de GNOME para activar la sobreamplicación"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/retoques_huae9710c5bf89f859c5a1e06880a3e5e0_42629_200x150_fit_box_3.png" width="200" height="133" alt="Aplicación Retoques de GNOME para activar la sobreamplicación" title="Aplicación Retoques de GNOME para activar la sobreamplicación"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/gnome-configuracion-sonido_hue1c39ff5306ff114a63d55cb119fb13e_79363_2560x1440_fit_box_3.png" data-gallery=""><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/gnome-configuracion-sonido_hue1c39ff5306ff114a63d55cb119fb13e_79363_200x150_fit_box_3.png" width="194" height="150"  class="lozad "></a></p>
<figcaption>Aplicación Retoques y configuración de sonido en GNOME</figcaption>
</figure>
</div>
<p>Escuchando música aún perdiendo el estéreo no noto tanta diferencia como pensaba, jugando en la PlayStation si noto diferencia en el estéreo.</p>
<p>Las rutinas son una serie de comandos que son ejecutados por Alexa, se pueden activar a una cierta hora o con un comando de voz personalizado. También pueden activarse desde la aplicación del <em>smartphone</em>. Son muy útiles, por ejemplo para poner una radio y a un determinado volumen o bajar el volumen a una cierta hora los días entre semana.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-1_hu90984368a11874fd078797c564587ea3_181190_2560x1440_fit_box_3.png" data-gallery="" title="Programación de rutinas"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-1_hu90984368a11874fd078797c564587ea3_181190_200x150_fit_box_3.png" width="84" height="150" alt="Programación de rutinas" title="Programación de rutinas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-2_hu1e7e0f677c3ef0d50e2a23fc4eb47925_146356_2560x1440_fit_box_3.png" data-gallery="" title="Programación de rutinas"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-2_hu1e7e0f677c3ef0d50e2a23fc4eb47925_146356_200x150_fit_box_3.png" width="84" height="150" alt="Programación de rutinas" title="Programación de rutinas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-3_hu1e7e0f677c3ef0d50e2a23fc4eb47925_127192_2560x1440_fit_box_3.png" data-gallery="" title="Programación de rutinas"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-3_hu1e7e0f677c3ef0d50e2a23fc4eb47925_127192_200x150_fit_box_3.png" width="84" height="150" alt="Programación de rutinas" title="Programación de rutinas"  class="lozad "></a></p>
<figcaption>Programación de rutinas</figcaption>
</figure>
</div>
<p><a href="https://www.amazon.es/gp/help/customer/display.html?nodeId=201601790">El anillo luminoso puede tomar varios colores</a> con diferentes significados de notificaciones, error o actividad: Amarillo, Rojo, Azul, Naranja, Morado, Verde, Blanco.</p>
<p>En las páginas de ayuda hay más información de los dispositivos Alexa:</p>
<ul>
<li><a href="https://www.amazon.es/gp/help/customer/display.html/ref=hp_bc_nav?ie=UTF8&amp;nodeId=202009680">Ayuda para dispositivos Alexa</a></li>
<li><a href="https://www.amazon.es/gp/help/customer/display.html?nodeId=201399130">Ayuda de Amazon Echo</a></li>
</ul>
<h3 id="primeras-impresiones">Primeras impresiones</h3>
<p>Se configura fácil, es bastante pequeño y requiere menos cables que otros altavoces. Para su tamaño pesa bastante aunque esto no es muy relevante, su peso y tamaño tampoco es muy grande pudiendo colocarse en cualquier lugar. En su tamaño es posiblemente el altavoz con mejor calidad de sonido y diseño. La calidad del sonido en graves es buena, yo no percibo una diferencia significativa con los altavoces 2.1 que tenía con <em>subwoofer</em> y estéreo, y estos eran ya bastante buenos.</p>
<p>Aún sin crear un perfil de voz Alexa reconoce perfectamente la voz no me ha dado ningún problema salvo en alguna rara ocasión no reconocer la palabra de activación. Tanto en voz normal como hablando en modo susurro incluso cuando el altavoz está reproduciendo música e invocando a Alexa a unos metros de distancia en el lado más alejado de la habitación la escucha. Si está reproduciendo música y se invoca baja el volumen del altavoz para reconocer mejor el comando.</p>
<p>La potencia de volumen del Echo no llega a la que podrían alcanzar los FPS1600 que tenía pero en su escala de niveles de volumen de 0 al 10 el 4-5 es el normal y el 8 ya lo considero elevado. El Echo tiene clavija <em>jack</em> 3.5mm que puede funcionar como entrada o salida, de salida para enviar sonido a otros altavoces externos mejores o como entrada que es lo que utilizaré para escuchar el sonido del ordenador. También permite recibir sonido por conexión Bluetooth desde el móvil o desde el ordenador o <em>tablet</em>.</p>
<p>Si se pretenden utilizar los botones físicos es recomendable ubicar el altavoz al alcance de la mano aunque el único realmente imprescindible es el de desactivar los micrófonos para que Alexa deje de escuchar la palabra de activación y el comando de voz. El volumen se puede cambiar con comandos de voz.</p>
<p>Se le puede pedir música de diferentes géneros clásica, electrónica, <em>techno</em> y reproduce canciones de Amazon Music gratuitamente aunque sin la posibilidad de elegir un artista o canción determinada para lo cual se necesita un servicio de suscripción. Es muy cómodo estar en la cama despertarte a la 7 y sin levantarte decirle que te ponga una alarma dentro de dos horas o pedirle que te ponga música o la radio al volumen deseado. Para personas con movilidad o visión reducida es un gran dispositivo de ayuda ya que al estar basado principalmente en la voz es accesible para estas personas aunque para algunas tareas se requiere utilizar la aplicación.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/funcionamiento-amazon-echo_hub43baeef3a1017298fb415aa5193e687_1555363_2560x1440_fit_q90_box.jpg" data-gallery="" title="Amazon Echo escuchando un comando de voz "><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/funcionamiento-amazon-echo_hub43baeef3a1017298fb415aa5193e687_1555363_300x200_fit_q90_box.jpg" width="179" height="200" alt="Amazon Echo escuchando un comando de voz " title="Amazon Echo escuchando un comando de voz "  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/cable-jack-macho-macho-3-5mm_hu81f6f2c9bc0be92af584c2840e465156_1894039_2560x1440_fit_q90_box.jpg" data-gallery="" title="Cable jack 3.5mm macho-macho"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/cable-jack-macho-macho-3-5mm_hu81f6f2c9bc0be92af584c2840e465156_1894039_300x200_fit_q90_box.jpg" width="300" height="192" alt="Cable jack 3.5mm macho-macho" title="Cable jack 3.5mm macho-macho"  class="lozad "></a></p>
<figcaption>Amazon Echo escuchando un comando de voz y cable jack 3.5mm</figcaption>
</figure>
</div>
<h3 id="funcionalidades-y-skills">Funcionalidades y skills</h3>
<p>Para darle el mayor uso al Amazon Echo la dificultad está en conocer qué comandos de voz se pueden utilizar. Aún desconozco en gran medida las posibilidades de los altavoces inteligentes y del asistente virtual Alexa controlador por voz. Requiere conexión a internet mediante WiFi soportando redes redes 802.11 a/b/g/n/ac (WiFi 5) pero no ax (WiFi 6).</p>
<p>El altavoz inteligente soporta una serie de funciones invocadas por control de voz, algunos comandos son para controlar el volumen del altavoz, para saber la hora, de información general a modo de enciclopedia, traducciones, el tiempo del día, de mañana o del fin de semana, noticias, crear listas de tareas, listas de compra, crear recordatorios, alarmas o temporizadores o escuchar música. Estos son algunos de los comandos por defecto más útiles. También es capaz de reproducir música en <em>streaming</em> de servicios como Amazon Music, Apple o Spotify así como leer noticias de actualidad y reproducir emisoras de radio.</p>
<p>Algunos ejemplos de comandos de voz son los siguientes sin ser esta una lista completa. Hay más comandos de voz.</p>
<p>Volumen, hora y meteorología.</p>
<ul>
<li>&ldquo;Alexa, sube el volumen&rdquo;</li>
<li>“Alexa, pon el volumen al 5”</li>
<li>&ldquo;Alexa, ¿qué hora es?&rdquo;</li>
<li>&ldquo;Alexa, ¿va a llover mañana?&rdquo;</li>
<li>&ldquo;Alexa, ¿qué tiempo va a hacer en Pontevedra este fin de semana?&rdquo;</li>
<li>&ldquo;Alexa, ¿qué tiempo hace en París?&rdquo;</li>
</ul>
<p>Información general.</p>
<ul>
<li>&ldquo;Alexa, ¿cuánto mide El Teide?&rdquo;</li>
<li>&ldquo;Alexa, ¿cuánto es 100 entre 16?&rdquo;</li>
<li>&ldquo;Alexa, ¿quién es el Primer Ministro de Italia?&rdquo;</li>
<li>&ldquo;Alexa, ¿cómo se dice «Te quiero» en francés?&rdquo;</li>
<li>&ldquo;Alexa, ¿cómo se dice «Buenos días» en japonés?&rdquo;</li>
<li>&ldquo;Alexa, ¿cCómo se dice «Muchas gracias» en italiano?&rdquo;</li>
</ul>
<p>Noticias.</p>
<ul>
<li>&ldquo;Alexa, ¿cuáles son las noticias?&rdquo;</li>
</ul>
<p>Listas de tareas y compra</p>
<ul>
<li>&ldquo;Alexa, añade «sacar a pasear al perro» a mi lista de tareas&rdquo;</li>
<li>&ldquo;Alexa, añade «leche» a mi lista de la compra&rdquo;</li>
</ul>
<p>Recordatorios, temporizadores y alarmas.</p>
<ul>
<li>&ldquo;Alexa, pon un recordatorio&rdquo;</li>
<li>&ldquo;Alexa, te ayuda a que no se te olvide nada&rdquo;</li>
<li>&ldquo;Alexa, pon un temporizador de 10 minutos para la pizza&rdquo;</li>
<li>&ldquo;Alexa, pon una alarma para las 8 de la mañana&rdquo;</li>
<li>&ldquo;Alexa, despiértame por la mañana&rdquo;</li>
<li>&ldquo;Alexa, pon una alarma recurrente todos los días de entre semana a las siete de la mañana&rdquo;</li>
<li>&ldquo;Alexa, ¿qué alarmas tengo?&rdquo;</li>
<li>“Alexa, pospón&hellip;&quot; (y disfruta de unos minutos más de sueño)</li>
</ul>
<p>Escuchar música por género o música utilizando el servicio gratuito Amazon Music o con suscripciones de servicios como Amazon Music Unlimited o Spotify.</p>
<ul>
<li>&ldquo;Alexa, pon música&rdquo;</li>
<li>&ldquo;Alexa, siguiente&rdquo;</li>
<li>“Alexa, ¿qué canción es esta?&quot;</li>
<li>&ldquo;Alexa, para la música&rdquo;</li>
<li>&ldquo;Alexa, pon música de los 80&rdquo;</li>
<li>&ldquo;Alexa, pon música de los 60&rdquo;</li>
<li>&ldquo;Alexa, pon música rock&rdquo;</li>
<li>&ldquo;Alexa, pon música country&rdquo;</li>
</ul>
<p>Para usar <em>skills</em>.</p>
<ul>
<li>&ldquo;Alexa, abre el diario punto es&rdquo;</li>
<li>&ldquo;Alexa, abre el diario punto es&rdquo; y dame las noticias de política</li>
</ul>
<p>Las <em>skills</em> son nuevas funcionalidades, habilidades y comandos que Alexa es capaz de reconocer. Activar <em>skills</em> es muy sencillo, están organizadas en categorías: novedades, alimentos y bebidas, meteorología, coche conectado, compras, curiosidades y humor, deportes, educación y referencia, estilo de vida, hogar digital, infantil, juegos y curiosidades, local, música y audio, negocios y finanzas, noticias, películas y TV, productividad, salud y bienestar, servicios, local, viaje y transporte. Desactivar una <em>skill</em> es igual de sencillo, en un listado se muestran las activadas. Las <em>skills</em> no se instalan en el Echo simplemente se activan y desactivan, hay gran cantidad de ellas aunque las realmente útiles serán muchas menos.</p>
<ul>
<li><a href="https://www.amazon.es/b?ie=UTF8&amp;node=13944662031">Listado de <em>skills</em> para Amazon Echo</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-skills-1_hu660b1ced9ba5bf86095f86f86e4aeedc_700096_2560x1440_fit_box_3.png" data-gallery="" title="Skills"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-skills-1_hu660b1ced9ba5bf86095f86f86e4aeedc_700096_200x150_fit_box_3.png" width="84" height="150" alt="Skills" title="Skills"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-skills-2_hu904ffa29be1959944b35ae2a7c673385_204342_2560x1440_fit_box_3.png" data-gallery="" title="Skills"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-skills-2_hu904ffa29be1959944b35ae2a7c673385_204342_200x150_fit_box_3.png" width="84" height="150" alt="Skills" title="Skills"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-skills-3_hu91199cffdd2efe76b4c40ee9f9431997_209032_2560x1440_fit_box_3.png" data-gallery="" title="Skills"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-skills-3_hu91199cffdd2efe76b4c40ee9f9431997_209032_200x150_fit_box_3.png" width="84" height="150" alt="Skills" title="Skills"  class="lozad "></a></p>
<figcaption>Skills</figcaption>
</figure>
</div>
<p>Además de los dispositivos inteligentes como enchufes y bombillas el Echo es capaz de controlar cualquier aparato que tenga un mando por infrarrojos o radiofrecuencia incluyendo televisores, reproductores de vídeo o aires acondicionados. Con un emisor compatible con Alexa es capaz de emitir las señal infrarrojo y radiofrecuencia que el mando del aparato electrónico original y controlarlo. Otros dispositivos controlables son enchufes para encender y apagar aparatos o bombillas regulables en color e intensidad para crear ambientes cómodas para bajar la luminosidad al ver una película.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07ZSG9Y67&amp;linkId=7a7cea572346dacf8ef2141263ab837a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07SPYB4TQ&amp;linkId=93d88d8597b0da6936925ad0d6070c24" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07MSCBGZP&amp;linkId=7284dbe8a31b1691523fb74bd6183c14" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="problemas-algunos-que-he-resuelto-y-cosas-que-me-gustaría-que-tuviese">Problemas, algunos que he resuelto y cosas que me gustaría que tuviese</h3>
<p>Y ahora unos problemas y cosas que me gustaría que tuviese después de los primeros momentos de uso. Algunos son por problemas con mi ordenador otros son mejoras que podrían tener los altavoces Echo.</p>
<p>La configuración que quería como altavoz para el ordenador funciona correctamente, el conector <em>jack</em> 3.5mm se puede configurar como entrada para el ordenador o como salida para unos altavoces externos. Pero si se le indica algún contenido que reproduzca sonido desde la nube la entrada de línea se desactiva, una vez se para el contenido de la nube hay que configurar el altavoz de nuevo, se puede hacer desde la aplicación de <em>smartphone</em> cambiando la salida de audio y de nuevo a la entrada de audio o con el siguiente comando de voz pero no desde la aplicación web. El sonido de la entrada de línea no se puede parar, Alexa lo que hace es silenciar el volumen por eso para recuperarlo hay que cambiarlo, una forma con su comando de voz. Esto lo pongo en la sección de problemas porque hasta después de unos días de uso pensaba que la única posibilidad era utilizar la <em>app</em> de móvil y no se podía hacer con un comando de voz, esto es posiblemente el mayor inconveniente que tenía el resto son mejoras que me gustaría que tuviera.</p>
<ul>
<li>&ldquo;Alexa, reproduce contenido desde la entrada de línea&rdquo;</li>
<li>&ldquo;Alexa, sube el volumen de la entrada de línea&rdquo;</li>
</ul>
<p>En mi caso con <a href="https://www.archlinux.org/">Arch Linux</a> en el ordenador es capaz de conectarse al Echo por Bluetooth, lo reconoce como dispositivo de audio pero luego en la configuración del sonido a veces no se puede seleccionar como dispositivo de audio de salida el altavoz Bluetooth, en vez de esto aparece como dispositivo de entrada. Esto quizá sea un problema del entorno de escritorio GNOME, a la implementación de Bluetooth en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> o a <a href="https://manuelfedele.github.io/guides/2020/05/02/amazon-echo-plus-as-ubuntu-20.04-bluetooth-speaker.html">Amazon Echo Plus as bluetooth speaker on Ubuntu 20.04</a>. El mismo problema le pasa a algunos usuarios de <a href="https://www.ubuntu.com/">Ubuntu</a>. Después de varias pruebas he conseguido que me funcione, los pasos que he seguido están basados en el enlace anterior que han sido poner el Echo en modo emparejamiento, emparejarlos e iniciar la conexión por Bluetooth desde Linux mientras se reproduce sonido. La opción para realizar la conexión desde el panel de control de Bluetooth parece que lo intenta e inmediatamente la opción se desactiva de nuevo pero después de intentarlo varias veces seguidas al cabo unos segundos se conecta y comienza la reproducción.</p>
<p>El sonido del ordenador por Bluetooth soluciona un problema que tenía con el sonido por conexión HDMI. Por HDMI y sacando el sonido por <em>jack</em> 3.5mm desde el monitor ocurre que cuando se activa el protector de pantalla o la pantalla de bloqueo la señal del HDMI se apaga y afecta al sonido que también deja de emitirse, por Bluetooth la reproducción continua perfectamente, aunque el Bluetooth de la PlayStation 4 no es compatible con Amazon Echo. Usando mi móvil lo he conectado por Bluetooth para reproducir música perfectamente, si pongo el reproductor las canciones se escuchan sin problema y parando vuelve a reproducir la entrada de línea si se usa esta forma de conexión.</p>
<p>Los dispositivos Bluetooth al igual que la WiFi tiene la opción de hacerse visibles emitiendo su nombre esto está visible para cualquier persona que se encuentre en el rango de alcance con la posibilidad de intentar el emparejamiento y cuanto menos conocer la presencia del dispositivo que suele incluir su modelo, es un problema de privacidad. El Echo solo se hace visible en el momento de emparejamiento que se inicia desde la <em>app</em> pero Linux por defecto se queda siempre en modo visible y posibilitando el emparejamiento, para desactivar esta visibilidad al cabo de un tiempo hay que modificar el archivo de configuración <em>/etc/bluetooth/main.conf</em> con los siguientes valores.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-cfg" data-lang="cfg"><span class="line"><span class="cl"><span class="na">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># How long to stay in discoverable mode before going back to non-discoverable</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># The value is in seconds. Default is 180, i.e. 3 minutes.</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># 0 = disable timer, i.e. stay discoverable forever</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">DiscoverableTimeout</span> <span class="o">=</span> <span class="s">180</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># How long to stay in pairable mode before going back to non-discoverable</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># The value is in seconds. Default is 0.</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># 0 = disable timer, i.e. stay pairable forever</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">PairableTimeout</span> <span class="o">=</span> <span class="s">180</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="na">...</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main.conf</span>
    </div>
</div>
<ul>
<li><a href="https://bugs.launchpad.net/ubuntu/&#43;source/bluez/&#43;bug/1691556">Can&rsquo;t send audio to Amazon Echo via Bluetooth</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Bluetooth_headset">Arch Linux, Bluetooth headset</a></li>
</ul>
<p>No se puede configurar el volumen de sonido de forma independiente para cada categoría de sonido, por ejemplo me gustaría tener una configuración de volumen para la voz de Alexa, por <em>skill</em>, notificaciones y alarmas y para la entrada de línea. El volumen de Alexa y sus funciones me parece demasiada alta comparada con el volumen de la entrada de línea. También me gustaría poder configurar Alexa para que hablase y respondiese siempre en modo susurro y no solo cuando uno le da un comando de voz susurrando.</p>
<p>Utilizar un comando de voz para subir y bajar el volumen en algunas ocasiones es cómodo y en esas ocasiones si se está a cierta distancia, tiene botones físicos pero no son tan cómodos como un potenciómetro. También me gustaría que tuviese una forma de apagarlo completamente con un botón físico, con un comando de voz que no esté permanentemente encendido. También un botón para silenciar el volumen para quitar el audio temporalmente y recuperar el volumen original más tarde sin parar la reproducción. O un botón para parar el audio o la reproducción.</p>
<p>Que todo lo que se pueda hacer con la voz o con los botones físicos se pueda hacer desde una aplicación aunque sea escribiendo el texto. Ahora hay algunas funciones que hay que realizarlas con comandos de voz y otras con la aplicación de Alexa. Las rutinas al activar los <em>skills</em> solo permiten abrirlas, no indicarle el comando exacto de apertura, algunas <em>skills</em> ofrecen varias opciones.</p>
<p>Estaría bien que el audio del altavoz fuera la suma de todas las fuentes de sonido ya que si le pongo a reproducir una radio se deja de el escuchar audio de la entrada de línea en este caso el ordenador.</p>
<p>Configurar que el sonido no pueda ser más de un nivel a ciertas horas, estar de noche y que se active el volumen al máximo porque ha entendido mal un comando al cambiar el volumen, estar a las doce de la noche y que el altavoz se ponga al máximo volumen por una mala interpretación del comando de voz hace que el vecino se entere de ruido e inmediatamente haya que buscar el botón físico para bajar el volumen. Las rutinas en cierta medida permiten programar que a una hora o con un comando hagan una serie de acciones, entre ellas está el cambiar el volumen.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-1_hu90984368a11874fd078797c564587ea3_181190_2560x1440_fit_box_3.png" data-gallery="" title="Rutinas"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-1_hu90984368a11874fd078797c564587ea3_181190_200x150_fit_box_3.png" width="84" height="150" alt="Rutinas" title="Rutinas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-2_hu1e7e0f677c3ef0d50e2a23fc4eb47925_146356_2560x1440_fit_box_3.png" data-gallery="" title="Rutinas"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-2_hu1e7e0f677c3ef0d50e2a23fc4eb47925_146356_200x150_fit_box_3.png" width="84" height="150" alt="Rutinas" title="Rutinas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-3_hu1e7e0f677c3ef0d50e2a23fc4eb47925_127192_2560x1440_fit_box_3.png" data-gallery="" title="Rutinas"><img src="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/images/app-rutinas-3_hu1e7e0f677c3ef0d50e2a23fc4eb47925_127192_200x150_fit_box_3.png" width="84" height="150" alt="Rutinas" title="Rutinas"  class="lozad "></a></p>
<figcaption>Rutinas</figcaption>
</figure>
</div>
<p>El Echo necesita de conexión a internet, en mi caso lo tengo enchufado a la misma regleta de conexión a la corriente que el <em>router</em>. Cuando enciendo la regleta con el botón el <em>router</em> tarda más en conectarse en alguna ocasión y proporcionar conexión a internet al resto de dispositivos el Echo incluido. Cuando el Echo se enciende y no tienen internet no sirve de nada y aún pasado varios minutos después de que el <em>router</em> ya proporcione internet el Echo no ha sido capaz de reconectarse a internet por si mismo, le he tenido que desenchufar y enchufar después de que el <em>router</em> haya terminado de inicializarse, en este momento sí el Echo ha tardado menos de 30 segundos en inicializarse.</p>
<p>Dado que son unos altavoces dependiente de servicios de Amazon me surgen las siguientes preguntas, ¿Amazon dará servicio a los Echo durante al menos dos décadas? ¿ningún Echo se quedará sin soporte ni perderá sus funcionalidades pasados varios años?</p>
<p>Por otro lado, si los altavoces inteligentes tienen éxito como producto con el tiempo saldrá nuevas versiones con más funcionalidades que dejarán desfasados a las versiones anteriores, espero que algunos de los problemas comentados se resuelvan también para las versiones actuales.</p>
<h3 id="familia-de-altavoces-inteligentes-amazon-echo-y-alternativas">Familia de altavoces inteligentes Amazon Echo y alternativas</h3>
<p>La familia de altavoces Echo con el asistente Alexa tiene varios miembros.</p>
<ul>
<li>Echo Flex: de conexión directa al enchufe para ser colocado en cualquier estancia como baño o cocina.</li>
<li>Echo Dot: el más pequeño y básico de los echo.</li>
<li>Echo Dot con reloj: igual que el Echo Dot pero que incorpora un <em>display</em> formado varios 7 segmentos que permite mostrar la hora adecuado como reloj de mesilla.</li>
<li>Echo: ofrece mejor sonido que el Dot, incluye un <em>subwofer</em> para sonidos graves.</li>
<li>Echo Plus: como el Echo pero incorpora el controlador de dispositivos Zigbee que necesitan algunos dispositivos del hogar digital como las bombillas Philips.</li>
<li>Echo Studio: el dispositivo con el mejor sonido que ofrecen los Echo pero también ocupa más y es más caro, puede sustituir a las barras de sonido para una televisión.</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07PFG54H7&amp;linkId=2e34330d54557497f7719413fa93cbf6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B084DWG2VQ&amp;linkId=f0af1545b79856b50e9323460666b75f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B085M6N2XM&amp;linkId=496c57a568de805e3887b7e5bbda0dc5" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B085FXHR38&amp;linkId=b223da848a7966b52f16be6baf77f696" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07NQDHC7S&amp;linkId=a84245cd09eca34bc1ecb8e6b3f6cc86" title="Amazon" class="lozad"></iframe>
</div>
<p>Los Echo Show incluyen una pantalla con la posibilidad de realizar videoconferencias.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08KH2MTSS&amp;linkId=82be0d323ecc21e171b231d2ef2fb30a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B084TNNGPG&amp;linkId=30c07c1580452fc59a07b1f7d1de33b4" title="Amazon" class="lozad"></iframe>
</div>
<p>Tanto Apple como Google ofrecen sus versiones de altavoces inteligentes, Apple el <a href="https://www.apple.com/es/homepod/">HomePod</a> y Google los <a href="https://store.google.com/product/google_home_speaker">Home</a> y <a href="https://store.google.com/product/google_nest_mini">Nest Mini</a>.</p>
<h3 id="conclusión">Conclusión</h3>
<p>El Amazon Echo es pequeño, tiene buena calidad de sonido, solo necesita dos cables y tiene funciones adicionales a unos altavoces tradiciones, en algunas cosas son mejores y en otras podrían mejorar. En oferta tiene un precio similar al de unos altavoces de calidad 2.1. Se gana en comodidad, en espacio pero no se tiene sonido estéreo, salvo que se compre una pareja de ellos, y la conexión auxiliar de entrada de línea no es la predeterminada.</p>
<p>Para mi caso que lo pretendo utilizar principalmente como sustituto de unos altavoces para el ordenador y PlayStation sirven pero no están diseñados específicamente para esta función pero la cumplen con suficiencia. El hecho de requerir permanentemente conexión a internet por el reconocimiento de voz en la nube hace que no sirva de nada sin ella. El mayor problema que me he encontrado ha sido conocer el comando de voz para reproducir el audio de la entrada de línea sin utilizar la <em>app</em> pero lo tiene, además si se está escuchando música o la radio de internet y se empieza a reproducir contenido por la entrada de línea se empieza a reproducir el contenido de la entrada de línea de forma automática.</p>
<p>En algunos aspectos me gusta, se puede usar sin necesidad de ordenador, hay multitud de <em>skills</em> de noticias, radios o el tiempo. El servicios de Amazon Music proporciona música de forma gratuita de diferentes géneros.</p>
<p>Y en otros no me convencen completamente, sobre todo los botones físicos adicionales que comentaba que echo en falta. La aplicación tiene margen para añadir más funciones que a los usuarios les serían muy útiles y entonces sí serían una opción recomendable para más usuarios.</p>
<p>El Echo y Echo Studio son una buena consideración como altavoz para ver películas con una mejor calidad de sonido que la que ofrecen los altavoces integrados de las televisiones, la calidad de sonido y precio es similar que una barra de sonido pero tienen funciones adicionales.</p>
<p>Cuando compré el Echo tenía dudas de si sería buena opción como sustituto de mis antiguos altavoces pero pasados unos días de uso por ahora estoy bastante contento con él. Si tienes cualquier duda de los Echo añade un comentario y trataré de darle respuesta.</p>
<h3 id="vídeos">Vídeos</h3>
<p>En YouTube hay numerosos vídeos con desempaquetados, analizando los altavoces y la familia de altavoces Echo y explicando como funcionan las <em>skills</em> que se pueden activar.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/O52fB3KbD3c" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/q2IYs5hKkLI" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/Dtkozok9msM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
]]>
        </content>
        
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/</id>
        <title>Las sentencias de control de flujo en Java (if, switch, for, while, do-while, try-catch, break, continue e invocación)</title>
        <updated>2020-06-21T07:30:00+02:00</updated>
        <published>2020-06-21T07:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El lenguaje de programación Java utiliza un paradigma orientado a objetos pero también emplea otros paradigmas como el funcional con la incorporación de las <em>lambas</em> en Java 8 y el imperativo en los bloques de sentencias de los métodos. En este artículo están los tipos de sentencias de control de flujo disponibles en el lenguaje de programación Java: condicionales, de repetición, de asignación, de gestión de excepciones e invocación de métodos en Java.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Java es un lenguaje orientado a objetos donde aplicando los principios de encapsulación, herencia y polimorfismo, el código está dentro de los métodos de las clases de los objetos. El código dentro de los métodos sigue los principios de los lenguajes imperativos con una secuencia de sentencias de asignación, control de flujo, llamada a otros métodos y de repetición, más recientemente con la <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">incorporación de las <em>lambdas</em> y referencias a métodos en Java 8</a> es posible emplear también un enfoque de programación funcional.</p>
<p>La orientación a objetos es una forma de organizar el código y los datos que maneja ese código de modo que se respeten los principios de encapsulación, una forma de reutilizar el código con herencia y una forma de abstraer el comportamiento dependiendo de la clase concreta que implementa el método. Pero el código de Java no es únicamente código orientado a objetos también es un lenguaje imperativo para el código de los métodos.</p>
<p>El código imperativo se basa en la ejecución de forma secuencial de un conjunto de sentencias. Las sentencias de un método o programa son de diferente tipo: de asignación, condicionales, de repetición, de gestión de excepciones para controlar errores y de llamadas a funciones, en el caso de los lenguajes orientados a objetos llamadas a métodos. Estas sentencias individuales se pueden anidar unas dentro de otras por ejemplo tener una sentencia de repetición dentro del bloque de sentencias de una condicional.</p>
<p>Cada uno de estos tipos de sentencias forman las piezas básicas de construcción de los programas, combinadas en múltiples lineas de código forman programas complejos que sirven para el propósito para que el programa fue escrito.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="sentencias-de-asignación">Sentencias de asignación</h3>
<p>Las sentencias de asignación sirven para asignar nuevos valores y referencias a objetos a variables y propiedades de objetos. La sintaxis de la asignación consta del nombre de variable que toma el valor a la izquierda, el operador de asignación en el medio y de la expresión a la derecha. El valor de una variable o propiedad cambia con una sentencia de asignación, el valor anterior se reemplaza por el nuevo valor. El nuevo valor de la variable es el resultado de evaluar la expresión que proporciona el valor, con una asignación de inicialización es posible asignar un valor al mismo tiempo que se declara una variable o propiedad de un objeto.</p>
<p>Una variable tiene un valor si se trata de un tipo primitivo de datos, en caso de tener como tipo una clase contiene una referencia a una instancia de un objeto de ese tipo o la referencia nula. Una expresión devuelve como resultado un valor y este es el asignado a la variable por la sentencia de asignación.</p>
<p>Una expresión puede contener múltiples operadores: para datos booleanos (de lógica <em>&amp;&amp;, ||, !</em> y de comparación <em>==, !=, &lt;, &gt;, &lt;=, &gt;=</em>), aritméticos para datos numéricos (<em>+, -, *, /, %, ++, &ndash;</em>) o operadores para datos binarios (<em>&amp;, |, ^, ~, &laquo;, &raquo;, &raquo;&gt;</em>). Otros operadores de asignación (<em>+=, -=, *=, /=, %=, &laquo;=, &raquo;=, &amp;=, ^=, |=</em>) toman como primer operando el valor de la variable, esto evita repetir el nombre de la variable en la expresión y facilita la legibilidad del código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">variable</span> <span class="o">=</span> <span class="n">expresión</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">,</span> <span class="s">&#34;2&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">x</span> <span class="o">=</span> <span class="n">2</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">list</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">,</span> <span class="s">&#34;4&#34;</span><span class="o">);</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Asignacion.java</span>
    </div>
</div>
<p>El operador ternario <em>?:</em> es una expresión condicional que devuelve el valor de la expresión según el resultado de evaluar una expresión booleana.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">variable</span> <span class="o">=</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">?</span> <span class="n">expresionTrue</span> <span class="o">:</span> <span class="n">expresionFalse</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalTernario.java</span>
    </div>
</div>
<h3 id="setencias-condicionales-if-switch">Setencias condicionales (if, switch)</h3>
<p>Las sentencias condicionales son un tipo de sentencia que evalúa una expresión booleana y dependiendo de su valor verdadero o falso ejecuta o no su su bloque de sentencias asociado para cada caso. Las sentencias a continuación de la condición se ejecutan si la sentencia <em>if</em> se evalúa como verdadero. La sentencia <em>if</em> además puede tener otro bloque de sentencias a ejecutar si la expresión booleana se evalúa como falso, el bloque de sentencias <em>else</em>. Las sentencias <em>if</em> y <em>else</em> se pueden encadenar.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if_hu24be44068bad4ad403a69b425c847805_22416_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia if"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if_hu24be44068bad4ad403a69b425c847805_22416_300x200_fit_box_3.png" width="200" height="200" alt="Diagrama sentencia if" title="Diagrama sentencia if"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if-else_hu869d4585cc82fedd18187c9eb1e4060a_23522_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia if-else"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if-else_hu869d4585cc82fedd18187c9eb1e4060a_23522_300x200_fit_box_3.png" width="200" height="200" alt="Diagrama sentencia if-else" title="Diagrama sentencia if-else"  class="lozad "></a></p>
<figcaption>Diagramas sentencias if e if-else <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">sentenciaTrue</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nf">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentenciasTrue</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentenciasTrue</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentenciasFalse</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentenciasTrue</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentenciasTrue</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">bloqueSentenciasFalse</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">2</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;a es mayor que b&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;a no es mayor que b&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalIf.java</span>
    </div>
</div>
<p>Cuando una sentencia <em>if</em> tiene muchas ramas y la expresión condicional comprueba en todos los casos diferentes valores de una misma variable se utiliza la sentencia <em>switch</em>. Si el valor de la variable coincide con el valor del bloque del caso se ejecutan las sentencias de ese bloque. Cada bloque ha de estar finalizado con sentencia <em>break</em> para no evaluar las sentencias del siguiente bloque. El caso <em>default</em> permite ejecutar un bloque de sentencias si el valor de la expresión no coincide con ninguno de los valores de los casos, siendo como la parte <em>else</em> de las sentencias <em>if</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-switch_hue79c7c08074a91052aa727bb0477f63b_30615_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia switch"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-switch_hue79c7c08074a91052aa727bb0477f63b_30615_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia switch" title="Diagrama sentencia switch"  class="lozad "></a></p>
<figcaption>Diagrama sentencia switch <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">switch</span> <span class="o">(</span><span class="n">variable</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="k">case</span> <span class="n">1</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span> <span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="k">case</span> <span class="n">2</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl">   <span class="k">case</span> <span class="n">3</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span> <span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="k">default</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalSwitch.java</span>
    </div>
</div>
<p>La sentencia <em>if</em> equivalente del <em>switch</em> anterior sería el siguiente. si es posible se prefiere usar la sentencia <em>switch</em> sobre la <em>if</em> equivalente, más si hay un varias ramas, ya que es mas sencilla, legible y no hace falta indicar en cada expresión de condición la expresión que devuelve el valor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">variable</span> <span class="o">==</span> <span class="n">1</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">variable</span> <span class="o">==</span> <span class="n">2</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">variable</span> <span class="o">==</span> <span class="n">3</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalSwitchIf.java</span>
    </div>
</div>
<p>Las sentencias <em>if</em> se pueden anidar unas dentro de otras esto dificulta la legibilidad del código, para evitar <a href="https://picodotdev.github.io/blog-bitix/2017/10/evitar-niveles-de-anidacion-de-sentencias-condicionales-con-guard-clauses/">múltiples anidaciones y crear varias ramas  se utilizan guard clauses</a> que simplifican el flujo del programa.</p>
<h3 id="sentencias-de-repetición-for-foreach-while-do-while-break-continue">Sentencias de repetición (for, foreach, while, do-while, break, continue)</h3>
<p>Las sentencias de repetición permiten ejecutar un bloque de sentencias durante un número determinado de veces o mientras se cumpla una condición. En cada iteración después de ejecutar el bloque de sentencias la condición se vuelve a evaluar si se sigue cumpliendo, si se cumple se realiza una nueva iteración si no se cumple se sale del bucle y se continua con la siguiente sentencia del programa. Esta evaluación de la condición y ejecución del bloque de sentencias se realiza hasta que la condición del bucle <em>while</em> no se cumpla. Hay varios tipos de bucles.</p>
<p>La sentencia <em>while</em> ejecuta un bloque de sentencias mientras se cumpla una condición, puede ocurrir el caso de que la condición de la sentencia <em>while</em> no se cumpla y por tanto el bloque de sentencias de repetición no se ejecute ninguna vez. La comprobación de la condición se realiza antes de entrar al bucle.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-while_huf093fb746d2329da27a844c76e69b7da_26135_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia while"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-while_huf093fb746d2329da27a844c76e69b7da_26135_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia while" title="Diagrama sentencia while"  class="lozad "></a></p>
<figcaption>Diagrama sentencia while <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">while</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">sentences</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RepeticionWhile.java</span>
    </div>
</div>
<p>En el bucle <em>do-while</em> la comprobación de la condición está después del bloque de sentencias de repetición, a diferencia del bucle <em>while</em> en el <em>do-while</em> el bloque de sentencias se ejecutan al menos una vez.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-do-while_hu629e120eb684631fa9ee57f6de9a81d1_24851_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia do-while"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-do-while_hu629e120eb684631fa9ee57f6de9a81d1_24851_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia do-while" title="Diagrama sentencia do-while"  class="lozad "></a></p>
<figcaption>Diagrama sentencia do-while <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">do</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">);</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RepeticionDoWhile.java</span>
    </div>
</div>
<p>La sentencia <em>for</em> utilizan otra sintaxis para realizar bucles, una de las <a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/">4 formas de hacer un bucle for</a> contiene una inicialización, condición de repetición e incremento además del bloque de sentencias a ejecutar. Otras formas de bucle <em>for</em> son el <em>forearch</em> para colecciones de objetos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-for_hud5f47070ff90265ccb71bfee4101b702_32192_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia for"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-for_hud5f47070ff90265ccb71bfee4101b702_32192_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia for" title="Diagrama sentencia for"  class="lozad "></a></p>
<figcaption>Diagrama sentencia for <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">for</span> <span class="o">(</span><span class="n">inicializacion</span><span class="o">;</span> <span class="n">condicionExpresionBoleana</span><span class="o">;</span> <span class="n">incremento</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Foreach&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Collection</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">collection</span> <span class="o">=</span> <span class="o">...;</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">object</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">object</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RepeticionFor.java</span>
    </div>
</div>
<p>Dentro de las sentencias de bucle se pueden emplear las palabras reservadas <em>break</em> y <em>continue</em>. La sentencia <em>break</em> permite salir del bucle inmediatamente sin necesidad de evaluar la condición. La palabra <em>continue</em> dejar de ejecutar sentencias del bucle y evaluar de nuevo la condición de bucle, si se sigue cumpliendo la condición se ejecuta de nuevo el bloque de sentencias. Las sentencias <em>break</em> y <em>continue</em> normalmente se utilizan dentro de una sentencia condicional <em>if</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-continue_hubff1e9b9e07bd4ea44d8fd04d9b9a57c_28193_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama sentencia continue"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-continue_hubff1e9b9e07bd4ea44d8fd04d9b9a57c_28193_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia continue" title="Diagrama sentencia continue"  class="lozad "></a></p>
<figcaption>Diagrama sentencia continue <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="c1">// Break&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Resultado&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">0</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">2</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">3</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">4</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Continue&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">continue</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Resultado&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">0</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">2</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">3</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">4</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">6</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">7</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">8</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">9</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BreakContinue.java</span>
    </div>
</div>
<p>Un bucle infinito es en un bucle que se itera contnuamente porque la condición de iteración se cumple siempre. Ejecutar continuamente un bloque de sentencias hace que el procesador consuma todos los recursos que se disponen de cómputo de procesador o una alta actividad de entrada y salida que degrada el rendimiento del sistema sin producir ningún resultado útil cuanto menos si no genera errores en el resto de programas del sistema. Suele ser por un error de programación y para resolverlo habitualmente hay que matar el proceso del programa y reiniciarlo, si no se corrige el error en el bucle en las mismas condiciones se producirá de nuevo el bucle infinito.</p>
<h3 id="setencias-de-control-de-expceciones-try-catch-throw">Setencias de control de expceciones (try-catch, throw)</h3>
<p>Las expresiones <em>try-catch</em> son <a href="https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-para-gestionar-errores-con-java/">el mecanismo de control de errores en Java</a>. Estas expresiones permiten tratar las excepciones lanzadas por la palabra reservada <em>throw</em> en los métodos invocados de su bloque de sentencias.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentencias</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">bloqueSentenciasTratamientoExcepcion</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>TryCatch.java</span>
    </div>
</div>
<p>Las excepciones se lanzan con la palabra reservada <em>throw</em>, toda excepción ha de heredar de <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Exception.html">Exception</a> y si no hereda de <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/RuntimeException.html">RuntimeExecption</a> ha de declararse en la firma del método para indicar que el método puede lanzar esa excepción en caso de no ser tratada dentro del mismo método con un <em>try-catch</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">exception</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">runtime</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Throw.java</span>
    </div>
</div>
<h3 id="invocación-de-métodos">Invocación de métodos</h3>
<p>Las funciones en los lenguajes orientados a objetos dentro de las clases, las clases encapsulan las variables y las funciones o métodos. Los métodos tiene acceso además de a los parámetros que recibe a las variables del objeto en las están contenido y otros métodos de la misma clase u otros objetos respetando los <a href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/">ámbitos de visibilidad de las palabras reservadas <em>public</em>, <em>protected</em>, <em>private</em> y <em>default</em></a>.</p>
<p>Las expresiones de invocación a métodos se componen del objeto que recibe la llamada a uno de sus métodos separado por un punto y nombre del método. Si el método llamado devuelve un objeto se puede encadenar otra nueva llamada a un método del objeto devuelto. El valor o referencia a objeto devuelto se puede asignar a una variable también.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="s">&#34;Hola Mundo!&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Resultado&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Hola</span> <span class="n">Mundo</span><span class="o">!</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">string</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">// Resultado&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">HOLA</span> <span class="n">MUNDO</span><span class="o">!</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Invocacion.java</span>
    </div>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/</id>
        <title>Generar en el dominio los identificativos de las entidades aplicando DDD antes de persistirlas en la base de datos</title>
        <updated>2020-06-19T17:00:00+02:00</updated>
        <published>2020-06-19T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las bases de datos tiene la capacidad de generar identificativos para los datos que se insertan. En el caso de las bases de datos relacionales con secuencias que generan en el momento de inserción la clave primaria de la fila en una tabla, normalmente es un número y utilizando Java con JPA con las anotaciones <em>Id</em>, <em>GeneratedValue</em> y <em>SequenceGenerator</em> en la clase Java que representa a la entidad. Para Domain Driven Design delegar en el momento de inserción la generación del identificativo de la entidad es un problema ya que hace que la entidad sea inválida al no tener identidad hasta persistirla y la base de datos es un elemento externo que debe ser independizado del dominio de la aplicación. En este artículo comento una implementación siguiendo los principios de DDD para dar solución a estos dos problemas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Tradicionalmente la tarea de generar los identificativos de las entidades de dominio se delega en la base de datos en el momento de persistir la entidad. La base de datos en la columna de la tabla de la entidad para el identificativo generalmente es de tipo numérico y la base de datos le asigna un valor incremental para cada fila o entidad guardada.</p>
<p>Este modelo de delegar en la base de datos el generar la identificativos de las entidades tiene dos problemas en la teoría de <a href="https://en.wikipedia.org/wiki/Domain-driven_design">Domain Driven Design</a> o <em>DDD</em>:</p>
<ul>
<li>La aplicación requiere y es dependiente de un sistema externo para asignar la identidad de una entidad del dominio creada en la aplicación.</li>
<li>La entidad no tiene identidad inicialmente, lo que significa que la entidad es creada con un estado inválido por ser incompleto.</li>
</ul>
<p>Que la entidad no tenga identidad asignado y esté incompleta en el momento de creación tiene inconvenientes ya que al <a href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/">implementar los métodos <em>equals</em> y <em>hashCode</em> en Java</a> para una entidad estos se basa en el identificativo de la entidad para determinar si dos instancias de un objeto es la misma, si la entidad no tiene identidad el método <em>equals</em> es ineficaz. Al mismo tiempo el método <em>hashCode</em>, y también el método <em>equals</em>, es utilizado por la API de colecciones de Java en su mayoría con lo que la entidad no es posible guardarla en colecciones que dependan de estos métodos para su correcto funcionamiento. Para usar los métodos <em>equals</em> y <em>hashCode</em> de las entidades es necesario esperar a guardar la entidad en la base de datos para que se le asigne el identificativo.</p>
<p>También en DDD se suelen utilizar eventos como mecanismo de comunicar que en el sistema se ha sucedido algo, si la entidad no tiene identificativo no es posible comunicar que ha ocurrido algo, al menos no incluyendo el identificativo.</p>
<h3 id="identificativos-universales-como-identificadores">Identificativos universales como identificadores</h3>
<p>Una posibilidad es generar identificativos universales para los identificativos de las entidades, sin embargo, la clase <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/UUID.html">UUID</a> depende de elementos externos al dominio como el tiempo del sistema. Al mismo tiempo la entidad no es consciente de la existencia de otras entidades y no le es posible determinar la unicidad del identificativo.</p>
<p>En DDD todo elemento que dependa de algo externo ha de se independizado del dominio. De modo que el UUID aplicando DDD no se genera en la entidad sino en la capa de servicio mediante un elemento externo que en la terminología de DDD es un adaptador, el identificativo se le proporciona a la entidad en el momento de creación en el constructor como parámetro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">95ba87c1</span><span class="o">-</span><span class="n">f0ac</span><span class="o">-</span><span class="n">4c55</span><span class="o">-</span><span class="n">9efa</span><span class="o">-</span><span class="n">257dbe291a7d</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UuidGenerator.java</span>
    </div>
</div>
<h3 id="delegar-la-generación-de-identificativos-en-el-repositorio">Delegar la generación de identificativos en el repositorio</h3>
<p>Dado que en DDD se utiliza un repositorio para persistir las entidades en una base de datos externa a la lógica de dominio, la tarea de generar los identificadores que depende de un elemento externo es posible ubicarla en la misma clase repositorio, de esta manera la lógica queda con cohesión ya que todo lo relativo a la entidad está ubicada en su repositorio.</p>
<p>Al mismo tiempo delegar la tarea de crear el identificativo en el repositorio permite variar la implementación, una opción es delegar en la base de datos la obtención del identificativo o utilizar el método de identificativo universal anterior. En el caso de delegar en la base de datos la generación del identificativo, es la base de datos la que lo genera igual que en el caso de la autogeneración pero ahora no de manera implícita sino de forma explícita.</p>
<h3 id="ejemplo-utilizando-jpa-y-spring-data">Ejemplo utilizando JPA y Spring Data</h3>
<p>Utilizando <a href="https://spring.io/projects/spring-data">Spring Data</a> con JPA para añadir métodos personalizados en la clase del repositorio hay que crear una interfaz que los incluya y construir una implementación de esa interfaz. La misma interfaz es implementada por la interfaz de Spring Data, y Spring haciendo su magia y por composición crea un repositorio que tiene tanto los métodos implementados por Spring como la implementación de los métodos personalizados, en este caso el de generar el identificativo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.JpaSpecificationExecutor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Modifying</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Query</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.repository.PagingAndSortingRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ProductRepository</span> <span class="kd">extends</span> <span class="n">PagingAndSortingRepository</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">,</span> <span class="n">ProductId</span><span class="o">&gt;,</span> <span class="n">JpaSpecificationExecutor</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">CustomProductRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Modifying</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Query</span><span class="o">(</span><span class="s">&#34;delete from Product&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">deleteAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">CustomProductRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductId</span> <span class="nf">generateId</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CustomProductRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.EntityManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomProductRepositoryImpl</span> <span class="kd">implements</span> <span class="n">CustomProductRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">EntityManager</span> <span class="n">entityManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ProductId</span> <span class="nf">generateId</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigInteger</span> <span class="n">id</span> <span class="o">=</span> <span class="o">(</span><span class="n">BigInteger</span><span class="o">)</span> <span class="n">entityManager</span><span class="o">.</span><span class="na">createNativeQuery</span><span class="o">(</span><span class="s">&#34;select nextval(&#39;product_id_seq&#39;)&#34;</span><span class="o">).</span><span class="na">getSingleResult</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">ProductId</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CustomProductRepositoryImpl.java</span>
    </div>
</div>
<p>En la clase de la entidad no se usa la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/GeneratedValue.html">GeneratedValue</a>. En vez de esa anotación en este ejemplo se utiliza la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/Embeddable.html">EmbeddedId</a> y la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/Embeddable.html">Embeddable</a>, aplicando otro de los principios de DDD que es <a href="https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/">utilizar un tipo especifico que representa el identificativo de la entidad</a> en vez de un tipo proporcionado por el lenguaje como un <em>Long</em> o <em>BigInteger</em>. Un tipo específico para la identidad tiene varias ventajas como aprovechar los beneficios del compilador para detectar errores y de los IDE con asistencia de código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.LocalDate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Objects</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.EmbeddedId</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Table</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Entity</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Product&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@EmbeddedId</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductId</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">(</span><span class="n">ProductId</span> <span class="n">id</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">units</span> <span class="o">=</span> <span class="n">units</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Product</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">Product</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Objects</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Embeddable</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Embeddable</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductId</span> <span class="kd">implements</span> <span class="n">Serializable</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigInteger</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="nf">ProductId</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="nf">ProductId</span><span class="o">(</span><span class="n">BigInteger</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">ProductId</span> <span class="nf">valueOf</span><span class="o">(</span><span class="n">BigInteger</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">ProductId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">ProductId</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductId</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">ProductId</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductId.java</span>
    </div>
</div>
<p>De esta forma ahora las entidades creadas son completamente válidas desde el momento de generación en el dominio ya que tienen su identificador. Dado que la entidad tiene su propio identificativo desde el inicio de su existencia es posible guardar la entidad en colecciones y lanzar eventos de dominio que incluyan su identificador sin tener que esperar que la base de datos le autogenere uno.</p>
<p>En este caso de prueba se observa que la entidad <em>Product</em> creada se crea en el constructor con su identificativo asignado sin esperar a que la base de datos lo genere, la base de datos y JPA simplemente persisten el valor que tiene asignado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootTest</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">DefaultPostgresContainer</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductRepositoryTest</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">productRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testRepositoryGenerateId</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductId</span> <span class="n">id</span> <span class="o">=</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">generateId</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">productRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">product</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">id</span><span class="o">).</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductRepositoryTest.java</span>
    </div>
</div>
<p>En las trazas se observa la SQL para obtener el valor de la secuencia y la SQL de <em>insert</em> para guardar la entidad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Hibernate: select nextval(&#39;product_id_seq&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_0_, product0_.date as date2_0_0_, product0_.name as name3_0_0_, product0_.price as price4_0_0_, product0_.units as units5_0_0_ from product product0_ where product0_.id=?&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into product (date, name, price, units, id) values (?, ?, ?, ?, ?)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>De <em>Domain Driven Design</em> hay varios libros, el libro de referencia sobre la teoría de DDD son <a href="https://amzn.to/33JmDkv">Domain-Driven Design: Tackling Complexity in the Heart of Software</a>, <a href="https://amzn.to/34HkDbA">Domain-Driven Design Distilled</a>, otros más prácticos son <a href="https://amzn.to/34yeDSk">Implementing Domain-Driven Design</a> y <a href="https://amzn.to/2SJe2HW">Domain-Driven Design in PHP: A Highly Practical Guide</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321125215&amp;linkId=5df04454342df14dfcc78687544c9d67" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0134434420&amp;linkId=fc00596717d15f5b160a896fa5ce565a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1118714709&amp;linkId=1103b1d87d34d4da91354c2b3d680aba" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321834577&amp;linkId=00c494ddc45b9304145ac8e2733eb072" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1787284948&amp;linkId=82d6a16b683b54c2ab34c1e51f63acfb" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/EntitiesId">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew test</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://matthiasnoback.nl/2018/05/when-and-where-to-determine-the-id-of-an-entity/">When and where to determine the ID of an entity</a></li>
<li><a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.single-repository-behavior">Spring Data - Customizing Individual Repositories</a></li>
<li><a href="https://www.objectdb.com/java/jpa/entity/id">JPA Primary Key</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/</id>
        <title>Comando para convertir una imagen SVG a PNG y JPG con diferentes tamaños y color de fondo con Inkskape</title>
        <updated>2020-06-14T10:45:00+02:00</updated>
        <published>2020-06-14T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El formato de imagen SVG tiene la ventaja de permitir el escalado de la imagen sin pérdida de calidad y suele tener menor tamaño que la imagen equivalente en formato PNG y JPG. Si es necesario la imagen SVG es exportable a formato de imagen PNG y JPG con el tamaño deseado o color de fondo. El editor de imágenes Inkscape permite con su utilidad de línea de comandos automatizar y exportar archivos SVG a PNG y JPG y ocultar y mostrar las capas deseadas del archivo original para obtener el resultado deseado en la exportación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/inkscape.svg" width="200" height="200" alt="Inkscape" title="Inkscape"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<p>El formato de imagen SVG es un formato de imagen vectorial donde las líneas, formas, posición y colores se describen en formato texto, tiene la ventaja de ser un formato escalable que no pierde resolución independiente del tamaño de imagen en la que se represente, es decir, la imagen tiene la misma calidad al tamaño <em>full hd</em> 1920x1080 que a 4K 3840x2560 que en 800x600 píxeles.</p>
<p>Con las imágenes de fotos en formato JPG y sin pérdida de calidad PNG la resolución adecuada para mostrar estas imágenes es la original del archivo a otra resolución hay que hacer un escalado con un algoritmo para añadir o quitar píxeles, el escalado es una operación imprecisa que resta algo de calidad a la imagen. <a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/">Escalar el tamaño de una imagen JPG o PNG</a> es necesario para obtener la imagen en otros tamaños, dependiendo del número de píxeles a añadir si se hace más grande que la original o píxeles a quitar si se reduce el tamaño la pérdida de calidad se nota más o menos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen en formato JPG original"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_300x200_fit_q90_box.jpg" width="300" height="200" alt="Imagen en formato JPG original" title="Imagen en formato JPG original"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607-thumb-300x200_hue65376be7c7ffd5e9c6116f7adcd1047_48389_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen en formato JPG escalada a 300x200 píxeles"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607-thumb-300x200_hue65376be7c7ffd5e9c6116f7adcd1047_48389_300x200_fit_q90_box.jpg" width="300" height="200" alt="Imagen en formato JPG escalada a 300x200 píxeles" title="Imagen en formato JPG escalada a 300x200 píxeles"  class="lozad "></a></p>
<figcaption>Imagen en formato JPG original y escalada a 300x200 píxeles</figcaption>
</figure>
</div>
<p>Los navegadores y dispositivos móviles ya soportan como formato de imagen el SVG, en la web y los dispositivos móviles es especialmente adecuado este formato ya que además de adaptarse a la variedad de tamaños de los dispositivos de escritorio o móviles suelen tener un menor tamaño de archivo lo que hace que se descarguen más rápido al requerir menos ancho de banda.</p>
<p>Aún con los beneficios que posee el formato SVG algunas aplicaciones no soportan el formato SVG y en este caso es necesario hacer una conversión de SVG a los formatos binarios <em>rasterizados</em> PNG o JPG. El formato SVG permite obtener estas imágenes PNG y JPG en diferentes tamaños sin pérdida de calidad.</p>
<p><a href="https://inkscape.org/es/">Inkscape</a> es un editor de imágenes vectoriales con una utilidad de línea de comandos que permite convertir y exportar imágenes en formato SVG a PNG y JPG en el tamaño y con el color de fondo deseado. El siguiente comando convierte todos los archivos SVG a PNG de una carpeta. En el comando se indican varios parámetros como la anchura deseada de la imagen, el color de fondo, los identificativos de las capas a exportar, el formato de salida y el nombre del archivo creado. Posteriormente con un segundo comando hay que <a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/">convertir las imágenes de formato PNG a JPG</a>, dependiendo del tipo de imagen, los colores y degradados de la imagen el tamaño en formato PNG será mayor o menor que en formato JPG.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="k">for</span> f in *.svg<span class="p">;</span> <span class="k">do</span> inkscape -w <span class="m">750</span> <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> --export-background white --export-background-opacity <span class="m">1</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="k">$(</span>basename <span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="k">)</span><span class="s2">-750.png&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="k">for</span> f in *.png<span class="p">;</span> <span class="k">do</span> convert <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="s2">.jpg&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>inkscape-convert-svg-png.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry.svg" data-gallery="" title="Imagen original en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry.svg" width="300" height="200" alt="Imagen original en formato SVG" title="Imagen original en formato SVG"  class="lozad "></a></p>
<figcaption>Imagen original en formato SVG</figcaption>
</figure>
</div>
<p>El editor Inkscape permite definir capas con diferentes elementos de la imagen, la linea de comandos permite exportar únicamente capas deseadas de la imagen para obtener el resultado deseado en la exportación. El SVG anterior contiene en el mismo archivo diferentes capas con diferentes versiones de la imagen adecuadas para un fondo claro y oscuro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">BASENAME</span><span class="o">=</span><span class="s2">&#34;apache-tapestry&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">ARTWORK_FILE</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-artwork.svg&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id lightObject --export-background white -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-800-light.png&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id darkObject --export-background black -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-800-dark.png&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id lightIconObject --export-background white -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-800-light.png&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id darkIconObject --export-background black -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-800-dark.png&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id lightTextObject --export-background white -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-800-light.png&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id darkTextObject --export-background black -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-800-dark.png&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>inkscape-png-versions.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-light_hu7e5404fb1aa31fe342672ad8214b2b9f_60725_2560x1440_fit_box_3.png" data-gallery="" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-light_hu7e5404fb1aa31fe342672ad8214b2b9f_60725_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-dark_hub5b4d74b8d14e46515940c00029d3bc7_61131_2560x1440_fit_box_3.png" data-gallery="" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-dark_hub5b4d74b8d14e46515940c00029d3bc7_61131_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-light_hu63592ed543dc04b632a0db3b544af56d_82881_2560x1440_fit_box_3.png" data-gallery="" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-light_hu63592ed543dc04b632a0db3b544af56d_82881_300x200_fit_box_3.png" width="200" height="200" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-dark_hu5561b3fa2c992556c74875e00a747250_83588_2560x1440_fit_box_3.png" data-gallery="" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-dark_hu5561b3fa2c992556c74875e00a747250_83588_300x200_fit_box_3.png" width="200" height="200" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-light_hu71918ce05912a609bbe5cfa98bdae2be_39579_2560x1440_fit_box_3.png" data-gallery="" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-light_hu71918ce05912a609bbe5cfa98bdae2be_39579_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-dark_hud4e768763c312754ca970d2d59adcda4_39231_2560x1440_fit_box_3.png" data-gallery="" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-dark_hud4e768763c312754ca970d2d59adcda4_39231_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a></p>
<figcaption>Diferentes versiones de la imagen SVG en formato PNG</figcaption>
</figure>
</div>
<p>También es posible modificar el SVG original para mostrar y ocultar las capas visibles del archivo. Los siguientes comandos permiten exportar a PNG la imagen en diferentes versiones (icono y texto, solo icono o solo texto), con diferente color de fondo (transparente, blanco y negro) y en diferente tamaño. Esto permite automatizar y hacerlo mucho más rápido que el repetitivo proceso que sería realizar manualmente la exportación usando la interfaz gráfica de Inkscape.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">BASENAME</span><span class="o">=</span><span class="s2">&#34;apache-tapestry&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">ARTWORK_FILE</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-artwork.svg&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-light.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-light.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-dark.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-dark.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-light.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-light.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb EditDeselect --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-dark.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-dark.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-light.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-light.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-dark.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-dark.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>inkscape-svg-versions.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-light.svg" data-gallery="" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-light.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="white-background lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-dark.svg" data-gallery="" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-dark.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="black-background lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-light.svg" data-gallery="" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-light.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="white-background lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-dark.svg" data-gallery="" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-dark.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="black-background lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-light.svg" data-gallery="" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-light.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="white-background lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-dark.svg" data-gallery="" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-dark.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="black-background lozad "></a></p>
<figcaption>Diferentes versiones de la misma imagen SVG</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/el-patron-de-diseno-specification-ejemplo-de-implementacion-y-uso-en-jpa-con-spring-data/</id>
        <title>El patrón de diseño Specification, ejemplo de implementación y uso en JPA con Spring Data</title>
        <updated>2020-06-12T16:00:00+02:00</updated>
        <published>2020-06-12T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/el-patron-de-diseno-specification-ejemplo-de-implementacion-y-uso-en-jpa-con-spring-data/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los métodos de búsqueda y consulta permiten recuperar objetos de las bases de datos según los criterios deseados. Dependiendo del tamaño de la aplicación y sus casos de uso el número de consultas será más o menos grande. Con un número de consultas grande estas se vuelven complejas de mantener y generan duplicación de lógica de negocio. Para simplificar el mantenimiento de un número grande de consultas y evitar duplicidad de lógica de negocio una solución es implementar el patrón de diseño <em>Specification</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>Dado un objeto suele ser necesario comprobar si cumple una o más condiciones. Estas condiciones pueden implementarse tanto en un método del objeto como en la lógica de persistencia en la base de datos.</p>
<p>Esta aproximación tiene dos inconvenientes, el número de métodos de consulta crece significativamente en las aplicaciones grandes y las consultas son conjunto fijo sin posibilidad de extensión salvo añadir nuevos métodos, las consultas no son fáciles de externalizar y reutilizar.</p>
<p>En estos casos implementar el patrón de diseño <em>Specification</em> ayuda a hacer el código más mantenible, extensible, simple y de más fácil lectura.</p>
<p>Los siguientes ejemplos implementan el patrón <em>Specification</em> para comprobar si un objeto cumple una serie de condiciones de negocio y como Spring Data hace uso del patrón para construir las condiciones de las consultas de JPA. Los ejemplos incluyen teses que usan <a href="https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/">la herramienta TestConainers para hacer pruebas de integración en Java</a> con la base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> en un contenedor <a href="https://www.docker.com/">Docker</a>.</p>
<h3 id="el-problema-en-las-consultas">El problema en las consultas</h3>
<p>Suponiendo que se tiene la siguiente entidad del dominio con una serie de campos la idea primera y más directa para implementar si un producto cumple una serie de condiciones es añadir métodos en las clases, un método por cada condición. Por ejemplo, para buscar los productos que que son baratos, tienen un tiempo largo de existencia o un <em>sobrestock</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Entity</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Product&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="kd">implements</span> <span class="n">Specificable</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GeneratedValue</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Long</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">units</span> <span class="o">=</span> <span class="n">units</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCheap</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">...;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isLongTerm</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">...;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isOverstock</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">...;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product-1.java</span>
    </div>
</div>
<p>Esta aproximación sencilla de implementar y suficiente en aplicaciones pequeñas tiene dos inconvenientes. El número de métodos a escribir crece significativamente para aplicaciones grandes o complejas y los criterios de los métodos de consulta son fijos, no son extensibles. Para solventar estos dos problemas se opta por crear métodos con los criterios individuales y se combinan entre ellos dinámicamente para obtener la consulta deseada.</p>
<p>Aquí es donde el patrón  de diseño <em>Specification</em> es de utilidad. Este patrón también es aplicable a las consultas presentes en las clases repositorio de acceso a la base de datos donde seguramente es más probable repetir la misma lógica de condiciones en varias consultas <em>hardcodeado</em> en las SQLs. Con los mismos problemas, condiciones repetidas en varios métodos y proliferación de métodos de consulta. Esta es la razón de que <a href="https://spring.io/projects/spring-data">Spring Data</a> implemente el patrón <em>Specification</em>.</p>
<h3 id="qué-es-y-ventajas-del-patrón-de-diseño-specification">Qué es y ventajas del patrón de diseño Specification</h3>
<p>El patrón de diseño <em>Specification</em> permite encapsular una pieza del conocimiento del dominio y rehusarla en diferentes partes de la aplicación. Utilizándolo se mueven estas reglas de negocio a clases llamadas <em>specifications</em>.</p>
<p>El patrón de diseño <em>Specification</em> parte de una interfaz con un método a implementar para encapsular la lógica de negocio que comprueba si la condición se cumple.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">and</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">AndSpecification</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">or</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">not</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">NotSpecification</span><span class="o">(</span><span class="n">specification</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Specification.java</span>
    </div>
</div>
<p>Por cada condición hay una implementación de la interfaz.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsCheapSpecification</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">priceAttributeName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsCheapSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsCheapSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">priceAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="s">&#34;price&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">Product</span><span class="o">.</span><span class="na">CHEAP_PRICE</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">getPrice</span><span class="o">())</span> <span class="o">==</span> <span class="n">1</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">lt</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">priceAttributeName</span><span class="o">),</span> <span class="n">Product</span><span class="o">.</span><span class="na">CHEAP_PRICE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsCheapSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.LocalDate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.Period</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsLongTermSpecification</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">dateAttributeName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsLongTermSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">dateAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="s">&#34;date&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="o">!</span><span class="n">Period</span><span class="o">.</span><span class="na">between</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">getDate</span><span class="o">(),</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">()).</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">).</span><span class="na">isNegative</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LocalDate</span> <span class="n">longTermDate</span> <span class="o">=</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">lessThan</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">dateAttributeName</span><span class="o">),</span> <span class="n">longTermDate</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsLongTermSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsOverstockSpecification</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">priceAttributeName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsOverstockSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsOverstockSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">priceAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="s">&#34;units&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">product</span><span class="o">.</span><span class="na">getUnits</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">Product</span><span class="o">.</span><span class="na">OVERSTOCK_UNITS</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">gt</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">priceAttributeName</span><span class="o">),</span> <span class="n">Product</span><span class="o">.</span><span class="na">OVERSTOCK_UNITS</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsOverstockSpecification.java</span>
    </div>
</div>
<p>En el objeto <em>Product</em> se implementa el patrón <em>Visitor</em> con la interfaz <em>Specificable</em> donde cada implementación de la clase <em>Specification</em> trata la lógica y la clase <em>Product</em> solo tiene el método <em>satisfies</em> que invoca a la instancia de <em>specification</em> recibida como parámetro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Specificable</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">boolean</span> <span class="nf">satisfies</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">object</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Specificable.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specificable</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Entity</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Product&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="kd">implements</span> <span class="n">Specificable</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">satisfies</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">specification</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product.java</span>
    </div>
</div>
<p>Para realizar combinaciones con operaciones lógicas <em>and</em>, <em>or</em> o <em>not</em> se utiliza el patrón <em>Composite</em>. De entre las operaciones básicas solo se muestra la operación <em>equals</em>, sería necesario implementar otro tipo de operaciones como <em>lessThan</em>, <em>greaterThan</em>, <em>contains</em> u otras si es necesario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.beans.PropertyDescriptor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">EqualsSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">property</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Object</span> <span class="n">value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">propertyAttributeName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">EqualsSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">property</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="n">property</span><span class="o">,</span> <span class="n">value</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">EqualsSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">property</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">property</span> <span class="o">=</span> <span class="n">property</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">propertyAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="n">property</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PropertyDescriptor</span> <span class="n">descriptor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PropertyDescriptor</span><span class="o">(</span><span class="n">property</span><span class="o">,</span> <span class="n">Product</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span> <span class="n">v</span> <span class="o">=</span> <span class="n">descriptor</span><span class="o">.</span><span class="na">getReadMethod</span><span class="o">().</span><span class="na">invoke</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">v</span> <span class="o">==</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">v</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">value</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">v</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">value</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">v</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">equal</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">propertyAttributeName</span><span class="o">),</span> <span class="n">value</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EqualsSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AndSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;&gt;</span> <span class="n">specifications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AndSpecification</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">specifications</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">specifications</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">allMatch</span><span class="o">(</span><span class="n">s</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="n">object</span><span class="o">);</span> <span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AndSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OrSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;&gt;</span> <span class="n">specifications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">OrSpecification</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">specifications</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">specifications</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">anyMatch</span><span class="o">(</span><span class="n">s</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="n">object</span><span class="o">);</span> <span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>OrSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NotSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">NotSpecification</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">specification</span> <span class="o">=</span> <span class="n">specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">!</span><span class="n">specification</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="n">object</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>NotSpecification.java</span>
    </div>
</div>
<p>Al implementar el patrón <em>Specification</em> se hace uso de varios patrones:</p>
<ul>
<li>El patrón de diseño <em>Visitor</em>, en el método <em>satisfies</em> de la clase <em>Product</em> realmente se llama al método <em>isSatisfied</em> de la interfaz <em>Specification</em>.</li>
<li>El patrón de diseño <em>Composite</em> en las operaciones lógicas <em>and</em>, <em>or</em> y <em>not</em>. Estas condiciones lógicas de agrupación se componente de otras independientemente de contengan una o varias.</li>
<li>El patrón de diseño <em>Comamnd</em>, se construye la instancia de <em>Specification</em> a ejecutar y el método <em>satisfies</em> lo ejecuta.</li>
<li>El <a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-del-patron-de-diseno-builder/">patrón de diseño <em>Builder</em></a> se utiliza para facilitar la construcción de las condiciones con una API fluida y ocultar las clases concretas que implementan la interfaz <em>Specification</em>. Spring Data lo implementa.</li>
</ul>
<p>La siguiente prueba unitaria muestra con código el uso del patrón <em>Specification</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.LocalDate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.AndSpecification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.NotSpecification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.OrSpecification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import static</span> <span class="nn">org.junit.jupiter.api.Assertions.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.util.TestPropertyValues</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContextInitializer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.ConfigurableApplicationContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootTest</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">ProductSpecificationTest</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductSpecificationTest</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testEqualsSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsCheapSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Pin&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsCheapSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">).</span><span class="na">minusDays</span><span class="o">(</span><span class="n">1</span><span class="o">),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsLongTermSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsOverstockSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Pin&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;5.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsOverstockSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsCheapAndIsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Pin&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">).</span><span class="na">minusDays</span><span class="o">(</span><span class="n">1</span><span class="o">),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">cheapSpecification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsCheapSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">longTermSpecification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsLongTermSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AndSpecification</span><span class="o">&lt;&gt;(</span><span class="n">cheapSpecification</span><span class="o">,</span> <span class="n">longTermSpecification</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testAndSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span><span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AndSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">10</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testOrSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationC</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">50</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationZ</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationA</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationB</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationC</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertFalse</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationZ</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testNotSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NotSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">AndSpecification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">10</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertFalse</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Initializer</span> <span class="kd">implements</span> <span class="n">ApplicationContextInitializer</span><span class="o">&lt;</span><span class="n">ConfigurableApplicationContext</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">initialize</span><span class="o">(</span><span class="n">ConfigurableApplicationContext</span> <span class="n">configurableApplicationContext</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TestPropertyValues</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">applyTo</span><span class="o">(</span><span class="n">configurableApplicationContext</span><span class="o">.</span><span class="na">getEnvironment</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductSpecificationTest.java</span>
    </div>
</div>
<h3 id="implementación-para-jpa-con-spring-data">Implementación para JPA con Spring Data</h3>
<p>El proyecto Spring Data para el acceso a bases de datos con JPA implementa el patrón de diseño <em>Specification</em>, la interfaz <a href="https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/repository/JpaSpecificationExecutor.html">JpaSpecificationExecutor</a> añade a los repositorios métodos de búsqueda que reciben un argumento de tipo <a href="https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/domain/Specification.html">Specification</a>.</p>
<p>Esta clase <em>Specification</em> transforma las condiciones en un objeto <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/criteria/Predicate.html">Predicate</a> que es el que JPA usa para las condiciones de la consulta SQL que se genera. La interfaz <em>JpaSpecificationExecutor</em> también añade métodos para hacer búsquedas paginadas y con ordenación.</p>
<p>Si en el proyecto se utiliza Spring y JPA esta es la opción recomendada, si no se utiliza Spring o se utiliza otra librería de persistencia distinta a JPA se puede realizar una implementación siguiendo los principios del patrón <em>Specification</em>.</p>
<p>Las clases <em>EqualsSpecification</em>, <em>IsCheapSpecification</em>, <em>IsLongTermSpecification</em>, y <em>IsOverstockSpecification</em> anteriores también implementan la interfaz <em>Specification</em> de Spring Data. Estas clases implementan dos interfaces distintas para diferentes cosas, para hacer comprobaciones sobre un objeto en memoria y para generar clases <em>Predicate</em> con las condiciones equivalentes de JPA, son símplemente ejemplos y para separar conceptos no estaría mal dividir cada clase en dos para que implementen las interfaces de forma individual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.JpaSpecificationExecutor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Modifying</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Query</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.repository.PagingAndSortingRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ProductRepository</span> <span class="kd">extends</span> <span class="n">PagingAndSortingRepository</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;,</span> <span class="n">JpaSpecificationExecutor</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Modifying</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Query</span><span class="o">(</span><span class="s">&#34;delete from Product&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">deleteAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductRepository.java</span>
    </div>
</div>
<p>La siguiente prueba de integración con <a href="https://www.testcontainers.org/">Testcontainers</a>, PostgresSQL y Docker prueba el repositorio con las implementaciones de las clases del patrón <em>Specification</em> para JPA de Spring Data.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span><span class="lnt">93&#10;</span><span class="lnt">94&#10;</span><span class="lnt">95&#10;</span><span class="lnt">96&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.DefaultPostgresContainer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.ProductRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">liquibase.pro.packaged.T</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.domain.Specification</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.test.context.jdbc.Sql</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import static</span> <span class="nn">org.junit.jupiter.api.Assertions.assertEquals</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootTest</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">DefaultPostgresContainer</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductJpaSpecificationTest</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">productRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsCheapSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsCheapSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsLongTermSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsOverstockSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsOverstockSpecification</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testAndSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">))).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">10</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testOrSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationC</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">50</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationZ</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationA</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationB</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationC</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationZ</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testNotSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="n">Specification</span><span class="o">.</span><span class="na">not</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">))).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">50</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">7</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">equalsSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">property</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">(</span><span class="n">root</span><span class="o">,</span> <span class="n">query</span><span class="o">,</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">equal</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">),</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductJpaSpecificationTest.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">delete</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">Product</span><span class="p">;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Pin&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">to_date</span><span class="p">(</span><span class="s1">&#39;2010/01/01&#39;</span><span class="p">,</span><span class="s1">&#39;YYYY/MM/DD&#39;</span><span class="p">),</span><span class="w"> </span><span class="mi">1</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Raspberry Pi&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">80</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Intel NUC&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">400</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;PlayStation 4&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">350</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;BenQ&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">330</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Amazon Kindle&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">130</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Fleck Duo 7 50&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">330</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>products.sql</span>
    </div>
</div>
<p>En la salida de los teses se muestran la traducción de los objetos <em>specification</em> a las condiciones de las consultas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=10 and product0_.price=80.0 and product0_.name=?&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.price&lt;5.00&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.date&lt;?&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=0 or product0_.price=0.0 or product0_.name=?&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=0 or product0_.price=80.0 or product0_.name=?&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=50 or product0_.price=0.0 or product0_.name=?&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=0 or product0_.price=0.0 or product0_.name=?&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units&gt;25&#10;</span></span><span class="line"><span class="cl">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units&lt;&gt;50 or product0_.price&lt;&gt;80.0 or product0_.name&lt;&gt;?</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Otra de las funcionalidades proporcionadas por Spring Data es hacer <a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#query-by-example">consultas basadas en un objeto ejemplo</a> o <em>query by example</em>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PatronSpecification">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradew test</code></p>
</div>
<p>Referencia:</p>
<ul>
<li><a href="https://www.mscharhag.com/java/specification-pattern-in-java-jpa">Java: Using the specification pattern with JPA</a></li>
<li><a href="https://dzone.com/articles/specification-pattern-quickly">How to Use the Specification Pattern in Java</a></li>
<li><a href="https://spring.io/blog/2011/04/26/advanced-spring-data-jpa-specifications-and-querydsl/">Advanced Spring Data JPA - Specifications and Querydsl</a></li>
<li><a href="https://dzone.com/articles/using-spring-data-jpa-specification">Using Spring Data JPA Specification</a></li>
<li><a href="https://www.baeldung.com/rest-api-search-language-spring-data-specifications">REST Query Language with Spring Data JPA Specifications</a></li>
<li><a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#specifications">Spring Data JPA - Reference Documentation, Specification</a></li>
</ul>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/</id>
        <title>Pruebas de integración con Testcontainers, ejemplo de JPA con la base de datos PostgreSQL</title>
        <updated>2020-06-07T10:00:00+02:00</updated>
        <published>2020-06-07T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Algunas partes del código no es posibles probarlas con teses unitarios ya que tienen dependencias como una base de datos. En estos casos es necesario realizar un test de integración, la dificultad reside en tener esta dependencia en el entorno de pruebas. La herramienta Testcontainers permite iniciar un contenedor Docker con la dependencia cuando el test se ejecuta.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/testcontainers.svg" width="200" height="200" alt="Testcontainers" title="Testcontainers"  class=""></p>
</div>
<p>Las pruebas automatizadas permiten validar que el comportamiento del software es el esperado. Permiten verificar que ante cambios no se introducen errores, generan mayor confianza en que el software funciona como se espera y evitan la necesidad de realizar pruebas manuales lentas y repetitivas.</p>
<p>Las pruebas más numerosas son las unitarias que prueban un componente del software de forma aislada de sus dependencias sin invocar operaciones de red. Las dependencias del componente bajo la prueba no son las reales, las dependencias simulan el comportamiento de los componentes a los que sustituyen por <em>stubs</em> o <em>mocks</em> para analizar cómo se comporta el sujeto bajo la prueba o SUT. En el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/07/que-es-un-sut-fake-stub-mock-y-spy-en-las-pruebas-con-un-ejemplo/">qué es un SUT, fake, stub, mock y spy</a> describo este tipo de objetos que sustituyen a las dependencias reales.</p>
<p>El objetivo de sustituir una dependencia real por un doble es programar el comportamiento del doble, ejecutar la prueba de forma aislada y de forma rápida. Una dependencia real es una base de datos como <a href="https://www.postgresql.org/">PostgreSQL</a>, NoSQL como <a href="https://www.mongodb.com/">MongoDB</a> o un servicio que requiere comunicación por red como <a href="https://graphql.org/">GraphQL</a>, al sustituir las dependencias no son necesarias en el entorno de la prueba lo que lo hace más sencillo.</p>
<p>Sin embargo, el código a ejecutar en la aplicación finalmente hace uso de las dependencias reales, y estas no se prueban en las pruebas unitarias, lo que significa los mismos problemas de errores y pruebas manuales de un código que no tiene pruebas automatizadas o pruebas que se basan en dobles que sustituyen a los reales y en algunos casos quizá se comporten de forma diferente. Las pruebas de integración permiten probar el funcionamiento de dos componentes relacionados.</p>
<p><a href="https://www.testcontainers.org/">Testcontainers</a> es una herramienta que permite realizar pruebas de integración utilizando las mismas dependencias que usa la aplicación en su funcionamiento normal y disponer de estas dependencias en el entorno de prueba. Si usa una base de datos PostgreSQL las pruebas usan esta base de datos, lo mismo si las pruebas necesitan, MongoDB, <a href="https://www.rabbitmq.com/">RabbitMQ</a> o <a href="https://redis.io/">Redis</a>. Testcontainers es una tecnología Java que se basa en el uso de contenedores <a href="https://www.docker.com/">Docker</a> para las pruebas. Al iniciar las pruebas de integración Testcontainers se encarga de iniciar un contenedor efímero por cada una de las dependencias que se necesite, al finalizar las pruebas el contenedor es destruido.</p>
<p>Una aplicación que use una base de datos SQL lanza consultas SQL, aunque el lenguaje de consulta SQL está estandarizado las bases de datos incluyen diferencias en las funciones, sintaxis y palabras clave específicas de esa base de datos que no son compatibles con otras bases de datos. El caso es que probar esas consultas contra una base de datos en memoria puede hacer que el test funcione pero sobre la base de datos real no, la aplicación tiene consultas con condiciones complejas o procedimientos almacenados que es necesario que tengan pruebas, para garantizar mayor fiabilidad de las pruebas es mejor usar la base de datos real y no otra base de datos en memoria como <a href="https://www.h2database.com/html/main.html">H2</a>, <a href="http://hsqldb.org/">HSQL</a> que a veces se utilizan por no disponer en el entorno de pruebas la base de datos real.</p>
<p>Las partes del código que se puedan probar con teses unitarios es mejor probarlas con este tipo de teses ya que se ejecutan más rápidamente, son más fiables y no necesitan dependencias. Si ciertas partes del código no se pueden probar con una prueba unitaria por tener dependencias las pruebas de integración son la opción aconsejada para que también tengan sus correspondientes teses.</p>
<p>En el siguiente ejemplo muestro una clase repositorio que accede a una base de datos PostgreSQL implementado con <a href="https://spring.io/projects/spring-data">Spring Data</a> con JPA e <a href="https://hibernate.org/">Hibernate</a> que en su ejecución lanza consultas SQL a la base de datos relacional. Para probar su comportamiento en una prueba de integración se usa Testcontainers que arranca el contenedor Docker de PostgreSQL. La prueba está implementada con <a href="https://junit.org/junit5/">JUnit 5</a> y la aplicación hace uso de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a>. La prueba de integración realiza un par de pruebas para esa clase repositorio insertando los datos de prueba de dos formas diferentes.</p>
<p>Esta es la entidad de Hibernate que la clase repositorio persiste en la base de datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.testcontainers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Objects</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.GeneratedValue</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Table</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Entity</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Person&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Person</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GeneratedValue</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Long</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Person</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Person</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Long</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Person</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Person</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">Person</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">that</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Person.java</span>
    </div>
</div>
<p>La clase repositorio es una implementación para el acceso a la base de datos haciendo uso de las facilidades que proporciona Spring Data. La interfaz <a href="https://docs.spring.io/spring-data/commons/docs/current/api/org/springframework/data/repository/CrudRepository.html">CrudRepository</a> ofrece métodos con las operaciones de lectura, guardado, actualización y eliminación básicas que en su invocación generan las consultas SQL <em>select</em>, <em>insert</em>, <em>update</em> y <em>delete</em> correspondientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.testcontainers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Modifying</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Query</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.data.repository.CrudRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">PersonRepository</span> <span class="kd">extends</span> <span class="n">CrudRepository</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Modifying</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Query</span><span class="o">(</span><span class="s">&#34;delete from Person&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">deleteAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PersonRepository.java</span>
    </div>
</div>
<p>Testcontainers necesita iniciar contenedores para lo que es necesario instalar previamente según la <a href="https://picodotdev.github.io/blog-bitix/series/docker/">guía para Docker</a> este software de contenedores. En archivo de construcción es necesario incluir las dependencias de Testcontainers, de Spring y el controlador para la base de datos PostgreSQL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.testcontainers&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">java</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_11</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.testcontainers.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.3.0.RELEASE&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-data-jpa&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.liquibase:liquibase-core&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">exclude</span> <span class="nl">group:</span> <span class="s1">&#39;org.junit.vintage&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;junit-vintage-engine&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span> <span class="s1">&#39;org.testcontainers:testcontainers:1.14.3&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span> <span class="s1">&#39;org.testcontainers:junit-jupiter:1.14.3&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span> <span class="s1">&#39;org.testcontainers:postgresql:1.14.3&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span> <span class="s1">&#39;org.postgresql:postgresql:42.2.12&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span> <span class="s1">&#39;redis.clients:jedis:3.3.0&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">test</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">useJUnitPlatform</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>La clase <em>DefaultPostgresContainer</em> permite encapsular el inicio del contenedor para PostgresSQL  y configurar las variables <em>spring.datasource.url</em>, <em>spring.datasource.username</em> y <em>spring.datasource.password</em> con la URL de conexión, usuario y contraseña antes de que el contexto de Spring se inicie. La clase <em>DefaultPostgresContainer</em> permite reutilizar esta conguración en diferentes teses y hacer uso de ella donde sea necesario con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/context/ContextConfiguration.html">ContextConfiguration</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.testcontainers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.util.TestPropertyValues</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContextInitializer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.ConfigurableApplicationContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.testcontainers.containers.PostgreSQLContainer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultPostgresContainer</span> <span class="kd">extends</span> <span class="n">PostgreSQLContainer</span><span class="o">&lt;</span><span class="n">DefaultPostgresContainer</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">IMAGE_VERSION</span> <span class="o">=</span> <span class="s">&#34;postgres:12&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">DefaultPostgresContainer</span> <span class="n">container</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="nf">DefaultPostgresContainer</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">(</span><span class="n">IMAGE_VERSION</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">DefaultPostgresContainer</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">container</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">container</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultPostgresContainer</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">container</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">stop</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Initializer</span> <span class="kd">implements</span> <span class="n">ApplicationContextInitializer</span><span class="o">&lt;</span><span class="n">ConfigurableApplicationContext</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">initialize</span><span class="o">(</span><span class="n">ConfigurableApplicationContext</span> <span class="n">configurableApplicationContext</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultPostgresContainer</span> <span class="n">container</span> <span class="o">=</span> <span class="n">DefaultPostgresContainer</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">container</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TestPropertyValues</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;spring.datasource.url=&#34;</span> <span class="o">+</span> <span class="n">container</span><span class="o">.</span><span class="na">getJdbcUrl</span><span class="o">(),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;spring.datasource.username=&#34;</span> <span class="o">+</span> <span class="n">container</span><span class="o">.</span><span class="na">getUsername</span><span class="o">(),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;spring.datasource.password=&#34;</span> <span class="o">+</span> <span class="n">container</span><span class="o">.</span><span class="na">getPassword</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">).</span><span class="na">applyTo</span><span class="o">(</span><span class="n">configurableApplicationContext</span><span class="o">.</span><span class="na">getEnvironment</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultPostgresContainer.java</span>
    </div>
</div>
<p>Se puede iniciar cualquier contenedor de forma genérica con el siguiente código, indicando la imagen del contenedor y etiqueta además del puerto que expone. Testcontainer los expone de forma local usando un puerto aleatorio, se necesita el <em>host</em> y puerto que permite la conexión al servicio obtenidos de la referencia del contenedor. En este caso se inicia un contenedor <a href="https://redis.io/">Redis</a> accedido con la librería <a href="https://github.com/xetorthio/jedis">Jedis</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.testcontainers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.Assert</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.BeforeAll</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.BeforeEach</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import static</span> <span class="nn">org.junit.jupiter.api.Assertions.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.util.TestPropertyValues</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContextInitializer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.ConfigurableApplicationContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.testcontainers.containers.GenericContainer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.testcontainers.junit.jupiter.Container</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.testcontainers.junit.jupiter.Testcontainers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">redis.clients.jedis.Jedis</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootTest</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Testcontainers</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">RedisTest</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RedisTest</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Container</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">GenericContainer</span> <span class="n">redis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GenericContainer</span><span class="o">&lt;&gt;(</span><span class="s">&#34;redis:6&#34;</span><span class="o">).</span><span class="na">withExposedPorts</span><span class="o">(</span><span class="n">6379</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Jedis</span> <span class="n">jedis</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@BeforeEach</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">beforeEach</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">host</span> <span class="o">=</span> <span class="n">redis</span><span class="o">.</span><span class="na">getHost</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">port</span> <span class="o">=</span> <span class="n">redis</span><span class="o">.</span><span class="na">getFirstMappedPort</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jedis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Jedis</span><span class="o">(</span><span class="n">host</span><span class="o">,</span> <span class="n">port</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">redisTest</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jedis</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">,</span> <span class="s">&#34;bar&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="s">&#34;bar&#34;</span><span class="o">,</span> <span class="n">jedis</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Initializer</span> <span class="kd">implements</span> <span class="n">ApplicationContextInitializer</span><span class="o">&lt;</span><span class="n">ConfigurableApplicationContext</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">initialize</span><span class="o">(</span><span class="n">ConfigurableApplicationContext</span> <span class="n">configurableApplicationContext</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TestPropertyValues</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">applyTo</span><span class="o">(</span><span class="n">configurableApplicationContext</span><span class="o">.</span><span class="na">getEnvironment</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RedisTest.java</span>
    </div>
</div>
<p>La prueba está implementada con JUnit 5 y Spring Boot, con la anotación <em>ContextConfiguration</em> se indica a JUnit y a Spring que inicie el contenedor de PostgreSQL antes de iniciar el contexto de Spring que configura las variables de conexión a la base de datos y antes de ejecutar los métodos de prueba. Los métodos de prueba son muy sencillos simplemente persisten en la base de datos varias entidades y se prueba que el número de entidades presentes en la base de datos al contarlas es el esperado.</p>
<p>Los datos iniciales de prueba o <em>fixture</em> se insertan de dos formas diferentes en cada método de prueba, en uno haciendo uso de la propia clase repositorio y en otro con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/context/jdbc/Sql.html">Sql</a> que contiene las sentencias SQL de inserción equivalentes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.testcontainers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.AfterEach</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import static</span> <span class="nn">org.junit.jupiter.api.Assertions.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.test.context.jdbc.Sql</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootTest</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">DefaultPostgresContainer</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PersonRepositoryTest</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">PersonRepository</span> <span class="n">personRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@AfterEach</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">afterEach</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">personRepository</span><span class="o">.</span><span class="na">deleteAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">repositoryPersonCount</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="n">persons</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="s">&#34;James Gosling&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="s">&#34;Linus Torvalds&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="s">&#34;Richard Stallman&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="s">&#34;Bill Gates&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="s">&#34;Steve Jobs&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="s">&#34;Dennis Ritchie&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">personRepository</span><span class="o">.</span><span class="na">saveAll</span><span class="o">(</span><span class="n">persons</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">persons</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span> <span class="n">personRepository</span><span class="o">.</span><span class="na">count</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/persons.sql&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">sqlPersonCount</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">6</span><span class="o">,</span> <span class="n">personRepository</span><span class="o">.</span><span class="na">count</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PersonRepositoryTest.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Person</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;James Gosling&#39;</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Person</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Linus Torvalds&#39;</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Person</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Richard Stallman&#39;</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Person</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Bill Gates&#39;</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Person</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Steve Jobs&#39;</span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Person</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Dennis Ritchie&#39;</span><span class="p">);</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>persons.sql</span>
    </div>
</div>
<p>En la salida de trazas de los teses se observa como Testcontainers inicia el contenedor PostgreSQL y como los teses generan las sentencias SQL de <em>insert</em>, <em>count</em> y <em>delete</em> para eliminar los datos del <em>fixture</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  .   ____&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  _&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__ _ _&#10;</span></span><span class="line"><span class="cl"> /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \&#10;</span></span><span class="line"><span class="cl">( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \&#10;</span></span><span class="line"><span class="cl"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )&#10;</span></span><span class="line"><span class="cl">  &#39;  |____| .__|_| |_|_| |_\__, | / / / /&#10;</span></span><span class="line"><span class="cl"> =========|_|==============|___/=/_/_/_/&#10;</span></span><span class="line"><span class="cl"> :: Spring Boot ::&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v2.3.0.RELEASE)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:25.003  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] tAndSystemPropertyClientProviderStrategy : Found docker client settings from environment&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:25.004  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] o.t.d.DockerClientProviderStrategy&nbsp;&nbsp;&nbsp;&nbsp;   : Found Docker environment with Environment variables, system properties and defaults. Resolved dockerHost=unix:///var/run/docker.sock&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:25.120  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] org.testcontainers.DockerClientFactory   : Docker host IP address is localhost&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:25.140  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] org.testcontainers.DockerClientFactory   : Connected to docker: &#10;</span></span><span class="line"><span class="cl">  Server Version: 19.03.11-ce&#10;</span></span><span class="line"><span class="cl">  API Version: 1.40&#10;</span></span><span class="line"><span class="cl">  Operating System: Arch Linux&#10;</span></span><span class="line"><span class="cl">  Total Memory: 31986 MB&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:27.387  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Starting to pull image&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:27.430  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  0 pending,  0 downloaded,  0 extracted, (0 bytes/0 bytes)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:28.813  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  2 pending,  1 downloaded,  0 extracted, (486 KB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:32.147  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  1 pending,  2 downloaded,  0 extracted, (4 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:32.600  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  0 pending,  3 downloaded,  0 extracted, (5 MB/5 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:32.784  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  0 pending,  3 downloaded,  1 extracted, (5 MB/5 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:32.869  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  0 pending,  3 downloaded,  2 extracted, (5 MB/5 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:33.006  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pulling image layers:  0 pending,  3 downloaded,  3 extracted, (5 MB/5 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:33.027  INFO 4244 --- [tream-916764928] org.testcontainers.DockerClientFactory   : Pull complete. 3 layers, pulled in 5s (downloaded 5 MB at 1 MB/s)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:33.785  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] org.testcontainers.DockerClientFactory   : Ryuk started - will monitor and terminate Testcontainers containers on JVM exit&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:33.785  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] org.testcontainers.DockerClientFactory   : Checking the system...&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:33.786  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] org.testcontainers.DockerClientFactory   : ✔︎ Docker server version should be at least 1.6.0&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:34.060  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] org.testcontainers.DockerClientFactory   : ✔︎ Docker environment should have more than 2GB free disk space&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:34.070  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling docker image: postgres:12. Please be patient; this may take some time but only needs to be done once.&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:36.059  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Starting to pull image&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:36.064  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending,  0 downloaded,  0 extracted, (0 bytes/0 bytes)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:37.729  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers: 13 pending,  1 downloaded,  0 extracted, (1 KB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:44.773  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers: 12 pending,  2 downloaded,  0 extracted, (9 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:46.205  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers: 11 pending,  3 downloaded,  0 extracted, (10 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:49.709  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers: 10 pending,  4 downloaded,  0 extracted, (14 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:50.684  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  9 pending,  5 downloaded,  0 extracted, (16 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:51.585  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  8 pending,  6 downloaded,  0 extracted, (17 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:57.752  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  7 pending,  7 downloaded,  0 extracted, (25 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:49:58.883  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  6 pending,  8 downloaded,  0 extracted, (26 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:00.392  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  5 pending,  9 downloaded,  0 extracted, (28 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:01.935  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  4 pending, 10 downloaded,  0 extracted, (30 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:03.377  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  3 pending, 11 downloaded,  0 extracted, (32 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:04.884  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  2 pending, 12 downloaded,  0 extracted, (34 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:23.813  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  0 extracted, (58 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:24.979  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  1 extracted, (59 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:25.172  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  2 extracted, (60 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:25.263  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  3 extracted, (60 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:25.397  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  4 extracted, (60 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:25.819  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  5 extracted, (61 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:25.899  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  6 extracted, (61 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:25.957  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  7 extracted, (61 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:50:26.020  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  1 pending, 13 downloaded,  8 extracted, (61 MB/? MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:02.496  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded,  8 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.070  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded,  9 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.160  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded, 10 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.241  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded, 11 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.303  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded, 12 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.363  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded, 13 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.446  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pulling image layers:  0 pending, 14 downloaded, 14 extracted, (108 MB/108 MB)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.464  INFO 4244 --- [tream-812574485] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Pull complete. 14 layers, pulled in 89s (downloaded 108 MB at 1 MB/s)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.475  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Creating container for image: postgres:12&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:05.629  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Starting container with ID: 7f7754ae9a7903583c6a0b1f3cde15a651f0c5fb4394491e1f73a83d9b812c6c&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:06.209  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Container postgres:12 is starting: 7f7754ae9a7903583c6a0b1f3cde15a651f0c5fb4394491e1f73a83d9b812c6c&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:07.193  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] 🐳 [postgres:12]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Container postgres:12 started in PT1M42.629448S&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:07.202  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] i.g.p.b.t.PersonRepositoryTest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   : Starting PersonRepositoryTest on archlinux with PID 4244 (started by picodotdev in ../blog-ejemplos/Testcontainers)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:07.204  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] i.g.p.b.t.PersonRepositoryTest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   : No active profile set, falling back to default profiles: default&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:07.564  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:07.612  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 42ms. Found 1 JPA repository interfaces.&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:07.950  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] com.zaxxer.hikari.HikariDataSource&nbsp;&nbsp;&nbsp;&nbsp;   : HikariPool-1 - Starting...&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.021  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] com.zaxxer.hikari.HikariDataSource&nbsp;&nbsp;&nbsp;&nbsp;   : HikariPool-1 - Start completed.&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.711  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT COUNT(*) FROM public.databasechangeloglock&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.726  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : CREATE TABLE public.databasechangeloglock (ID INTEGER NOT NULL, LOCKED BOOLEAN NOT NULL, LOCKGRANTED TIMESTAMP WITHOUT TIME ZONE, LOCKEDBY VARCHAR(255), CONSTRAINT DATABASECHANGELOGLOCK_PKEY PRIMARY KEY (ID))&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.729  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT COUNT(*) FROM public.databasechangeloglock&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.732  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : DELETE FROM public.databasechangeloglock&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.733  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : INSERT INTO public.databasechangeloglock (ID, LOCKED) VALUES (1, FALSE)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.735  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT LOCKED FROM public.databasechangeloglock WHERE ID=1&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:08.741  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] l.lockservice.StandardLockService&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: Successfully acquired change log lock&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.808  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] l.c.StandardChangeLogHistoryService&nbsp;&nbsp;&nbsp;&nbsp;  : Creating database history table with name: public.databasechangelog&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.809  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : CREATE TABLE public.databasechangelog (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP WITHOUT TIME ZONE NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.812  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT COUNT(*) FROM public.databasechangelog&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.813  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] l.c.StandardChangeLogHistoryService&nbsp;&nbsp;&nbsp;&nbsp;  : Reading from public.databasechangelog&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.813  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT * FROM public.databasechangelog ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.815  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT COUNT(*) FROM public.databasechangeloglock&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.823  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : CREATE TABLE public.department (id INTEGER NOT NULL, name VARCHAR(50) NOT NULL, active BOOLEAN DEFAULT TRUE, CONSTRAINT DEPARTMENT_PKEY PRIMARY KEY (id))&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.825  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.changelog.ChangeSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: Table department created&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.826  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.changelog.ChangeSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: ChangeSet classpath:/db/changelog/db.changelog-master.xml::1::bob ran successfully in 4ms&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.826  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : SELECT MAX(ORDEREXECUTED) FROM public.databasechangelog&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.828  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] liquibase.executor.jvm.JdbcExecutor&nbsp;&nbsp;&nbsp;&nbsp;  : INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES (&#39;1&#39;, &#39;bob&#39;, &#39;classpath:/db/changelog/db.changelog-master.xml&#39;, NOW(), 1, &#39;8:47afc11dcd196aca25eebfad16683784&#39;, &#39;createTable tableName=department&#39;, &#39;&#39;, &#39;EXECUTED&#39;, NULL, NULL, &#39;3.8.9&#39;, &#39;1516269815&#39;)&#10;</span></span><span class="line"><span class="cl">2020-06-07 09:51:09.831  INFO 4244 --- [&nbsp;&nbsp;&nbsp;&nbsp;Test worker] l.lockservice.StandardLockService&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: Successfully released change log lock&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Hibernate: create sequence hibernate_sequence start 1 increment 1&#10;</span></span><span class="line"><span class="cl">Hibernate: create table person (id int8 not null, name varchar(255), primary key (id))&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Hibernate: select nextval (&#39;hibernate_sequence&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: select nextval (&#39;hibernate_sequence&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: select nextval (&#39;hibernate_sequence&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: select nextval (&#39;hibernate_sequence&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: select nextval (&#39;hibernate_sequence&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: select nextval (&#39;hibernate_sequence&#39;)&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into person (name, id) values (?, ?)&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into person (name, id) values (?, ?)&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into person (name, id) values (?, ?)&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into person (name, id) values (?, ?)&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into person (name, id) values (?, ?)&#10;</span></span><span class="line"><span class="cl">Hibernate: insert into person (name, id) values (?, ?)&#10;</span></span><span class="line"><span class="cl">Hibernate: select count(*) as col_0_0_ from person person0_&#10;</span></span><span class="line"><span class="cl">Hibernate: delete from person&#10;</span></span><span class="line"><span class="cl">Hibernate: select count(*) as col_0_0_ from person person0_&#10;</span></span><span class="line"><span class="cl">Hibernate: delete from person&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Si fuera necesario <a href="https://www.liquibase.org/">Liquibase</a> permite aplicar cambios en la base con archivos de migración, por ejemplo, para crear algunas tablas, procedimientos almacenados o crear los datos básicos. En el ejemplo el archivo de cambios en base de datos incluye la tabla <em>Department</em>. En las trazas se ve la SQL de creación de la tabla, para las pruebas del ejemplo no es necesario pero suele ser una funcionalidad necesaria en un proyecto real.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>  &#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;databaseChangeLog</span>&#10;</span></span><span class="line"><span class="cl">  <span class="na">xmlns=</span><span class="s">&#34;http://www.liquibase.org/xml/ns/dbchangelog&#34;</span>  &#10;</span></span><span class="line"><span class="cl">  <span class="na">xmlns:xsi=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema-instance&#34;</span>  &#10;</span></span><span class="line"><span class="cl">  <span class="na">xsi:schemaLocation=</span><span class="s">&#34;http://www.liquibase.org/xml/ns/dbchangelog&#10;</span></span></span><span class="line"><span class="cl"><span class="s">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd&#34;</span><span class="nt">&gt;</span>  &#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;changeSet</span> <span class="na">id=</span><span class="s">&#34;1&#34;</span> <span class="na">author=</span><span class="s">&#34;picodotdev&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;createTable</span> <span class="na">tableName=</span><span class="s">&#34;department&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;column</span> <span class="na">name=</span><span class="s">&#34;id&#34;</span> <span class="na">type=</span><span class="s">&#34;int&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;constraints</span> <span class="na">primaryKey=</span><span class="s">&#34;true&#34;</span> <span class="na">nullable=</span><span class="s">&#34;false&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/column&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;column</span> <span class="na">name=</span><span class="s">&#34;name&#34;</span> <span class="na">type=</span><span class="s">&#34;varchar(50)&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;constraints</span> <span class="na">nullable=</span><span class="s">&#34;false&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/column&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;column</span> <span class="na">name=</span><span class="s">&#34;active&#34;</span> <span class="na">type=</span><span class="s">&#34;boolean&#34;</span> <span class="na">defaultValueBoolean=</span><span class="s">&#34;true&#34;</span><span class="nt">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/createTable&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;/changeSet&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/databaseChangeLog&gt;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>db.changelog-master.xml</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Testcontainers">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew test</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://balarawool.me/writing-integration-tests-with-testcontainers/">Writing integration tests with Testcontainers</a></li>
<li><a href="https://www.baeldung.com/spring-boot-testcontainers-integration-test">DB Integration Tests with Spring Boot and Testcontainers</a></li>
<li><a href="https://www.baeldung.com/liquibase-refactor-schema-of-java-app">Use Liquibase to Safely Evolve Your Database Schema</a></li>
<li><a href="https://stackoverflow.com/questions/53078306/populate-a-database-with-testcontainers-in-a-springboot-integration-test">Populate a database with TestContainers in a SpringBoot integration test</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/la-herramienta-sdkman-para-instalar-varias-versiones-del-jdk-y-software-de-la-plataforma-java/</id>
        <title>La herramienta SDKMAN para instalar varias versiones del JDK y software de la plataforma Java</title>
        <updated>2020-06-05T23:00:00+02:00</updated>
        <published>2020-06-05T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/la-herramienta-sdkman-para-instalar-varias-versiones-del-jdk-y-software-de-la-plataforma-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En ocasiones es necesario tener instaladas varias versiones de JDK según el proyecto, unos quizá usen Java 8 y otros quizá usen Java 11 o posterior. El gestor de software SDKMAN permite instalar múltiples versiones del JDK de forma simultánea y usar la deseada a conveniencia. Adicionalmente también permite instalar otras herramientas de la plataforma Java como Gradle y Maven o lenguajes como Groovy entre otros SDK comunes disponibles.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sdkman.svg" width="300" height="175" alt="SDKMAN" title="SDKMAN"  class=""></p>
</div>
<p>Cuando usaba <a href="https://www.microsoft.com/es-es/windows/">Windows</a> para instalar el JDK para programar en Java siempre me lo descargaba de la página de <a href="https://www.oracle.com/">Oracle</a>, el típico instalador de Windows con un asistente que dejaba el JDK instalado en el sistema. Desde que uso <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> siempre he usado la versión del JDK del proyecto <a href="https://openjdk.java.net/">OpenJDK</a> del que el JDK de Oracle toma como fuente y posteriormente la empresa de Larry Ellison añade sus modificaciones y extensiones algunas no libres.</p>
<p>El inconveniente surge cuando hay que instalar una nueva versión, lo que posiblemente implica desinstalar la antigua y repetir el proceso de instalación con la nueva. En Windows hasta donde he conocido un proceso manual que ahora con WinGet al estilo de los gestores de paquetes de GNU/Linux lo mantenga actualizado al actualizar el sistema sin apenas intervención por parte del usuario.</p>
<p>Pero ahora con el nuevo ciclo de desarrollo del JDK que publica una nueva versión cada seis meses y una versión de soporte a largo plazo cada tres años las versiones son enormemente frecuentes a los que los usuarios de Java estábamos acostumbrados con una publicación cada dos o más años. Al mismo tiempo han surgido múltiples implementaciones o distribuciones del JDK, por ejemplo Amazon ofrece <a href="https://aws.amazon.com/es/corretto/">Corretto</a> también están <a href="https://adoptopenjdk.net/">AdoptOpenJDK</a> entre algunas otras menos populares. Tener múltiples versiones o implementaciones del JDK en el sistema implica habitualmente tener que cambiar una variable de entorno para indicar cual es el directorio <em>home</em> del JDK que se desea usar. Esta gestión de la versión del JDK es manual y poco práctica ya que afecta a nivel global del sistema lo que impide usar diferentes versiones de JDK según la aplicación o proyecto, quizá unos proyectos usen Java 8 y otros Java 11 u otro más reciente.</p>
<h3 id="qué-es-sdkman-y-qué-ventajas-tiene">Qué es SDKMAN y qué ventajas tiene</h3>
<p>SDKMAN es un gestor de paquetes basado en línea de comandos para instalar y mantener actualizado software de la plataforma Java no solo para el JDK sino que para otras muchas librerías, utilidades y SDK comunes como las herramientas de construcción <a href="https://gradle.org/">Gradle</a> y <a href="https://maven.apache.org/">Maven</a>, lenguajes para la plataforma como <a href="https://www.groovy-lang.org/">Groovy</a>, <a href="https://ceylon-lang.org/">Ceylon</a> o <a href="https://www.scala-lang.org/">Scala</a>, la nombrada utilidad para crear software de código nativo <a href="https://www.graalvm.org/">GraalVM</a> com importantes mejoras en rendimiento en tiempo de ejecución y consumo de memoria. La herramienta <a href="https://sdkman.io/">SDKMAN</a> tiene las ventajas de poder instalar varias versiones del JDK, múltiples implementaciones y poder usar una versión distinta según el proyecto, permite solucionar los problemas anteriores.</p>
<p>En los últimos años hasta ahora siempre he usado el paquete de la distribución <a href="https://www.archlinux.org/">Arch Linux</a> que uso para el JDK y Gradle pero a partir de ahora empezaré a usar SDKMAN ya que permite tener instaladas simultáneamente varias versiones, tiene versiones adicionales que no están disponibles en la distribución y permite cambiar fácilmente entre versiones sin necesidad de permisos de superusuario. La desventaja que tiene SDKMAN es que al no usar el paquete de la distribución no se puede instalar ningún paquete que requiera Java, en el caso de Arch Linux los paquetes del JDK como <em>jdk11-openjdk</em> proporcionan la dependencia <em>java-environment</em> que es necesaria para algunos otros paquetes como <em>intellij-idea-community-edition</em>. La solución es <a href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/">instalar los programas mediante Flatpak</a> si están disponibles en esta forma de distribución de software.</p>
<h3 id="instalación">Instalación</h3>
<p>La instalación de SDKMAN consiste en ejecutar los siguientes comandos, el primero descarga e instala los <em>scripts</em> de SDKMAM en la carpeta personal del usuario, <em>~/.sdkman</em>. También modifica los archivos de configuración del intérprete de comandos <em>bash</em> o <em>zsh</em> que permiten establecer las variables de entorno que necesita cuando se inicia una nueva terminal. Los dos últimos permiten comprobar que la instalación se ha realizado correctamente.</p>
<p>SDKMAN solo está disponible de forma nativa para los sistemas UNIX entre ellos GNU/Linux pero no Windows dado que está basado en <em>scripts</em> de bash. Para Windows es necesario utilizar <em>Windows Linux Subsystem</em> o WLS, Cygwin o MSYS+MinGW.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -s <span class="s2">&#34;https://get.sdkman.io&#34;</span> <span class="p">|</span> bash&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">source</span> <span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.sdkman/bin/sdkman-init.sh&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ sdk version</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sdk-install.sh</span>
    </div>
</div>
<h3 id="uso">Uso</h3>
<p>La utilidad de línea de comandos SDKMAN es <em>sdk</em>, una utilidad sencilla con varias operaciones para instalar, actualizar, desinstalar o usar la última versión o una determinada versión. Las notas de ayuda de la utilidad son bastante explicativas de cómo usar esta herramienta.</p>
<p>El término <em>candidate</em> hace referencia al paquete de software, puede ser un JDK o un SDK. El término <em>versión</em> indica la versión afectada por el comando del paquete de software <em>candidate</em> previamente indicado. Si estas notas no son suficientes hay una <a href="https://sdkman.io/usage">guía de uso</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sdk&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Usage: sdk &lt;command&gt; <span class="o">[</span>candidate<span class="o">]</span> <span class="o">[</span>version<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  sdk offline &lt;enable<span class="p">|</span>disable&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  commands:&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  install   or i&nbsp;&nbsp;&nbsp;&nbsp;&lt;candidate&gt; <span class="o">[</span>version<span class="o">]</span> <span class="o">[</span>local-path<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  uninstall or rm   &lt;candidate&gt; &lt;version&gt;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  list&nbsp;&nbsp;&nbsp;&nbsp;  or ls   <span class="o">[</span>candidate<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  use&nbsp;&nbsp;&nbsp;&nbsp;   or u&nbsp;&nbsp;&nbsp;&nbsp;&lt;candidate&gt; &lt;version&gt;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  default   or d&nbsp;&nbsp;&nbsp;&nbsp;&lt;candidate&gt; <span class="o">[</span>version<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  current   or c&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span>candidate<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  upgrade   or ug   <span class="o">[</span>candidate<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  version   or v&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  broadcast or b&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">help</span>&nbsp;&nbsp;&nbsp;&nbsp;  or h&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  offline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">[</span>enable<span class="p">|</span>disable<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  selfupdate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span>force<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  update&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  flush&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;broadcast<span class="p">|</span>archives<span class="p">|</span>temp&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  candidate  :  the SDK to install: groovy, scala, grails, gradle, kotlin, etc.&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use list <span class="nb">command</span> <span class="k">for</span> comprehensive list of candidates&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eg: $ sdk list&#10;</span></span><span class="line"><span class="cl">  version&nbsp;&nbsp;&nbsp;&nbsp;:  where optional, defaults to latest stable <span class="k">if</span> not provided&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eg: $ sdk install groovy&#10;</span></span><span class="line"><span class="cl">  local-path :  optional path to an existing <span class="nb">local</span> installation&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eg: $ sdk install groovy 2.4.13-local /opt/groovy-2.4.13</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sdk-usage.sh</span>
    </div>
</div>
<p>En la página de SDKMAM hay una <a href="https://sdkman.io/jdks">lista de JDK</a> y <a href="https://sdkman.io/sdks">SDK</a> disponibles en este gestor de software. Los comandos más habituales son <em>list</em> para listar candidatos y versiones disponibles, <em>install</em> para instalar software, <em>upgrade</em> para actualizar a la última versión el candidato indicado o todos los instalados si no se indica ninguno, <em>use</em> para usar una versión específica de un candidato durante la sesión de la terminal, <em>default</em> para establecer la versión por defecto de un candidato y <em>uninstall</em> para desinstalar un candidato y versión. En el siguiente ejemplo se muestra como instalar varias versiones del JDK, usarlas y cambiar entre versiones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sdk list <span class="nv">java</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">================================================================================</span>&#10;</span></span><span class="line"><span class="cl">Available Java <span class="nv">Versions</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">================================================================================</span>&#10;</span></span><span class="line"><span class="cl"> Vendor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> Use <span class="p">|</span> Version&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> Dist&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> Status&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> Identifier&#10;</span></span><span class="line"><span class="cl">--------------------------------------------------------------------------------&#10;</span></span><span class="line"><span class="cl"> AdoptOpenJDK  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 14.0.1.j9&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 14.0.1.j9-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 14.0.1.hs&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 14.0.1.hs-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 13.0.2.j9&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 13.0.2.j9-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 13.0.2.hs&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 13.0.2.hs-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 12.0.2.j9&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 12.0.2.j9-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 12.0.2.hs&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 12.0.2.hs-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 11.0.7.j9&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 11.0.7.j9-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 11.0.7.hs&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 11.0.7.hs-adpt&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 8.0.252.j9   <span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 8.0.252.j9-adpt&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 8.0.252.hs   <span class="p">|</span> adpt&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 8.0.252.hs-adpt&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl"> Amazon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 11.0.7&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> amzn&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 11.0.7-amzn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 8.0.252&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> amzn&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 8.0.252-amzn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"> GraalVM&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 20.1.0.r11   <span class="p">|</span> grl&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 20.1.0.r11-grl&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"> Java.net&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 15.ea.26&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 15.ea.26-open&nbsp;&nbsp;&nbsp;&nbsp;   &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 14.0.1&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 14.0.1-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 13.0.2&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 13.0.2-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 12.0.2&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 12.0.2-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 11.0.7&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 11.0.7-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 10.0.2&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 10.0.2-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 9.0.4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 9.0.4-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> 8.0.252&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> open&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> 8.0.252-open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">...  &#10;</span></span><span class="line"><span class="cl"><span class="o">================================================================================</span>&#10;</span></span><span class="line"><span class="cl">Use the Identifier <span class="k">for</span> installation:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;$ sdk install java 11.0.3.hs-adpt&#10;</span></span><span class="line"><span class="cl"><span class="o">================================================================================</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sdk install java 8.0.252-open&#10;</span></span><span class="line"><span class="cl">$ sdk install java 11.0.7-open&#10;</span></span><span class="line"><span class="cl">$ sdk install java 14.0.1-open&#10;</span></span><span class="line"><span class="cl">$ sdk default java 11.0.7-open&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sdk use java 8.0.252-open&#10;</span></span><span class="line"><span class="cl">$ java -version&#10;</span></span><span class="line"><span class="cl">openjdk version <span class="s2">&#34;1.8.0_252&#34;</span>&#10;</span></span><span class="line"><span class="cl">OpenJDK Runtime Environment <span class="o">(</span>build 1.8.0_252-b09<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">OpenJDK 64-Bit Server VM <span class="o">(</span>build 25.252-b09, mixed mode<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sdk use java 11.0.7-open&#10;</span></span><span class="line"><span class="cl">$ java -version&#10;</span></span><span class="line"><span class="cl">openjdk version <span class="s2">&#34;11.0.7&#34;</span> 2020-04-14&#10;</span></span><span class="line"><span class="cl">OpenJDK Runtime Environment 18.9 <span class="o">(</span>build 11.0.7+10<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">OpenJDK 64-Bit Server VM 18.9 <span class="o">(</span>build 11.0.7+10, mixed mode<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sdk use java 14.0.1-open&#10;</span></span><span class="line"><span class="cl">$ java -version&#10;</span></span><span class="line"><span class="cl">openjdk version <span class="s2">&#34;14.0.1&#34;</span> 2020-04-14&#10;</span></span><span class="line"><span class="cl">OpenJDK Runtime Environment <span class="o">(</span>build 14.0.1+7<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">OpenJDK 64-Bit Server VM <span class="o">(</span>build 14.0.1+7, mixed mode, sharing<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sdk upgrade</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sdk-commands.sh</span>
    </div>
</div>
<p>En la <a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/">distribución inmutable Fedora Silverblue</a> esta herramienta es especialmente útil ya que todo el software que instala lo hace en la carpeta personal del usuario, ni pedir permisos de administrador del sistema para instalar o desinstalar candidatos.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/copiar-datos-de-un-tipo-de-objeto-a-otro-con-modelmapper/</id>
        <title>Copiar datos de un tipo de objeto a otro con ModelMapper</title>
        <updated>2020-05-31T10:00:00+02:00</updated>
        <published>2020-05-31T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/copiar-datos-de-un-tipo-de-objeto-a-otro-con-modelmapper/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las clases DTO son clases usadas como contenedores de datos sin ninguna lógica o con muy poca, se construyen con datos copiados de otras clases. Un uso de estas clases DTO es para evitar emplear el uso del patrón <em>Open Session in View</em> ya que aunque ofrece algunos beneficios también tiene algunos inconvenientes. La librería ModelMapper permite realizar los copiados de datos de un objeto origen a una nueva instancia destino de otra clase.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En ocasiones es necesario copiar datos de un tipo de objeto a otro tipo, no es una operación complicada basta con llamar al método <em>getter</em> de la propiedad a copiar para obtener su valor del objeto origen y posteriormente llamar al <em>setter</em> para establecer el valor en objeto destino. Aún siendo una operación sencilla es tediosa y puede complicarse si se han de copiar listas de objetos y si esos objetos a copiar tienen referencias a otros objetos que también hay que copiar. Si además esta es una operación común en el código es conveniente utilizar una librería específica para este propósito, una de ellas es <a href="http://modelmapper.org/">ModelMapper</a>.</p>
<p>ModelMapper es una librería Java para copiar o <em>mapear</em> propiedades de un tipo de objeto a otro tipo de objeto, permitiendo copiar también los datos de las referencias a los objetos que contengan. Soporta diferentes convenciones, copiados explícitos, conversiones y proveedores para construir los objetos destino e integraciones con diferentes librerías, una de ellas <a href="https://www.jooq.org/">jOOQ</a>.</p>
<p>Un posible caso de uso es para evitar emplear <a href="https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/">el patrón <em>Open Session in View</em></a> ya que tiene varios inconvenientes. Con una librería como ModelMapper es posible hacer uso de simples objetos contenedores de datos en la vista copiando los datos de las entidades a los objetos DTO. O si para obtener los datos de la vista en vez de usar una librería como Hibernate se opta por una librería como jOOQ permitir copiar los datos de los registros de jOOQ a los mismos DTOs.</p>
<p>El siguiente ejemplo se compone de tres clases que tienen relaciones entre ellas, estas clases podrían ser las entidades si se persistiesen en base de datos con Hibernate.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Order</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Customer</span> <span class="n">customer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Address</span> <span class="n">billingAddress</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Order</span><span class="o">(</span><span class="n">Customer</span> <span class="n">customer</span><span class="o">,</span> <span class="n">Address</span> <span class="n">billingAddress</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">customer</span> <span class="o">=</span> <span class="n">customer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">billingAddress</span> <span class="o">=</span> <span class="n">billingAddress</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Customer</span> <span class="nf">getCustomer</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">customer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Address</span> <span class="nf">getBillingAddress</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">billingAddress</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Order.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Customer</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">firstName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">lastName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Customer</span><span class="o">(</span><span class="n">String</span> <span class="n">firstName</span><span class="o">,</span> <span class="n">String</span> <span class="n">lastName</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">firstName</span> <span class="o">=</span> <span class="n">firstName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">lastName</span> <span class="o">=</span> <span class="n">lastName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getFirstName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">firstName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getLastName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">lastName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Customer.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Address</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">street</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">city</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Address</span><span class="o">(</span><span class="n">String</span> <span class="n">street</span><span class="o">,</span> <span class="n">String</span> <span class="n">city</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">street</span> <span class="o">=</span> <span class="n">street</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">city</span> <span class="o">=</span> <span class="n">city</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getStreet</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">street</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCity</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">city</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Address.java</span>
    </div>
</div>
<p>La clase DTO es simplemente una nueva clase POJO que contiene los datos de las clases anteriores, para evitar el patrón <em>Open Session in View</em> la vista recibiría una instancia de esta clase.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OrderDTO</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">customerFirstName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">customerLastName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">billingAddressStreet</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">billingAddressCity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCustomerFirstName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">customerFirstName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCustomerFirstName</span><span class="o">(</span><span class="n">String</span> <span class="n">customerFirstName</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">customerFirstName</span> <span class="o">=</span> <span class="n">customerFirstName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCustomerLastName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">customerLastName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCustomerLastName</span><span class="o">(</span><span class="n">String</span> <span class="n">customerLastName</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">customerLastName</span> <span class="o">=</span> <span class="n">customerLastName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getBillingAddressStreet</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">billingAddressStreet</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBillingAddressStreet</span><span class="o">(</span><span class="n">String</span> <span class="n">billingAddressStreet</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">billingAddressStreet</span> <span class="o">=</span> <span class="n">billingAddressStreet</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getBillingAddressCity</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">billingAddressCity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBillingAddressCity</span><span class="o">(</span><span class="n">String</span> <span class="n">billingAddressCity</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">billingAddressCity</span> <span class="o">=</span> <span class="n">billingAddressCity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>OrderDTO.java</span>
    </div>
</div>
<p>En esta aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> se construye una instancia de la clase <a href="http://modelmapper.org/javadoc/org/modelmapper/ModelMapper.html">ModelMapper</a> y posteriormente con su configuración y convenciones por defecto realiza el copiado de datos de una instancia de la clase <em>Order</em> a una nueva instancia de la clase <em>OrderDTO</em>. En la salida del programa en la consola se muestran los valores de las propiedades de <em>OrderDTO</em> copiadas de la clase <em>Order</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes.Address</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes.Customer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes.Order</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.modelmapper.classes.OrderDTO</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.modelmapper.ModelMapper</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ModelMapper</span> <span class="n">modelMapper</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">ModelMapper</span> <span class="nf">modelMapper</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="k">new</span> <span class="n">ModelMapper</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Customer</span> <span class="n">customer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Customer</span><span class="o">(</span><span class="s">&#34;Francisco&#34;</span><span class="o">,</span> <span class="s">&#34;Ibáñez&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Address</span> <span class="n">billigAddress</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Address</span><span class="o">(</span><span class="s">&#34;c\\ Rue del Percebe, 13&#34;</span><span class="o">,</span> <span class="s">&#34;Madrid&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Order</span> <span class="n">order</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Order</span><span class="o">(</span><span class="n">customer</span><span class="o">,</span> <span class="n">billigAddress</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">OrderDTO</span> <span class="n">orderDTO</span> <span class="o">=</span> <span class="n">modelMapper</span><span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">order</span><span class="o">,</span> <span class="n">OrderDTO</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Customer First Name: %s%n&#34;</span><span class="o">,</span> <span class="n">orderDTO</span><span class="o">.</span><span class="na">getCustomerFirstName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Customer Last Name: %s%n&#34;</span><span class="o">,</span> <span class="n">orderDTO</span><span class="o">.</span><span class="na">getCustomerLastName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Billing Address Street: %s%n&#34;</span><span class="o">,</span> <span class="n">orderDTO</span><span class="o">.</span><span class="na">getBillingAddressStreet</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Billing Address City: %s%n&#34;</span><span class="o">,</span> <span class="n">orderDTO</span><span class="o">.</span><span class="na">getBillingAddressCity</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Customer First Name: Francisco&#10;</span></span><span class="line"><span class="cl">Customer Last Name: Ibáñez&#10;</span></span><span class="line"><span class="cl">Billing Address Street: c\ Rue del Percebe, 13&#10;</span></span><span class="line"><span class="cl">Billing Address City: Madrid&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>El archivo de construcción <a href="https://gradle.org/">Gradle</a> contiene la dependencia de ModelMapper.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.modelmapper&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">java</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_11</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.modelmapper.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.3.0.RELEASE&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.modelmapper:modelmapper:2.3.7&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/ModelMapper">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://modelmapper.org/user-manual/jooq-integration/">ModelMapper jOOQ Integration</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/</id>
        <title>El patrón Open Session in View, qué es, ventajas, problemas y alternativas</title>
        <updated>2020-05-29T22:30:00+02:00</updated>
        <published>2020-05-29T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En patrón <em>Open Session in View</em> lo que hace es mantener abierta la conexión a la base de datos durante toda la petición a un servidor. Esto tiene la ventaja de que en cualquier momento es posible recuperar datos de la base de datos, incluso desde las vistas pero tiene inconvenientes ya que las conexiones a la base de datos son un recurso escaso. Si además durante la petición se hacen peticiones a otros servicios que añaden tiempo de procesamiento la aplicación es posible que tenga problemas de escalabilidad con muchos usuarios y peticiones durante un corto periodo de tiempo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La librería <a href="https://hibernate.org/">Hibernate</a> proporciona persistencia del modelo de objetos del lenguaje Java al modelo de las bases de datos relacionales de una forma sin que el programador necesite lanzar las consultas SQL directamente por lo general. Con Hibernate los objetos de las relaciones se cargan de los datos de las filas de la base de datos cuando son solicitadas si la relación es <em>lazy</em> o al obtener el objeto en el modo <em>eager</em>.</p>
<p>El modo <em>lazy</em> tiene la ventaja de que los datos de las relaciones solo se cargan si se necesitan pero tiene el inconveniente de producir más SQLs a la base de datos. El modelo <em>eager</em> carga los datos con menos SQLs pero carga más datos de los necesarios si no se necesitan.</p>
<p>Para que el modo <em>lazy</em> funcione se ha de mantener la conexión a la base de datos abierta para cargar los datos cuando se soliciten. Mantener la sesión y conexión de base de datos abierta es lo que define el patrón <em>Open Session in View</em>. Sin embargo, mantener la conexión abierta durante toda la petición incluida la parte de generación de la vista tiene inconvenientes, incluso llegando a considerar el patrón <em>Open Session in View</em> un antipatrón que no se de debe usar.</p>
<h3 id="qué-es-y-como-funciona">Qué es y como funciona</h3>
<p>En este diagrama se aprecia su funcionamiento. La primera acción en una petición es abrir una sesión para obtener datos de la base de datos, lo que se traduce en apropiarse de una conexión a la base de datos. El flujo del programa procesa la petición invocando la lógica de la aplicación y empleando los diferentes servicios en las diferentes capas formadas por el controlador, servicio y DAO para el acceso a la base de datos. El último paso es generar el resultado que es devuelto al cliente, puede ser contenido HTML o un resultado en formato JSON si es un servicio REST. En este punto se accede de nuevo a la base de datos para recuperar las relaciones <em>lazy</em> de los objetos que fueron devueltas por el servicio, esto es habitual en el caso de emplear un ORM como Hibernate o JPA.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/images/opensessioninview_hu8070966044dcdbac5e387caf6b7057f5_108570_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama del patrón open session in view"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/images/opensessioninview_hu8070966044dcdbac5e387caf6b7057f5_108570_650x450_fit_box_3.png" width="650" height="286" alt="Diagrama del patrón open session in view" title="Diagrama del patrón open session in view"  class="lozad "></a></p>
<figcaption>Diagrama del patrón open session in view <br>Fuente: vladmihalcea.com</figcaption>
</figure>
</div>
<h3 id="las-ventajas">Las ventajas</h3>
<p>Con el patrón <em>Open Session in View</em> durante toda la petición se mantiene la conexión a la base de datos abierta de modo que al solicitar las relaciones de una entidad las excepciones <a href="https://docs.jboss.org/hibernate/stable/core/javadocs/org/hibernate/LazyInitializationException.html">LazyInitializationException</a> de Hibernate no se producen en las relaciones cargadas en modo <em>lazy</em>. Sin mantener la conexión abierta todos los datos que se necesiten han de cargarse con antelación de lo contrario al acceder a las relaciones de un objeto provocará esa excepción <em>LazyInitializationException</em>. El modo <em>lazy</em> permite solicitar los datos según se necesiten sin necesidad de hacerlo con antelación.</p>
<p>En Spring hay una variable de configuración con la que se activa o desactiva un filtro que implement el patrón <em>Open Session in View</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">spring.jpa.open-in-view=false&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>SpringJpaOpenSessionInView.properties</span>
    </div>
</div>
<h3 id="los-problemas-por-que-se-considera-una-mala-práctica">Los problemas, por que se considera una mala práctica</h3>
<p>El patrón <em>Open Session in View</em> tiene varios problemas. Uno de ellos es que al mantener la sesión abierta durante toda la petición y permitir en todo momento acceso a la base de datos no se es consciente de las consultas que se lanzan más usando Hibernate que hace precisamente esto más fácil. El resultado es que hay que tener especial cuidado en no generar el problema 1+N donde se ejecuta una consulta para recuperar una lista de objetos y N para cargar una relación de cada uno de los objetos de la lista anteriores recuperados.</p>
<p>Estos problemas tienen solución en cierta medida con la anotación <a href="https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/annotations/BatchSize.html">@BatchSize</a> para recuperar listas de objetos en lotes y <a href="https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/annotations/FetchMode.html">FetchMode.SUBSELECT</a> para lanzar una consulta adicional que recupere los objetos de las relaciones. Su inconveniente es que es poco flexible ya que su uso con anotaciones afectan a todas las consultas.</p>
<p>El segundo problema es que la vista es capaz de generar consultas a la base de datos las cuales pueden producir excepciones y las vistas no suelen estar preparadas para manejar excepciones.</p>
<p>Además, las conexiones a la base de datos son un recurso escaso, más incluso que los <em>threads</em> de modo que mantener abierta la conexión durante más tiempo limita la escalabilidad de una aplicación.</p>
<p>Establecer las consultas en modo <a href="https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/jpamodelgen/xml/jaxb/FetchType.html">FetchType.EAGER</a> para recuperar las relaciones cuanto antes aún no conociendo si se usarán los datos no es una solución ya que tampoco puede cambiarse a nivel de consulta. Por estas razones las asociaciones suelen configurarse en modo <a href="https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/jpamodelgen/xml/jaxb/FetchType.html">FetchType.LAZY</a>.</p>
<h3 id="la-alternativa">La alternativa</h3>
<p>La alternativa al patrón <em>Open Session in View</em> es usar objetos DTO para proporcionar a la vista todos los datos que necesite sin que esta al usar esos datos lance consultas. Esto obliga al controlador del patrón modelo-vista-controlador o <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">MVC</a> a conocer y recuperar de antemano los datos que necesite la vista.</p>
<p>Hibernate es una gran librería por la funcionalidad que ofrece al abstraer el modelo relacional del modelo orientado a objetos del lenguaje relacionar, tanto que es capaz de lanzar las consultas adecuadas a la base de datos relacional tanto en la lectura como en la escritura según las operaciones realizadas en los objetos.</p>
<p>Por otro lado Hibernate en la correspondencia que hace entre el modelo relacional y las entidades de objetos se cargan todos los datos de la entidad aunque muchos no se necesiten en la vista, lo que lo hace algo ineficiente en el acceso de lectura a la base de datos.</p>
<p>En el modelo DTO usando la lógica que recupera los datos ha de estar sincronizada con la lógica de la vista. Por ejemplo, si un dato en la vista solo es necesario dada cierta condición esa misma condición ha de estar en el código que del la vista, o en la vista ser suficiente la presencia del dato para mostrarlo.</p>
<p>Cada vista necesitará unos datos específicos de modo que serán necesarias consultas específicas para recuperar cada uno de los datos. Para el acceso en modo lectura y recuperar algunas de las consultas en vez de usar Hibernate se puede usar la librería <a href="https://www.jooq.org/">jOOQ</a> que proporciona una API en el lenguaje Java para la construcciones de consultas con comprobación de tipos proporcionado por el compilador.</p>
<h3 id="conclusión">Conclusión</h3>
<p>En muchas aplicaciones usar el patrón <em>Open Session in View</em> con Hibernate no supone un gran problema y simplifica el código. Para aquellas aplicaciones que necesitan escalabilidad y soportar un gran número de usuarios concurrentes o hagan operaciones que impliquen operaciones de red se aconseja usar DTO en las vistas ya sean mapeando las entidades Hibernate recuperadas por el controlador a esos DTO con una librería específica para el propósito como <a href="http://modelmapper.org/">ModdelMapper</a> y recuperar únicamente los datos que necesita la vista usando librerías como jOOQ que ofrecen mayor control sobre las columnas de la base de datos datos recuperadas para reducir los datos recuperados de la base de datos a únicamente lo necesario.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/copiar-datos-de-un-tipo-de-objeto-a-otro-con-modelmapper/">Copiar datos de un tipo de objeto a otro con ModdelMapper</a></li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://stackoverflow.com/questions/1103363/why-is-hibernate-open-session-in-view-considered-a-bad-practice">Why is Hibernate Open Session in View considered a bad practice?</a></li>
<li><a href="https://blog.frankel.ch/the-opensessioninview-antipattern/">The OpenSessionInView antipattern</a></li>
<li><a href="https://vladmihalcea.com/the-open-session-in-view-anti-pattern/">The Open Session In View Anti-Pattern</a></li>
<li><a href="https://www.baeldung.com/spring-open-session-in-view">A Guide to Spring’s Open Session In View</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/</id>
        <title>El problema de seguridad tabnabbing y phishing en los enlaces en nuevas pestañas a páginas externas y cómo solucionarlo</title>
        <updated>2020-05-24T10:00:00+02:00</updated>
        <published>2020-05-24T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>A medida que las personas dependen en mayor medida para operar en internet como compras, acceso a cuentas bancarias o trámites administrativos la seguridad de las aplicaciones web es más crítica. Una parte de la seguridad es responsabilidad del usuario pero otra parte importante es responsabilidad del sitio web. Un potencial problema de seguridad está en los simples y aparentemente inocentes enlaces abiertos en nuevas páginas si al mismo tiempo es posible insertar contenido en la página que otros usuarios obtengan. El resultado es una vulnerabilidad de <em>tabnabbing</em> y <em>phishing</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>Es bueno conocer los problemas de seguridad más comunes en las aplicaciones web. Aún siendo la lista de <a href="https://owasp.org/www-project-top-ten/">los 10 problemas de seguridad más importantes</a> muy conocidos aún siguen siendo de los más importantes por seguir habiendo aplicaciones vulnerables a ellos y por su gravedad para la seguridad de los datos así como para explotar una aplicación.</p>
<p>Aún así no son los únicos importantes, algunos ni siquiera requieren complejas técnicas para explotarlos. Uno de ellos son los enlaces externos que se abren en páginas en blanco. El problema de seguridad reside en que el modo de funcionamiento por defecto de estos enlaces se permite el acceso a la ventana origen desde la página abierta. Esto hace que la página abierta potencialmente sea capaz de tomar el control de la ventana origen y modificar su contenido, por ejemplo cargando una página maliciosa para hacer un peligroso ataque de suplantación de identidad o <em>phishing</em> que simule una página legítima con la intención de robar las contraseñas de algún servicio importante de un usuario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="hl"><span class="lnt"> 8&#10;</span></span><span class="hl"><span class="lnt"> 9&#10;</span></span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Page<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line hl"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;external.html&#34;</span> <span class="na">target</span><span class="o">=</span><span class="s">&#34;_blank&#34;</span><span class="p">&gt;</span>Open page<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line hl"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;external.html&#34;</span> <span class="na">target</span><span class="o">=</span><span class="s">&#34;_blank&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;noopener noreferrer&#34;</span><span class="p">&gt;</span>Open page (secure)<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>page.html</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-1_hue72212653050e8e7191533ee0a6df7cd_19649_2560x1440_fit_box_3.png" data-gallery="" title="Página con enlaces a otras páginas abiertas en una nueva pestaña"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-1_hue72212653050e8e7191533ee0a6df7cd_19649_300x200_fit_box_3.png" width="261" height="200" alt="Página con enlaces a otras páginas abiertas en una nueva pestaña" title="Página con enlaces a otras páginas abiertas en una nueva pestaña"  class="lozad "></a></p>
<figcaption>Página con enlaces a otras páginas abiertas en una nueva pestaña</figcaption>
</figure>
</div>
<p>El problema es que los navegadores cuando se abre un enlace en una página en blanco o nueva, el navegador hace accesible a la ventana abierta el <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window">objeto Window</a> de la página que lo abre. Y teniendo acceso al objeto <em>Window</em> una página maliciosa cargada tiene la posibilidad de cargar una nueva página en la página original o acceder a las cookies entre ellas las que permiten mantener la sesión en el servidor. Por ejemplo, con la variable <em>window.location</em> es posible cargar una página de autenticación falsa que le pida al usuario introducir sus datos y realmente realice el robo de la contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="hl"><span class="lnt"> 7&#10;</span></span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Unknown<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line hl"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">window</span><span class="p">.</span><span class="nx">opener</span><span class="p">.</span><span class="nx">location</span> <span class="o">=</span> <span class="s1">&#39;https://www.google.com&#39;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;You have heen tabnabbed!&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>external.html</span>
    </div>
</div>
<p>Es un problema peligroso porque se aprovecha de los navegadores basados en pestañas, en este caso en una página fuera de la atención del usuario se carga un contenido nuevo, el usuario inadvertido al volver a esa pestaña puede pensar que el contenido cambiado de esa pestaña es legítimo sin ser consciente de que no lo es, sin embargo, ser víctima de este peligro de seguridad conocido como <a href="https://en.wikipedia.org/wiki/Tabnabbing">tabnabbing</a> combinado con <a href="https://es.wikipedia.org/wiki/Phishing">phishing</a>. Por ello se recomienda y es importante comprobar que el dominio de la página mostrado por el navegador en la barra de direcciones se corresponda con el contenido, que la página utilice un protocolo seguro no es suficiente si el ataque es de <em>phishing</em>.</p>
<p>Este ataque es realmente sencillo pero ha de complementarse con una forma de ataque <a href="https://es.wikipedia.org/wiki/Cross-site_scripting">XSS</a> no tanto por permitir insertar código JavaScript pero si por permitir insertar contenido inseguro sin control de forma que otros usuarios tangan posibilidad de abrirlos y ser potenciales victimas en este caso enlaces que abran una página maliciosa.</p>
<p>El enlace que abre una página en una nueva pestaña es vulnerable a <em>tabnabbing</em>. Al ir al enlace se abre una pestaña, el usuario pierde el foco de la página original y en ella la página abierta carga una nueva página produciéndose el <em>tabnabbing</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-2_hu22643fffb0ba0f7644311b38531b1ce2_19858_2560x1440_fit_box_3.png" data-gallery="" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-2_hu22643fffb0ba0f7644311b38531b1ce2_19858_300x200_fit_box_3.png" width="261" height="200" alt="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-3_hu560700057f11b8d116c6384704b49653_44735_2560x1440_fit_box_3.png" data-gallery="" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-3_hu560700057f11b8d116c6384704b49653_44735_300x200_fit_box_3.png" width="177" height="200" alt="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"  class="lozad "></a></p>
<figcaption>Problema de tabnabbing en enlaces que abren páginas en nueva pestaña</figcaption>
</figure>
</div>
<p>La solución más sencilla es añadir el atributo <em>rel=&ldquo;noopener noreferrer&rdquo;</em> a los enlaces que se abran en una nueva página, esto informa al navegador para que no proporcione a la página abierta el acceso a la variable <em>window.opener</em>, como se muestra en el segundo enlace del ejemplo de código <em>page.html</em>, si la página abierta hace uso de ella se produce un error de JavaScript.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-4_hu097818c1a0d12ef276d1e1742bc40f22_34321_2560x1440_fit_box_3.png" data-gallery="" title="La variable window.opener es nula en el enlace seguro"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-4_hu097818c1a0d12ef276d1e1742bc40f22_34321_300x200_fit_box_3.png" width="261" height="200" alt="La variable window.opener es nula en el enlace seguro" title="La variable window.opener es nula en el enlace seguro"  class="lozad "></a></p>
<figcaption>La variable window.opener es nula en el enlace seguro</figcaption>
</figure>
</div>
<p>Otras medidas recomendables son <a href="https://picodotdev.github.io/blog-bitix/2019/03/codificar-los-datos-para-evitar-ataques-xss-en-una-pagina-web/">codificar los datos para evitar ataques XSS</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">filtrar el contenido enviado por los usuarios o devuelto por la página</a> sobre todo si proviene de fuentes externas a la aplicación ya sea de formularios introducidos por el usuario, parámetros, cabeceras u otras aplicaciones.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/opener">window.opener</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/la-concurrencia-en-la-plataforma-java-con-project-loom/</id>
        <title>La concurrencia en la plataforma Java con Project Loom</title>
        <updated>2020-05-23T15:30:00+02:00</updated>
        <published>2020-05-22T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/la-concurrencia-en-la-plataforma-java-con-project-loom/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Desde la publicación de Java 8 junto con el nuevo calendario de publicación las mejoras en la plataforma Java y en el lenguaje han sido constantes y significativas. Las mejoras continúan en cada nueva versión y hay muchas otras en preparación para ser publicadas cuando estén listas. Una de ellas muy prometedoras es una nueva implementación de los <em>threads</em> mucho más ligera que han existido desde la primera versión. Estos harán innecesarios en la mayoría de los casos los más complicados modelos programación asíncrona, la programación reactiva, la programación mediante <em>callbacks</em> y las construcciones <em>async/await</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los <em>threads</em> han existido en Java desde la primera versión siendo uno de sus componentes esenciales. Los <em>threads</em> representan una unidad de trabajo concurrente como una abstracción de los recursos computacionales disponibles y que ocultan la complejidad de gestionar esos recursos.</p>
<p>Ya se usen de forma directa o dentro de un framework como JAX-RS la concurrencia en Java significan <em>threads</em>. En realidad, la plataforma Java entera, desde la máquina virtual al lenguaje y librerías incluidos depuradores y <em>profilers</em> está construida alrededor de los <em>threads</em> como componente esencial de ejecutar un programa.</p>
<p>En general la plataforma Java se basa en:</p>
<ul>
<li>Las APIs son síncronas y describen operaciones E/S de inicio y espera a sus resultados como una secuencia ordenada de sentencias por <em>threads</em> que se bloquean.</li>
<li>Las operaciones de memoria con efectos colaterales son ordenadas secuencialmente por las acciones del <em>thread</em>.</li>
<li>Las excepciones proporcionan información útil indicando la operación fallida en el contexto del <em>thread</em> actual.</li>
<li>Los depuradores siguen el orden de ejecución aunque se realice procesado de E/S.</li>
</ul>
<h3 id="los-problemas-de-los-threads-y-sus-alternativas">Los problemas de los threads y sus alternativas</h3>
<p>En la implementación de Linux los <em>threads</em> no se diferencian de los procesos. Los <em>threads</em> son costosos de crear y pesados aún empleando <em>pools</em> de <em>threads</em> por lo que el sistema operativo solo es capaz de mantener unos pocos miles activos. Esto afecta especialmente en las aplicaciones Java en el lado de servidor ya que para procesar cada petición se le asigna un <em>thread</em> de modo que el número de peticiones simultáneas se ve limitado por el número de <em>threads</em> que soporta el sistema operativo. En aplicaciones con un número elevado de usuarios y peticiones la escalabilidad se ve limitada.</p>
<p>Por este motivo ha surgido la programación asíncrona, la programación reactiva, la programación mediante <em>callbacks</em> y las construcciones <em>async/await</em> y frameworks basándose en estos principios como <a href="https://vertx.io/">Vert.x</a> o <a href="https://spring.io/reactive">Spring Reactive</a> o librerías como <a href="http://reactivex.io/">RxJava</a>. El resultado es una proliferación de APIs asíncronas desde NIO en el JDK a los <em>servlets</em> asíncronos a las librerías denominadas reactivas para no bloquear los <em>threads</em>. Sin embargo, estas formas de programación tienen un costo mayor que el tradicional y simple modelo secuencial. Son más difíciles de programar, más difíciles de mantener e implican cambios importantes en el modelo de programación. Por otro lado es más difícil depurarlos ya que no se mantiene en una única pila de llamadas toda la tarea.</p>
<p>Estos estilos de programación no han sido inventados porque sean más fáciles de entender, son más difíciles también de depurar y de hacer <em>profile</em>. Son muy intrusivos y hacen la integración con el código síncrono virtualmente imposible simplemente porque la implementación de los <em>threads</em> es simplemente inadecuada en Java tanto en carga del sistema como rendimiento. La programación asíncrona es contraria al modelo original diseñado en la programación de la plataforma Java en varios aspectos con un alto coste de mantenibilidad y observabilidad. Pero lo hacen por una buena razón, para conseguir la escalabilidad y el rendimiento haciendo buen uso de los costosos recursos hardware.</p>
<h3 id="la-nueva-implementación-de-los-threads">La nueva implementación de los threads</h3>
<p>El <a href="https://wiki.openjdk.java.net/display/loom">proyecto Loom</a> persigue crear unos <em>threads</em> que eliminen los costes de los hilos tradicionales del sistema operativo. Serán mucho más ligeros, con ellos Java será capaz de mantener varios órdenes de magnitud superior, millones de <em>threads</em> en vez de solo unos pocos miles. Estos <em>threads</em> virtuales o fibras de la plataforma Java son también simplemente <em>threads</em> pero que crearlos y bloquearlos es mucho más barato. Son gestionados por el entorno de ejecución de Java y no son una representación uno a uno de un envoltorio de los <em>threads</em> del sistema operativo, en vez de eso están implementados en el espacio de usuario del JDK.</p>
<p>Los hilos de los sistemas operativos son pesados porque deben soportar todos los lenguajes y tipo de cargas de forma genérica. Un <em>thread</em> requiere la habilidad de suspender y reactivar su ejecución de la computación. Esto requiere preservar su estado, lo que incluye su puntero de instrucciones así como todo los datos locales de computación que son almacenados en la pila. Dado que el sistema operativo no conoce cómo implementa el lenguaje su pila debe reservar una suficientemente grande.</p>
<p>Loom añade la habilidad de controlar la ejecución, suspensión y reactivación manteniendo su estado no como un recurso del sistema operativo sino como un objeto Java conocido por la máquina virtual bajo el control directo del entorno de ejecución. El conocimiento de las estructuras internas del lenguaje hace que mantener su estado sea más pequeño en comparación con el que mantiene el sistema operativo. Cuando un <em>thread</em> invoca una operación bloqueante se traspasa el control a otro <em>thread</em> con un coste mucho menor que el realizado por el sistema operativo.</p>
<p>El proyecto Loom modificará muchas de las clases de forma interna para implementar los <em>threads</em> con los <em>thread</em> virtuales. Las librerías y aplicaciones que hagan uso de estas clases se beneficiarán de estas mejoras sin necesidad de realizar ninguna modificación.</p>
<p>Estos párrafos son varios extractos del magnífico artículo <a href="http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html">State of Loom</a>.</p>
<blockquote>
<p>Programmers are forced to choose between modeling a unit of domain concurrency directly as a thread and wasting considerable throughput that their hardware can support, or using other ways to implement concurrency on a very fine-grained level but relinquishing the strengths of the Java platform. Both choices have a considerable financial cost, either in hardware or in development and maintenance effort.</p>
</blockquote>
<blockquote>
<p>We can do better.</p>
</blockquote>
<blockquote>
<p>Project Loom intends to eliminate the frustrating tradeoff between efficiently running concurrent programs and efficiently writing, maintaining and observing them. It leans into the strengths of the platform rather than fight them, and also into the strengths of the efficient components of asynchronous programming. It lets you write programs in a familiar style, using familiar APIs, and in harmony with the platform and its tools — but also with the hardware — to reach a balance of write-time and runtime costs that, we hope, will be widely appealing. It does so without changing the language, and with only minor changes to the core library APIs. A simple, synchronous web server will be able to handle many more requests without requiring more hardware.</p>
</blockquote>
<blockquote>
<p>Whereas the OS can support up to a few thousand active threads, the Java runtime can support millions of virtual threads. Every unit of concurrency in the application domain can be represented by its own thread, making programming concurrent applications easier. Forget about thread-pools, just spawn a new thread, one per task. You’ve already spawned a new virtual thread to handle an incoming HTTP request, but now, in the course of handling the request, you want to simultaneously query a database and issue outgoing requests to three other services? No problem — spawn more threads. You need to wait for something to happen without wasting precious resources? Forget about callbacks or reactive stream chaining — just block. Write straightforward, boring code. All the benefits threads give us — control flow, exception context, debugging flow, profiling organization — are preserved by virtual threads; only the runtime cost in footprint and performance is gone. There is no loss in flexibility compared to asynchronous programming because, as we’ll see, we have not ceded fine-grained control over scheduling.</p>
</blockquote>
<blockquote>
<p>However, the existence of threads that are so lightweight compared to the threads we’re used to does require some mental adjustment. First, we no longer need to avoid blocking, because blocking a (virtual) thread is not costly. We can use all the familiar synchronous APIs without paying a high price in throughput. Second, creating these threads is cheap. Every task, within reason, can have its own thread entirely to itself; there is never a need to pool them. If we don’t pool them, how do we limit concurrent access to some service? Instead of breaking the task down and running the service-call subtask in a separate, constrained pool, we just let the entire task run start-to-finish, in its own thread, and use a semaphore in the service-call code to limit concurrency — this is how it should be done.</p>
</blockquote>
<blockquote>
<p>Using virtual threads well does not require learning new concepts so much as it demands we unlearn old habits developed over the years to cope with the high cost of threads and that we’ve come to automatically associate with threads merely because we’ve only had the one implementation.</p>
</blockquote>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/lIq-x_iI-kc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="la-api-de-threads">La API de threads</h3>
<p>La forma de programación con los nuevos <em>threads</em> es muy parecida a la tradicional que ha existido siempre. Se parece tanto a los <em>threads</em> de siempre que incluso ni siquiera cambia la clase que los representa, que sigue siendo <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html">Thread</a>, las diferencias de implementación son internas a la clase y en la JVM. En estos ejemplos se ejecutan tareas de dos formas diferentes y en la tercera se envían tareas para su ejecución  y posteriormente se espera a obtener el resultado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Thread</span> <span class="n">thread</span> <span class="o">=</span> <span class="n">Thread</span><span class="o">.</span><span class="na">startVirtualThread</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">thread</span><span class="o">.</span><span class="na">join</span><span class="o">();</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>threads-api-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Thread</span> <span class="n">thread1</span> <span class="o">=</span> <span class="n">Thread</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">virtual</span><span class="o">().</span><span class="na">task</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello&#34;</span><span class="o">)).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Thread</span> <span class="n">thread2</span> <span class="o">=</span> <span class="n">Thread</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">.</span><span class="na">virtual</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;bob&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">.</span><span class="na">task</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;I&#39;m Bob!&#34;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">.</span><span class="na">start</span><span class="o">();</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>threads-api-2.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">ThreadFactory</span> <span class="n">tf</span> <span class="o">=</span> <span class="n">Thread</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">virtual</span><span class="o">().</span><span class="na">factory</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">ExecutorService</span> <span class="n">e</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newUnboundedExecutor</span><span class="o">(</span><span class="n">tf</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Future</span><span class="o">&lt;</span><span class="n">Result</span><span class="o">&gt;</span> <span class="n">f</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">submit</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="o">...</span> <span class="k">return</span> <span class="n">result</span><span class="o">;</span> <span class="o">});</span> <span class="c1">// spawns a new virtual thread&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Result</span> <span class="n">y</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="na">get</span><span class="o">();</span> <span class="c1">// joins the virtual thread&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>threads-api-3.java</span>
    </div>
</div>
<h3 id="conclusión">Conclusión</h3>
<p>Esta nueva implementación de los <em>threads</em> es una mejora significativa sobre la implementación original basada en el sistema operativo. Una vez esté disponible en una versión del JDK muchas aplicaciones se beneficiarán de forma transparente de sus mejoras simplemente por usar un JDK más reciente. Como es principio en la plataforma Java estos cambios están implementados de forma que sean compatibles hacia atrás para que no haya que realizar ningún cambio o muy pocos en las aplicaciones o librerías para beneficiarse de ellos.</p>
<p>El modelo secuencial de los <em>threads</em> más simple que la programación reactiva, asíncrona, <em>callbacks</em> o las construcciones <em>async/await</em> tiene ventajas en la creación del software en su mantenibilidad, legibilidad y es beneficioso desde el punto de vista económico. Todas estas construcciones van a verse afectadas por la nueva implementación de <em>threads</em> de Loom, las primeras versiones como anticipo están planificadas para Java 15.</p>
<p>Loom es un nuevo ejemplo de que Java no adopta las nuevas tendencias de forma inmediata sino que espera a ver como se desarrollan, y después de evaluar todas las posibilidades opta por una que en este caso es mejor que la programación reactiva o asíncrona que otros lenguajes para permitirlas han tenido que realizar modificaciones comprometiendo la compatibilidad en el futuro del código fuente o desaconsejando el uso de funcionalidades para eliminarlas en el futuro. Esto mismo lo mencionaba en <a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones para seguir usando Java</a>.</p>
<p>Este artículo es simplemente un resumen de otros dos magníficos artículos <em>State of Loom</em> que explica todo esto en mayor profundidad. Muy recomendables su lectura junto a otros relacionados con Loom.</p>
<ul>
<li><a href="http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html">State of Loom: Parte 1</a></li>
<li><a href="http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part2.html">State of Loom: Parte 2</a></li>
<li><a href="https://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html">Project Loom: Fibers and Continuations for the Java Virtual Machine</a></li>
</ul>
<p>Y otros artículos sobre Loom.</p>
<ul>
<li><a href="https://developers.redhat.com/blog/2019/06/19/project-loom-lightweight-java-threads/">Project Loom: Lightweight Java threads</a></li>
<li><a href="https://blog.softwaremill.com/will-project-loom-obliterate-java-futures-fb1a28508232">Will Project Loom obliterate Java Futures?</a></li>
<li><a href="https://dzone.com/articles/a-new-java-with-a-stronger-fiber">Project Loom: Java With a Stronger Fiber</a></li>
<li><a href="https://blog.frankel.ch/project-loom-reactive-coroutines/">On Project Loom, the Reactive model and coroutines</a></li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.informit.com/articles/article.aspx?p=370047&amp;seqNum=3">The Linux Implementation of Threads</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/</id>
        <title>La controversia sobre el sistema de inicio systemd adoptado en GNU/Linux</title>
        <updated>2020-05-17T12:00:00+02:00</updated>
        <published>2020-05-17T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>systemd ya tiene una década de desarrollo, ha sido adoptado como sistema de inicio en las distribuciones GNU/Linux más importantes como Debian, Ubuntu, Fedora o Arch Linux y derivadas. Durante este tiempo ha recibido múltiples críticas en varios aspectos. Sigue evolucionando cambiando aspectos importantes de cómo han sido siempre las distribuciones, uno de los próximos es posible que sea <em>systemd-homed</em> con la intención de hacer portables y autocontenidos las carpetas de inicio de los usuarios.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/systemd.svg" width="300" height="66" alt="systemd" title="systemd"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>El sistema de inicio y control de procesos <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a> creado por <a href="https://en.wikipedia.org/wiki/Lennart_Poettering">Lennart Poettering</a> ha reemplazado en la mayoría de distribuciones <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> al más antiguo sistema <a href="https://savannah.nongnu.org/projects/sysvinit">SysVinit</a>. A systemd se le ha criticado en varios aspectos incluso algunas personas llegando a crear <em>forks</em> de distribuciones con el principio de no usar systemd.</p>
<p>Poettering escribió un artículo respondiendo a <a href="http://0pointer.de/blog/projects/the-biggest-myths">30 de los mayores mitos sobre systemd</a>. También hay opiniones contrarias a systemd, otra persona respondía con <a href="http://judecnelson.blogspot.com/2014/09/systemd-biggest-fallacies.html">13 de las mayores falacias acerca de systemd</a>. Aún con las <a href="#ZgotmplZ">críticas en su recepción</a> que se ha hecho a systemd es admirable la fuerza de voluntad y determinación de Lennart Poettering que un día se propuso hacer un sistema de inicio que sea usado en toda la base de distribuciones de Linux, es capaz de sobreponerse a no hacerlo y un día proporciona ese sistema de inicio que funciona siendo adoptado en la mayoría de distribuciones Linux.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/images/systemd-components.svg" data-gallery="" title="Componentes de systemd"><img src="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/images/systemd-components.svg" width="300" height="200" alt="Componentes de systemd" title="Componentes de systemd"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/images/linux-kernel-unified-hierarchy-cgroups-and-systemd.svg" data-gallery="" title="Jerarquía unificada del kernel Linux, cgroups y systemd"><img src="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/images/linux-kernel-unified-hierarchy-cgroups-and-systemd.svg" width="300" height="200" alt="Jerarquía unificada del kernel Linux, cgroups y systemd" title="Jerarquía unificada del kernel Linux, cgroups y systemd"  class="lozad "></a></p>
<figcaption>Componentes de systemd y jerarquía unificada del kernel Linux, cgroups y systemd</figcaption>
</figure>
</div>
<p>En un <a href="https://www.reddit.com/r/archlinux/comments/4lzxs3/why_did_archlinux_embrace_systemd/">comentario de reddit</a> el mantenedor de los <em>script</em> init para <a href="https://www.archlinux.org/">Arch Linux</a> compartía varios puntos en los que systemd es mucho mejor que los <em>scripts</em> init. Hay que tener en cuenta que los sistemas modernos actuales son más complejos, dinámicos y asíncronos que lo eran en la época que se creó SysVinit. No es posible determinar cuando una pieza de hardware estará disponible por ejemplo con los medios extraíbles. Durante bastante tiempo, esto ha sido resuelto lanzando eventos y esperando a <em>udev</em>. Esto toma mucho tiempo sin haber garantía que todo el hardware está disponible. Hacer esto con <em>scripts</em> de shell puede ser muy complejo, lento y propenso a errores. Hay que reintentar todo tipos de operaciones en un bucle hasta tener éxito. La solución es un sistema que realice acciones basado en eventos, esta es una de las más importantes características de systemd.</p>
<p>Estos eran varios de los problemas de los <em>scripts init</em>:</p>
<ul>
<li>Los <em>scripts init</em> son estúpidos. En su primera fase son una serie de pasos estáticos que son ejecutados en cada inicio sin casi posibilidad de ajustar el comportamiento. En su segunda fase los demonios son iniciados en orden lo que significa que cada <em>script init</em> es llamado en serie uno detrás de otro.</li>
<li>Las complejas tareas en los <em>scripts</em> <em>shell</em> requieren lanzar muchos programas externos de ayuda. Esto hace las cosas lentas. systemd trata la mayoría de estas tareas en código C o mediante las librerías correctas. No llama a muchos programas externos para realizar sus tareas.</li>
<li>El proceso de inicio completo está serializado lo que también lo hace muy lento. systemd puede paralelizarlo y lo hace bastante bien.</li>
<li>No hay indicación de cuándo un cierto demonio ha sido iniciado. Cada <em>script init</em> tiene que implementar algún tipo de manejo de archivos PID o similar. La mayoría de los <em>scripts</em> init no lo hacían. systemd tiene una solución totalmente confiable basada en los <em>cgroups</em> de Linux.</li>
<li>Eran posibles condiciones de carrera entre demonios iniciados con reglas <em>udev</em>, activación de <em>dbus</em> y configuraciones manuales. Puede ocurrir que un demonio sea iniciado múltiples veces incluso simultáneamente, lo que ocasiona resultados inesperados (esto era un problema real con <em>bluez</em>). systemd proporciona una única instancia donde todos los demonios son manejados. Ahora ni <em>udev</em> ni <em>dbus</em> inician demonios, ahora le dicen a systemd que necesitan un demonio específico y systemd se preocupa de ello.</li>
<li>Falta de configurabilidad. Era imposible cambiar el comportamiento de los <em>scripts init</em> de una forma que sobreviviese a las actualizaciones del sistema. systemd proporciona buenos mecanismos con redefiniciones específicas para la máquina, elementos que estén presentes y ocultamiento.</li>
<li>Mantenimiento costoso. Adicionalmente a los problemas de diseño mencionados los <em>scripts init</em> también tenían un largo número de errores. Corregir esos errores era siempre complicado y tomaba tiempo que no siempre se disponían mantenedores. Delegar esta tarea a una comunidad más grande, en este caso a la comunidad de systemd, ha hecho las cosas mucho más fáciles para los mantenedores.</li>
</ul>
<p>Aunque algunos de estos problemas pueden ser resueltos con algo de trabajo y algunos han sido resueltos por otros sistemas de inicio basados en SysV no hay ningún sistema que haya resuelto todos estos problemas y lo haya hecho de una manera confiable como lo ha hecho systemd. Lo que la mayoría de las críticas consideran <em>bloat</em> el mantenedor de Arch los considera una complejidad necesaria para resolver problemas complejos de una manera genérica. Se puede decir lo que se quiera de Poettering pero él se ha dado cuenta de cuáles eran los problemas del sistema de inicio y ha proporcionado una solución que funciona.</p>
<p>Las críticas que se le hace a systemd son:</p>
<ul>
<li>Viola la filosofía de UNIX. La filosofía de UNIX es que cada programa debe tener un propósito específico, si es necesario crear varios programas uno por cada propósito. Se dice que systemd es un único binario que viola la filosofía UNIX, la realidad es que systemd se compone de múltiples binarios, pero están separados y modularizados. En su uso dependen unos de otros, no pueden usarse sin los otros y esta es la violación a la filosofía UNIX y por la que en este aspecto no se los considera modulares.</li>
<li>Está sobrecargado (<em>bloated</em>) y es monolítico. De nuevo systemd está compuesto de múltiples binarios no es un un único binario.</li>
<li>Tiene errores. Como todo software, en el caso de un sistema de inicio por su criticidad son más notables. Cualquier otro sistema de inicio no estaría exento de errores. Tiene manejo de errores que en vez de fallar y tumbar el sistema deja el sistema en un punto que al menos se puede reiniciar.</li>
<li>No es portable. systemd es específico de Linux ya que usa varias funcionalidades que no están presentes en otros sistemas, una de ellas <em>cgroups</em> para el manejo de procesos. Esto aísla al resto de plataformas como la familia de sistemas operativos BSD que no tiene esas funcionalidades pero al mismo tiempo esas plataformas son libres de usar el sistema de inicio que deseen.</li>
</ul>
<p>Algunas distribuciones no usan systemd o es opcional, dos notables son <a href="https://www.gentoo.org/">Gentoo</a> y <a href="https://www.alpinelinux.org/">Alpine Linux</a> que usan <a href="https://en.wikipedia.org/wiki/OpenRC">OpenRC</a>. Otras alternativas son <a href="http://smarden.org/runit/">runit</a>, <a href="https://oldwiki.archive.openwrt.org/doc/techref/procd">procd</a> y <a href="http://supervisord.org/">supervisor</a>. La distribución <a href="https://devuan.org/">Devuan</a> que surgió como propósito principal no usar systemd abandera las distribuciones que no lo usan. En la wiki de Gentoo hay una <a href="https://wiki.gentoo.org/wiki/Comparison_of_init_systems">comparación entre los diferentes sistemas de inicio</a>.</p>
<p>De esa comparación destaco dos cosas de systemd:</p>
<ul>
<li>Los archivos de configuración de los servicios son proporcionados preferiblemente por los desarrolladores de los servicios y no los mantenedores de cada distribución, liberando a los mantenedores de esas tareas y haciendo que las mejoras en un servicio no sea exclusivo de una distribución sino que todas se beneficien de él.</li>
<li>El formato de los archivos de configuración de los servicios es descriptivo, no codificado en un lenguaje de programación con un <em>script bash</em>.</li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/o_AIw9bGogo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://blog.erratasec.com/2015/08/about-systemd-controversy.html">About the systemd controversy&hellip;</a></li>
<li><a href="https://www.reddit.com/r/linuxmasterrace/comments/616wxo/what_is_with_all_the_controversy_with_systemd/">What is with all the controversy with systemd?</a></li>
<li><a href="https://www.reddit.com/r/linux/comments/3u2ahq/whats_wrong_with_systemd/">What&rsquo;s wrong with systemd?</a></li>
<li><a href="https://www.reddit.com/r/linux/comments/5n069y/why_do_people_not_like_systemd/">Why do people not like Systemd?</a></li>
<li><a href="https://www.reddit.com/r/linux/comments/50mpzv/eli5_systemd_advantages_and_disadvantages/">ELI5: systemd - Advantages and disadvantages</a></li>
<li><a href="https://www.reddit.com/r/linux/comments/4n3t6s/eli5_whats_the_big_issue_with_systemd/">ELI5: What&rsquo;s the big issue with Systemd?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/</id>
        <title>Introducción y uso básico de la distribución GNU/Linux Fedora Silverblue</title>
        <updated>2020-05-15T18:45:00+02:00</updated>
        <published>2020-05-15T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Fedora Silbervlue es una distribución innovadora es su forma de sistema base usando OSTree e instalar aplicaciones gráficas con Flatpak y de paquetes de linea de comandos con Toolbox. Todas estas tecnologías le permiten considerarse una distribución <em>rolling-release</em> tanto en el sistema como aplicaciones y paquetes. Estas tecnologías y forma de actualizar el sistema hace que sea mucho menos propenso a errores que los tradicionales en las distribuciones GNU/Linux de actualización de paquetes, ¿la siguiente generación de distribuciones serán como Fedora Silverblue?.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/fedora.svg" width="200" height="200" alt="Fedora" title="Fedora"  class=""></p>
</div>
<p>Distribuciones <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> hay muchas con diferencias en algunos aspectos, el más cercano al usuario es entorno de escritorio entre los más populares <a href="https://www.gnome.org/">GNOME</a>, <a href="https://www.kde.org/">KDE</a>, <a href="https://xfce.org/">XFCE</a>, <a href="https://mate-desktop.org/">MATE</a> o <a href="https://cinnamon-spices.linuxmint.com/">Cinnamon</a> entre otros pero hay otros aspectos relevantes entre ellos el gestor de paquetes que utiliza, el modelo de actualización, en que otra distribución está basada, cual es su periodo de publicación de nuevas versiones, su popularidad, tiempo de vida o si está respaldada por una empresa.</p>
<p>A pesar de estas diferencias la mayoría de las distribuciones para los usuarios son parecidas en muchos aspectos. Tradicionalmente cada distribución tiene su repositorio de paquetes y su comando gestor de paquetes con el que es posible instalar y desinstalar paquetes. La mayoría usa <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a> como sistema de inicio para controlar los procesos y servicios. El entorno de escritorio GNOME o KDE es el mismo en cada distribución si no se tiene en cuenta que las versiones puedan ser diferentes.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/">Elegir una distribución GNU/Linux según el usuario, uso o equipo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/">Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero</a></li>
</ul>
<p>Las distribuciones GNU/Linux han cambiado en algunos aspectos importantes como la sustitución del sistema de inicio de SysV a systemd o cambiado el servidor gráfico <a href="https://www.x.org/wiki/">Xorg</a> por <a href="https://es.wikipedia.org/wiki/Wayland_%28protocolo%29">Wayland</a> y van a hacerlo más en el futuro con el nuevo sistema para crear VPNs con <a href="https://www.wireguard.com/">WireGuard</a> o el sistema multimedia para sonido y vídeo <a href="https://pipewire.org/">PipeWire</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/sobre-el-futuro-de-las-distribuciones-gnu-linux-y-los-sistemas-operativos/">Sobre el futuro de las distribuciones GNU/Linux y los sistemas operativos</a></li>
</ul>
<p>En mi caso utilizo <a href="https://www.archlinux.org/">Arch Linux</a> desde hace ya casi una década y estoy contento con ella. Los motivos que tengo para preferir esta distribución son su modelo de actualizaciones <em>rolling-release</em> en el que cada actualización todos los paquetes se actualizan a la última versión, su gestor de paquetes <em>pacman</em> que es muy rápido, los paquetes tiene pocas modificaciones realizadas por los mantenedores, es altamente personalizable y también no menos importante casi como todo lo anterior su <a href="https://wiki.archlinux.org/">documentación wiki</a> con información muy útil para cualquier usuario de GNU/Linux.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a></li>
</ul>
<p>Arch Linux es una de las distribuciones más populares pero no proporciona ningún asistente automatizado de instalación sino que después de arrancar el medio de inicio hay que introducir los comandos manualmente uno a uno hasta completar la instalación. Esto la hace difícil para los usuarios recién llegados a GNU/Linux o para los usuarios que no desean invertir tiempo en conocer cómo instalarla. También incluso para los usuarios expertos es que ya conocen como instalarla pero que el hecho de hacerlo manualmente es un tiempo que a veces no se dispone además de repetitivo.</p>
<p>Por esos motivos creé un <em>script</em> de instalación de Arch Linux completamente automatizado y desatendido con cierto grado de personalización en las opciones más comunes, es un simple <em>script</em> bash con todos los comandos que componen el proceso de instalación y que simplemente revisarlo sirve como documentación que además si se desea se puede ejecutar.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/script-para-instalar-arch-linux-facil-rapido-desatendido-automatizado-y-personalizable/">Script para instalar Arch Linux fácil, rápido, desatendido, automatizado y personalizable</a></li>
</ul>
<p>Pero a pesar de todo Arch Linux se basa en los principios básicos de los que hasta hoy han estado basadas las distribuciones. Gestor de paquetes, repositorio de paquetes y actualizaciones frágiles. Es muy posible que las distribuciones cambien tal y como las hemos conocido hasta ahora, ya se está produciendo cambios con Flatpak como sistema de instalar aplicaciones independientemente de la distribución y mantenidos por los propios desarrolladores del software y no los mantenedores de la distribución.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/">Flatpak, distribución e instalación de programas de escritorio en las distribuciones GNU/Linux</a></li>
</ul>
<p>Una distribución que se basa en principios diferentes que pueden ser el futuro próximo es <a href="https://silverblue.fedoraproject.org/">Fedora Silverblue</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-neofetch_hud186b43fb0137434e1f5afde35eafa67_474181_2560x1440_fit_box_3.png" data-gallery="" title="Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-neofetch_hud186b43fb0137434e1f5afde35eafa67_474181_650x450_fit_box_3.png" width="600" height="450" alt="Fedora Silverblue" title="Fedora Silverblue"  class="lozad "></a></p>
<figcaption>Fedora Silverblue</figcaption>
</figure>
</div>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="la-distribución-fedora-silverblue">La distribución Fedora Silverblue</h3>
<p>Una de las mayores fuentes de problemas de las distribuciones y de los sistemas operativos son las actualizaciones que por los cambios que introducen con nuevas versiones del software en ocasiones hace que algunas partes dejen de funcionar. Son solucionables desactualizando un paquete o en los casos más graves hace que el sistema ni siquiera se inicie correctamente llegando incluso a tener que reinstalar el sistema o peor aún provocando pédida de datos.</p>
<p>Otro problema es que algunas distribuciones tienen como principio la estabilidad del software y dado que las nuevas versiones de los programas son una fuente de inestabilidades optan por únicamente proporciona actualizaciones para errores de seguridad. Esto proporciona una mayor estabilidad pero hace que los programas no estén actualizados a las últimas versiones con lo que no se benefician de mejoras en nuevas características, mejoras de soporte de hardware, de rendimiento o incluso de seguridad.</p>
<p>Fedora Silverblue adopta varios principios para solucionar esos problemas. Uno es utilizar una base inmutable igual para todos los sistemas en los que se instala de modo que no haya diferencias ni errores por variaciones en el software del sistema. Es posible volver a una versión anterior en caso de algún error de modo que el sistema nunca quede completamente roto. Las aplicaciones de usuario y paquetes se instalan independientemente del sistema base inmutable lo que hace que no afecten a la estabilidad del sistema.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-1_hu72b6fce4c71a639827cbef2d8e03b154_14969_2560x1440_fit_box_3.png" data-gallery="" title="Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-1_hu72b6fce4c71a639827cbef2d8e03b154_14969_200x150_fit_box_3.png" width="200" height="150" alt="Fedora Silverblue" title="Fedora Silverblue"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-2_huea521b43aff143b25ef551af5ca835c7_17177_2560x1440_fit_box_3.png" data-gallery="" title="Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-2_huea521b43aff143b25ef551af5ca835c7_17177_200x150_fit_box_3.png" width="200" height="150" alt="Fedora Silverblue" title="Fedora Silverblue"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-3_hub50f3f6eaa1f534f859628a31c6b8383_18303_2560x1440_fit_box_3.png" data-gallery="" title="Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/fedora-silverblue-3_hub50f3f6eaa1f534f859628a31c6b8383_18303_200x150_fit_box_3.png" width="200" height="150" alt="Fedora Silverblue" title="Fedora Silverblue"  class="lozad "></a></p>
<figcaption>Fedora Silverblue</figcaption>
</figure>
</div>
<p>Las tecnologías que permiten adoptar esos principios a Fedora Silverblue son <a href="https://en.wikipedia.org/wiki/OSTree">OSTree</a> para el sistema base inmutable, <a href="https://flatpak.org/">Flatpak</a> para las aplicaciones de usuario gráficas y <a href="#ZgotmplZ">Toolbox</a> para instalar software de línea de comandos en contenedores.</p>
<p>OSTree es un proyecto que combina un modelo parecido a git para establecer y descargar árboles de sistemas de archivos de arranque, junto con una capa para disponerlos y gestionarlos con la configuración de arranque. OSTree es usado por <em>rmp-ostree</em>, un sistema híbrido de paquete e imágenes que usa Silverblue. Replica de forma atómica un sistema operativo base que permite al usuario añadir capas de paquetes RPM tradicionales encima del sistema base si se necesita.</p>
<ul>
<li><a href="https://fedoramagazine.org/what-is-silverblue/">What is Silverblue?</a></li>
<li><a href="https://www.redhat.com/sysadmin/beginners-guide-silverblue">A beginner&rsquo;s guide to Silverblue</a></li>
<li><a href="https://docs.fedoraproject.org/en-US/fedora-silverblue/getting-started/">Getting Started</a></li>
<li><a href="https://docs.fedoraproject.org/en-US/fedora-silverblue/updates-upgrades-rollbacks/">Updates, Upgrades &amp; Rollbacks</a></li>
<li><a href="https://docs.fedoraproject.org/en-US/fedora-silverblue/toolbox/">Toolbox</a></li>
<li><a href="https://docs.fedoraproject.org/en-US/fedora-silverblue/faq/">Frequently Asked Questions (FAQ)</a></li>
</ul>
<h4 id="instalación">Instalación</h4>
<p>La instalación se realiza con un asistente gráfico después de haber descargado el medio de instalación y haberlo grabado en una memoria USB para iniciar el sistema con él. Es necesario poco más que seleccionar la distribución del teclado, el particionado y la clave del superusuario <em>root</em> para realizar la instalación.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-1_hu334118f14b6e47b10a2e003459f42d7c_147125_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-1_hu334118f14b6e47b10a2e003459f42d7c_147125_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-2_hu35bf1221fb365956ef4b431d10f715fa_99605_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-2_hu35bf1221fb365956ef4b431d10f715fa_99605_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-3_hu5fee3273784ebdfde1a9c9b61c11b003_84361_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-3_hu5fee3273784ebdfde1a9c9b61c11b003_84361_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-4_hua02e537250462088a5e510c6ce9af1a4_93165_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-4_hua02e537250462088a5e510c6ce9af1a4_93165_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-5_hu35bf1221fb365956ef4b431d10f715fa_96380_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-5_hu35bf1221fb365956ef4b431d10f715fa_96380_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-6_huc60c7c13f3bd73bf583578f415369a32_74969_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-6_huc60c7c13f3bd73bf583578f415369a32_74969_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-7_hu967f46395a811c27d46170abde26d672_76282_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de Fedora Silverblue"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/installation-7_hu967f46395a811c27d46170abde26d672_76282_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de Fedora Silverblue" title="Instalación de Fedora Silverblue"  class="lozad "></a></p>
<figcaption>Instalación de Fedora Silverblue</figcaption>
</figure>
</div>
<h4 id="primer-inicio">Primer inicio</h4>
<p>Al iniciar el sistema por primera vez un nuevo asistente permite crear la cuenta de usuario compuesto de nombre y contraseña con la que iniciar sesión en el sistema.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-1_hufca710f075c9f7238a8aec34a4720969_11522_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-1_hufca710f075c9f7238a8aec34a4720969_11522_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-2_hu8e79a4e9bb7b77aaa5efa79b41f17f33_29958_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-2_hu8e79a4e9bb7b77aaa5efa79b41f17f33_29958_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-3_huc54e35830ec0ee283d1a571c628d26e7_30222_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-3_huc54e35830ec0ee283d1a571c628d26e7_30222_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-4_hub255390288bb13793bb03f4c879f5210_30268_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-4_hub255390288bb13793bb03f4c879f5210_30268_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-5_huc81907f85ce1d4df01982d3e2eb2740b_31406_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-5_huc81907f85ce1d4df01982d3e2eb2740b_31406_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-6_hu982b3ce94073359abd88d0a20c777723_22194_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-6_hu982b3ce94073359abd88d0a20c777723_22194_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-7_huf8d44d8d8228bbbab54a52756693d33b_22369_2560x1440_fit_box_3.png" data-gallery="" title="Primer inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/initial-setup-7_huf8d44d8d8228bbbab54a52756693d33b_22369_200x150_fit_box_3.png" width="200" height="150" alt="Primer inicio" title="Primer inicio"  class="lozad "></a></p>
<figcaption>Primer inicio</figcaption>
</figure>
</div>
<p>Al usar GNOME como entorno de escritorio no se diferencia a cualquier otro sistema con GNOME. La mayor diferencia está en que las aplicaciones preinstaladas son muy pocas, reduciéndose a las básicas como el navegador <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a>, la terminal, el explorador de archivos y editor de texto. Este permite al usuario tener instaladas únicamente las aplicaciones que desee o no tener que desinstalar las aplicaciones que no desea. Las aplicaciones que se deseen se deben instalar con Flatpak.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-aplicaciones-integradas-del-entorno-de-escritorio-gnome/">Las aplicaciones integradas del entorno de escritorio GNOME</a></li>
</ul>
<h4 id="administración-del-sistema-actualización">Administración del sistema, actualización</h4>
<p>El software que compone el sistema base se puede actualizar, los siguientes comandos permiten conocer cuales son las actualizaciones disponibles. Las actualizaciones están integradas con el programa Software de GNOME que muestra notificaciones cuando hay alguna actualización disponible.</p>
<p>Pero también puede realizarse desde la línea de comandos. El siguiente comando realiza la operación de actualización.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rpm-ostree upgrade&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rpm-ostree-upgrade.sh</span>
    </div>
</div>
<p>Para simplemente comprobar que actualizaciones hay disponibles sin instalarlas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rmp-ostree status&#10;</span></span><span class="line"><span class="cl">$ rpm-ostree upgrade --check&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rpm-ostree-status.sh</span>
    </div>
</div>
<p>Para actualizar entre versiones mayores, de la 32 a posteriores, de Fedora Silverblue se utilizan los siguientes comandos en los que cambiará el número de la versión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ostree remote list&#10;</span></span><span class="line"><span class="cl">$ sudo ostree remote gpg-import fedora -k /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-32-primary&#10;</span></span><span class="line"><span class="cl">$ rpm-ostree rebase fedora:fedora/32/x86_64/silverblue</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rpm-ostree-rebase.sh</span>
    </div>
</div>
<p>La mayoría del software de usuario se instala con Flatpak y Toolbox siendo la forma recomendada de hacerlo. Sin embargo, algunos programas ha de instalarse modificando la instalación de Silverblue utilizando <em>package layering</em>, como un intérprete de comandos distinto a bash. La mayoría de paquetes RMP es posible instalarlos, aún así este método debe usarse en casos excepcionales que no sea posible hacerlo con Flatpak o Toolbox ya que podría comprometer la estabilidad del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rpm-ostree install &lt;package name&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rpm-ostree-install.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/upgrade-1_hu412c2cbe51e0ce4e5f6b662152396528_22474_2560x1440_fit_box_3.png" data-gallery="" title="Actualización"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/upgrade-1_hu412c2cbe51e0ce4e5f6b662152396528_22474_200x150_fit_box_3.png" width="200" height="150" alt="Actualización" title="Actualización"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/upgrade-2_hu6c41790167a0593e469e76a3a3719625_126188_2560x1440_fit_box_3.png" data-gallery="" title="Actualización"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/upgrade-2_hu6c41790167a0593e469e76a3a3719625_126188_200x150_fit_box_3.png" width="200" height="150" alt="Actualización" title="Actualización"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/upgrade-3_hu08f7bc5873f938f2af078c9fc9340331_38541_2560x1440_fit_box_3.png" data-gallery="" title="Actualización"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/upgrade-3_hu08f7bc5873f938f2af078c9fc9340331_38541_200x150_fit_box_3.png" width="200" height="150" alt="Actualización" title="Actualización"  class="lozad "></a></p>
<figcaption>Actualización</figcaption>
</figure>
</div>
<p>En caso de que una actualización produzca algún error se puede volver a la versión anterior con el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ rpm-ostree rollback&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rpm-ostree-rollback.sh</span>
    </div>
</div>
<h4 id="instalación-de-programas-gráficos">Instalación de programas gráficos</h4>
<p>Las aplicaciones de usuario gráficas se instalan con Flatpak y en el caso de GNOME con la aplicación Software. A medida que pasa el tiempo hay más programas disponibles en esta forma de distribuir software y muchos de los programas más comunes está disponibles como la colección ofimática <a href="https://www.libreoffice.org/">LibreOffice</a>, el reproductor multimedia <a href="https://www.videolan.org/vlc/">VLC</a>, el editor de texto avanzado <a href="https://code.visualstudio.com/">Visual Studio Code</a> o el entorno de desarrollo integrado <a href="https://www.jetbrains.com/idea/">IntelliJ</a>.</p>
<p>Con la aplicación de software es posible encontrar todo este software, instalarlo y desinstalarlo con un clic en un botón. Lo único necesario es añadir el repositorio <a href="https://flathub.org/">Flathub</a> como fuente de programas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/flathub-1_hu7b010a6c7dc81cb286a585cf91230867_95670_2560x1440_fit_box_3.png" data-gallery="" title="Repositorio Flathub"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/flathub-1_hu7b010a6c7dc81cb286a585cf91230867_95670_200x150_fit_box_3.png" width="200" height="150" alt="Repositorio Flathub" title="Repositorio Flathub"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/flathub-2_hu0c9ffa6531dce44b313e061f114c9251_30535_2560x1440_fit_box_3.png" data-gallery="" title="Repositorio Flathub"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/flathub-2_hu0c9ffa6531dce44b313e061f114c9251_30535_200x150_fit_box_3.png" width="200" height="150" alt="Repositorio Flathub" title="Repositorio Flathub"  class="lozad "></a></p>
<figcaption>Repositorio Flathub</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-1_hu454c37637f78c34af6781e781edc75bd_38613_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de software"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-1_hu454c37637f78c34af6781e781edc75bd_38613_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de software" title="Instalación de software"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-2_hu5be278704ac1e2552da4e93471377430_168992_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de software"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-2_hu5be278704ac1e2552da4e93471377430_168992_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de software" title="Instalación de software"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-3_hu8763285f2a4e46b3397677137d750403_76432_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de software"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-3_hu8763285f2a4e46b3397677137d750403_76432_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de software" title="Instalación de software"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-4_hu398d17e819a65e9b764fcb1a661abb71_80506_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de software"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/software-4_hu398d17e819a65e9b764fcb1a661abb71_80506_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de software" title="Instalación de software"  class="lozad "></a></p>
<figcaption>Instalación de software</figcaption>
</figure>
</div>
<p>Dos programas instalados como paquetes Flatpak.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/intellij_hud5d7e1f0b18a093b387b76218135f751_83421_2560x1440_fit_box_3.png" data-gallery="" title="Intellij IDEA"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/intellij_hud5d7e1f0b18a093b387b76218135f751_83421_200x150_fit_box_3.png" width="200" height="150" alt="Intellij IDEA" title="Intellij IDEA"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/visual-studio-code_hu14559c2a9aae3faed20e910c38bbe0c4_87736_2560x1440_fit_box_3.png" data-gallery="" title="Visual Studio Code"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/visual-studio-code_hu14559c2a9aae3faed20e910c38bbe0c4_87736_200x150_fit_box_3.png" width="200" height="150" alt="Visual Studio Code" title="Visual Studio Code"  class="lozad "></a></p>
<figcaption>Programas instalados como Flatpak</figcaption>
</figure>
</div>
<p>También es posible instalar el paquetes Flatpak desde la linea de comandos.</p>
<h4 id="uso-de-toolbox-programas-de-línea-de-comandos-en-contenedores">Uso de Toolbox, programas de línea de comandos en contenedores</h4>
<p>El resto de paquetes de línea de comandos se pueden instalar en contenedores con <a href="#ZgotmplZ">Toolbox</a> basados en <a href="https://podman.io/">podman</a> que es una alternativa compatible de <a href="https://www.docker.com/">Docker</a>. Lo especial de estos contenedores es que tiene acceso a la carpeta personal o directorio <em>home</em> del usuario de modo que pueden crear archivos o modificar los existentes en esta ubicación.</p>
<p>Destro de estos componentes se instalan los paquetes con el gestor de paquetes <em>dnf</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ toolbox run dnf search openjdk&#10;</span></span><span class="line"><span class="cl">Last metadata expiration check: <span class="m">5</span> days, 18:10:47 ago on Sun May <span class="m">10</span> 00:09:19 2020.&#10;</span></span><span class="line"><span class="cl"><span class="o">=======================</span> Name <span class="p">&amp;</span> Summary Matched: <span class="nv">openjdk</span> <span class="o">========================</span>&#10;</span></span><span class="line"><span class="cl">java-11-openjdk-demo.x86_64 : OpenJDK Demos <span class="m">11</span>&#10;</span></span><span class="line"><span class="cl">java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos <span class="m">8</span>&#10;</span></span><span class="line"><span class="cl">java-latest-openjdk-demo.x86_64 : OpenJDK Demos <span class="m">14</span>&#10;</span></span><span class="line"><span class="cl">java-11-openjdk-jmods.x86_64 : JMods <span class="k">for</span> OpenJDK <span class="m">11</span>&#10;</span></span><span class="line"><span class="cl">java-11-openjdk-src.x86_64 : OpenJDK Source Bundle <span class="m">11</span>&#10;</span></span><span class="line"><span class="cl">java-11-openjdk.x86_64 : OpenJDK Runtime Environment <span class="m">11</span>&#10;</span></span><span class="line"><span class="cl">java-11-openjdk.i686 : OpenJDK Runtime Environment <span class="m">11</span>&#10;</span></span><span class="line"><span class="cl">java-latest-openjdk-jmods.x86_64 : JMods <span class="k">for</span> OpenJDK <span class="m">14</span>&#10;</span></span><span class="line"><span class="cl">java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle <span class="m">8</span>&#10;</span></span><span class="line"><span class="cl">java-latest-openjdk-src.x86_64 : OpenJDK Source Bundle <span class="m">14</span>&#10;</span></span><span class="line"><span class="cl">....&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sudo dnf install java-11-openjdk.x86_64&#10;</span></span><span class="line"><span class="cl">$ java -version</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>toolbox-package-install.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/toolbox-1_hua1fe30103c61aec086ed268a611df081_23897_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de programas de línea de comandos"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/toolbox-1_hua1fe30103c61aec086ed268a611df081_23897_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de programas de línea de comandos" title="Instalación de programas de línea de comandos"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/toolbox-2_hu8ce579e6bb231f90e0a9b50c788452dd_17786_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de programas de línea de comandos"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/toolbox-2_hu8ce579e6bb231f90e0a9b50c788452dd_17786_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de programas de línea de comandos" title="Instalación de programas de línea de comandos"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/toolbox-3_huee9da92daa7873dda83bedb50fc6a455_29413_2560x1440_fit_box_3.png" data-gallery="" title="Instalación de programas de línea de comandos"><img src="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/images/toolbox-3_huee9da92daa7873dda83bedb50fc6a455_29413_200x150_fit_box_3.png" width="200" height="150" alt="Instalación de programas de línea de comandos" title="Instalación de programas de línea de comandos"  class="lozad "></a></p>
<figcaption>Instalación de programas de línea de comandos</figcaption>
</figure>
</div>
<p>Para no modificar el sistema base de Silverblue otra forma de instalar Java es con la utilidad <a href="https://sdkman.io/">SDKMAN</a> que además permite cambiar entre versiones fácilmente y tener acceso a diferentes implementaciones del JDK, entre otras utilidades instalables con esta herramienta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sdk list java&#10;</span></span><span class="line"><span class="cl">$ sdk install java 11.0.7-open&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sdk-usage.sh</span>
    </div>
</div>
<h3 id="conclusión">Conclusión</h3>
<p>Si tuviese que probar o usar otra distribución diferente Arch Linux probablemente la que elegiría sería Fedora Silverblue por los principios innovadores en las que está basada que proporcionan varias mejoras en puntos importantes sobre las distribuciones como las hemos conocido tradicionalmente. Igualmente permite tener el software actualizado, es también <em>rolling-release</em> y mejora la fiabilidad de las actualizaciones.</p>
<p>En estos vídeos se proporciona una introducción sobre esta distribución que quizá marque el camino de aquí en adelante para otras.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/BkrGij4LNC0" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/8b9sTXdQK5k" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://xermansoto.wordpress.com/2020/04/10/fedora-silverblue-31-review-after-3-months/">Fedora Silverblue 31 review (after 3 months)</a></li>
<li><a href="http://harrymichal.undo.it/posts/2020/a-little-collection-of-how-to-do-x-with-toolbox-on-fedora-silverblue/">A little collection of ‘How to do X with Toolbox on Fedora Silverblue’</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/</id>
        <title>Análisis y guía del juego de estrategia Frostpunk</title>
        <updated>2020-05-10T10:00:00+02:00</updated>
        <published>2020-05-10T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Frostpunk ha sido uno de los juegos con los que he disfrutado mucho de los pocos que he jugado hasta el momento en la PlayStation 4. Su historia diferente y el tener que tener que tomar decisiones difíciles para conseguir la supervivencia de la colonia lo hacen distinto a los muchos otros juegos disponibles. No es muy largo pero acabado activa nuevos modos de juego para seguir jugándolo.</strong></p>]]>
        <![CDATA[<p>Los juegos de estrategia no suelen abundar mucho en las consolas, el uso del mando no es lo ideal para este tipo de juegos al igual que ocurre en otros que son mejores con teclado y ratón. Pero hay algunos buenos juegos de estrategia, uno de ellos es <a href="https://www.igdb.com/games/frostpunk">Frostpunk</a> de <a href="https://www.igdb.com/companies/11-bit-studios">11 Bit Studios</a>.</p>
<p>La historia de Frostpunk es diferente a lo habitual, está basado en el acontecimiento de un cataclismo apocalíptico en una época alternativa pasada que ha hecho que las temperaturas hayan descendido significativamente hasta llegar al punto de congelación para el desarrollo de la vida tal y como la ha conocido la humanidad hasta ese momento. La humanidad se ha reducido a un grupo de humanos que ha de sobrevivir construyendo una nueva colonia alrededor de un generador alimentado con carbón que proporciona el calor para no perecer congelados. Se trata de un juego de construcción de ciudades, gestión de recursos y supervivencia con un árbol de investigaciones tecnológicas y leyes que proporcionan mejoras.</p>
<p>No es un juego complicado pero requiere plantear bien las prioridades y construcciones para conseguir llegar al final dado que como en este tipo de juegos los recursos son limitados o de lo contrario los colonos se rebelarán finalizando la partida con la expulsión del jefe de la colonia al que representamos en el juego.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/Frostpunk_hu989a3475c8ce18ca3b235d7f82841a38_566303_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla inicial"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/Frostpunk_hu989a3475c8ce18ca3b235d7f82841a38_566303_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial" title="Pantalla inicial"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-intro_huc23c8c27441bf92f1b40a6353a675eb6_275408_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla inicial"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-intro_huc23c8c27441bf92f1b40a6353a675eb6_275408_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial" title="Pantalla inicial"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-menu_hu4f41ef62db040772db5c7fc26f01a9b7_236205_2560x1440_fit_q90_box.jpg" data-gallery="" title="Menú"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-menu_hu4f41ef62db040772db5c7fc26f01a9b7_236205_200x150_fit_q90_box.jpg" width="200" height="113" alt="Menú" title="Menú"  class="lozad "></a></p>
<figcaption>Pantalla inicial y menú</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-cover_hu6930a25164d5836cc13208f8005de3ef_75871_2560x1440_fit_q90_box.jpg" data-gallery="" title="Portada del juego Frostpunk"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-cover_hu6930a25164d5836cc13208f8005de3ef_75871_200x150_fit_q90_box.jpg" width="113" height="150" alt="Portada del juego Frostpunk" title="Portada del juego Frostpunk"  class="lozad "></a></p>
<figcaption>Portada del juego Frostpunk</figcaption>
</figure>
</div>
<p>Frostpunk es un juego corto sabiendo cual es la estrategia para sobrevivir. En mi caso me ha gustado mucho y me he divertido bastante con él tomando las decisiones que finalmente me han permitido superar con éxito el juego. Una vez acabada el modo historia inicial se habilitan otros modos de juego que permiten rejugarlo durante más tiempo. Más recientemente también se ha publicado una expansión del juego <a href="https://www.frostpunkgame.com/">Frostpunk The last Autumn</a> ambientada en un punto anterior en la línea temporal de Frostpunk que permite conocer más detalles de esta historia.</p>
<p>Ha sido lanzado para PC y consolas, yo lo he jugado en la PlayStation 4. Los textos están en español pero los diálogos están en inglés. Es un juego del 2019 en consolas con lo que hasta pasado un tiempo no tendrá una oferta importante y de forma habitual, en uno de estos momentos se puede comprar por unos 20 € en la <a href="https://www.playstation.com/es-es/buy/playstation-store/">PlayStation Store</a> o físico en <a href="https://amzn.to/2flFhHA">Amazon</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">Desempaquetado de PlayStation 4 Slim de 1 TB</a></li>
</ul>
<div class="alert alert-warning">
    <h2>Anticipación del juego</h2>
    <p>Este artículo contiene información de estrategias para completar más fácilmente el juego, parte de la diversión de un juego es descubrir y superar los retos que se plantean por uno mismo. Sin embargo, algunos juegos son difíciles sin una pequeña ayuda que obliga a tener que dedicarles mucho más tiempo o a recomenzarlos.</p>
    <p>En algunos juegos el argumento es una de las partes más importantes. El texto del artículo no contiene información acerca del argumento del juego, de la mitad o del final, ni hace ningún <i>spoiler</i> por lo que lo puedes leer sin riesgo de conocer alguna parte del argumento de forma anticipada. Sin embargo, algunos enlaces del artículo a otras páginas y vídeos sí pueden contener información del argumento de modo que recomiendo consultar solo las partes del juego una vez superadas.</p>
</div>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="estrategia-inicial">Estrategia inicial</h3>
<p>Frostpunk es un juego de gestión de recursos en el que hay que ser previsor a las necesidades futuras para no malgastar tiempo esperando a tener los recursos necesarios. Hay que construir edificios por adelantado antes de que sean imprescindibles o acumular recursos para acometer la siguiente investigación en cuanto se pueda. De forma regular es aconsejable realizar guardados para poder volver a un punto anterior para poder reconducir la partida tomando otras decisiones.</p>
<p>Los primeros momentos son los más difíciles ya que los recursos son escasos tanto en materias primas como trabajadores e ingenieros. El primer objetivo es usar los trabajadores e ingenieros para conseguir los mínimos recursos que permitan construir los primeros edificios. Los recursos son carbón para alimentar el generador, madera y acero para las construcciones. Por otro, conseguir comida con puestos de cazadores.</p>
<ul>
<li><a href="https://frostpunk.fandom.com/wiki/Tutorial">Tutorial</a></li>
</ul>
<p>También hay que proporcionar una casa y atención médica a todos los colonos, de lo contrario aumentará el descontento y la esperanza. Por lo que hay que construir casas para todos los ciudadanos, uno o dos puestos médicos y un comedor. La forma de construir las casas es aconsejable construirlas agrupadas en un mismo sector del núcleo y dejando algunos huecos ya que avanzando el juego algunos edificios afectan a los habitantes cercanos de esas construcciones. Algunos edificios no es necesario que estén cerca del generador como los depósitos pero las cas de los colonos si, el espacio alrededor del generador es limitado por lo que hay que aprovecharlo para los edificios que sean necesario que tengan calor.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-1_hudeff90919c381f1ad0d2670020b63fb3_134664_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-1_hudeff90919c381f1ad0d2670020b63fb3_134664_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-2_hu801d4263bda60e0e02d2f00650f7a19e_185565_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-2_hu801d4263bda60e0e02d2f00650f7a19e_185565_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-3_hua4e7fb9115bb4c7e5abc325d8fa25b8f_197396_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-3_hua4e7fb9115bb4c7e5abc325d8fa25b8f_197396_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-4_hu49758d208f47a83f9a1672defeba21be_209231_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-4_hu49758d208f47a83f9a1672defeba21be_209231_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-5_hufd4c93260cf2681c92a72df327d52ff3_381485_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-5_hufd4c93260cf2681c92a72df327d52ff3_381485_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-6_hu4d3ced80063b49ba2c9d6e0e82459b78_181986_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-6_hu4d3ced80063b49ba2c9d6e0e82459b78_181986_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-7_huc8353fd93a34b09e26c061050dc62d34_302324_2560x1440_fit_q90_box.jpg" data-gallery="" title="Inicio"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-inicio-7_huc8353fd93a34b09e26c061050dc62d34_302324_200x150_fit_q90_box.jpg" width="200" height="113" alt="Inicio" title="Inicio"  class="lozad "></a></p>
<figcaption>Inicio</figcaption>
</figure>
</div>
<p>En el transcurso del juego los colonos realizarán algunas peticiones en las que podremos optar por varias respuestas, hacerles caso o ignorarlos. Dependiendo de la decisión habrá que construir algún edificio y dependiendo del cumplimiento de la promesa aumentará el descontento o bajará la esperanza. Aunque la decisión sea difícil no siempre hay que hacer atender a sus peticiones ya que los recursos son escasos.</p>
<p>La firma de leyes permite establecer políticas que proporcionan algunas ventajas como poder usar niños en algunas tareas. Son un árbol de desarrollo. Algunas son establecer turnos de trabajo nocturnos, proporcionar sopa en vez de raciones completas, construir un nevero para los colonos que perezcan o mejorar las atenciones médicas. Cada vez que se firma una ley hay que esperar un tiempo hasta poder firmar la siguiente, es aconsejable que cada vez que se pueda inmediatamente firmar la siguiente que proporcione la mayor ventaja que se considere sin embargo hay que tener en cuenta que algunas requieren construir algún edificio en un determinado tiempo, un día o dos, de modo que hay que tener preparados los recursos necesarios para poder construir esos edificios.</p>
<p>El otro árbol de desarrollo son las investigaciones proporcionadas por los talleres. Estos proporciona mejoras tecnológicas de caza, de poder construir nuevos edificios, avances para hacer más eficientes a los trabajadores, minas, construir autómatas o mejorar el generador. Inicialmente las más interesantes serán las dedicadas conseguir recursos. Los avances tecnológicos se dividen en niveles, no hace falta desarrollar todos los de un nivel siguiente pero cada nivel ha de ser investigado para tener acceso él.</p>
<p>En la fase inicial también será necesario construir un puesto de investigación para explorar los alrededores que proporcionarán detalles de la historia, conseguir recursos y nuevos colonos. Hay diferentes construcciones entre las que están las dedicadas a la gente como casas y que mejoran la esperanza, salud como puestos médicos y hospitales, los dedicados a recursos como comida y materias primas como carbón, madera y acero, finalmente los dedicados a tecnología como los talleres, factoría y calefactores.</p>
<h3 id="estrategia-juego-medio">Estrategia juego medio</h3>
<p>Una vez asegurada la obtención de recursos imprescindibles en la fase de juego medio los objetivos son mantener el descontento en niveles bajos y la esperanza en niveles altos de lo contrario será la causa de finalización del juego.</p>
<p>En esta fase los exploradores encontrarán nuevos colonos y proporcionará más trabajadores así como depósitos externos que proporcionan materias, una de ellas será la de los núcleos de vapor que permite construir autómatas en la factoría que los usan como recurso. Los autómatas permiten no tener que usar trabajadores o ingenieros en los edificios además de que son capaces de trabajar todo el día en vez de solo las horas de trabajo como los colonos y no les afectan las bajas temperaturas de las tormentas.</p>
<p>Dependiendo de las necesidades hay otros recursos que se consiguen con depósitos externos carbón, madera o acero hay que elegir uno de ellos ya que solo es posible construir dos depósitos externos y los núcleos de vapor solo es posible conseguirlos con uno de ellos y los autómatas son interesantes para emplearlos en las minas y edificios para conseguir recursos. Las exploraciones permite obtener más colonos pero hay que ser previsor y construir por adelantado las casas que sean necesarias para albergarlos o tener siempre algunas casas sobrantes más de las necesarias.</p>
<p>Algunos edificios que permiten tener controlado los niveles de descontento bajos y la esperanza alta son las zonas de peleas, las iglesias, la taberna y el importante templo con los custodios de la fe en la rama de propósito. Se tiene acceso a estos edificios promulgando sus respectivas leyes. En el árbol de leyes en un determinado momento se ha de optar por el árbol de la fe y esperanza o del orden que da acceso a un nuevo árbol de leyes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-1_hu13c013c9157e99432f0c74988e9c5b62_317245_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-1_hu13c013c9157e99432f0c74988e9c5b62_317245_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-2_hu37068a187ec0a4e97159140e69052ac1_355444_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-2_hu37068a187ec0a4e97159140e69052ac1_355444_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-3_hucbb7b583d933181efa0946610cff1c42_287601_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-3_hucbb7b583d933181efa0946610cff1c42_287601_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-4_hu503fa562284aae9d792325c826838196_360295_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-4_hu503fa562284aae9d792325c826838196_360295_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-5_hu66e60263e2f079b8bd5b55d8d9e2c8c1_336339_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-5_hu66e60263e2f079b8bd5b55d8d9e2c8c1_336339_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-6_huba75052dcf712cb9e76fc0323866eba3_344160_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-6_huba75052dcf712cb9e76fc0323866eba3_344160_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-7_hu8a6cd2c2a1ecf380498813fc749c8425_336752_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-7_hu8a6cd2c2a1ecf380498813fc749c8425_336752_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-8_hu2bca18dd54be684785c4ffd560c3b27c_347665_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-8_hu2bca18dd54be684785c4ffd560c3b27c_347665_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-9_hude2e9fb6f121a046fcd3b3dc6e76d867_303158_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-9_hude2e9fb6f121a046fcd3b3dc6e76d867_303158_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-10_hu7f61d7a07318112582dffa1158714429_336811_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-10_hu7f61d7a07318112582dffa1158714429_336811_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-11_hu15e98e402976f6cc055b3430e2a527b5_300672_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-11_hu15e98e402976f6cc055b3430e2a527b5_300672_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-12_hu7deb38ffd8cd4f09003a17b400b2ca20_329229_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de tecnologías"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-tecnologias-12_hu7deb38ffd8cd4f09003a17b400b2ca20_329229_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de tecnologías" title="Árbol de tecnologías"  class="lozad "></a></p>
<figcaption>Árbol de tecnologías</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-leyes-1_hu64cc2eabc82524f6ba6ca172e7a54392_240981_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de leyes"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-leyes-1_hu64cc2eabc82524f6ba6ca172e7a54392_240981_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de leyes" title="Árbol de leyes"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-leyes-2_hu8a98f20784b52937bcc687a2cad6ed31_252945_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de leyes"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-leyes-2_hu8a98f20784b52937bcc687a2cad6ed31_252945_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de leyes" title="Árbol de leyes"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-leyes-3_hu0135da2a22c8796151f00ad565823446_217115_2560x1440_fit_q90_box.jpg" data-gallery="" title="Árbol de leyes"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-arbol-leyes-3_hu0135da2a22c8796151f00ad565823446_217115_200x150_fit_q90_box.jpg" width="200" height="113" alt="Árbol de leyes" title="Árbol de leyes"  class="lozad "></a></p>
<figcaption>Árbol de leyes</figcaption>
</figure>
</div>
<p>En esa fase el objetivo es acumular recursos sobre todo carbón y comida para hacer frente a la tormenta del final. Será necesario construir depósitos grandes para tener capacidad para acumularlos. También es aconsejable los cuatro talleres que se pueden construir para realizar las investigaciones más rápido, y estar continuamente tiendo alguna investigación en marcha incluso teniendo que realizar turnos nocturnos. El uso de estos turnos nocturnos aumentarán el descontento que se mantendrá controlador con las iglesias, tabernas y templo.</p>
<p>La comida se consigue de dos formas con los cazadores o con los invernaderos. En mi opinión es mejor construir puestos de cazadores ya que estos permiten conseguir niveles de comida parecidos que los invernaderos pero no requieren emplear núcleos de vapor para construir los edificios que están mejor empleados para construir autómatas. Será necesario construir unos 5 o 6 puestos de cazadores.</p>
<p>Las minas de carbón, de acero y perforadoras permiten acceder a recursos en cantidades que podrían considerarse ilimitados de modo que es necesario construir estos edificios y sus respectivos avances con mayor eficiencia y poner en ellos autómatas también investigando sus mejoras para hacerlos más eficientes. Se pueden construir hasta tres minas de carbón, dos perforadoras para conseguir madera y dos minas de acero con lo que son necesarios unos siete autómatas. Alguno más si se quieren para algún puesto médico pero no son imprescindibles para estas tareas.</p>
<p>También será necesario realizar alguna investigación para las mejoras del generador y calderas de vapor para que afecte a áreas más alejadas de núcleo, con más eficiencia para soportar alguna tormenta que baja las temperaturas de modo que las casas soporten el frío. Hay que investigar las mejoras que den acceso a poder construir barracones y casas con mejores aislamientos y modernizar progresivamente los hogares a casas y las minas a minas avanzadas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-decisiones-1_hu1b4e4eac37e4ef8b34ab52c36dfee71f_427219_2560x1440_fit_q90_box.jpg" data-gallery="" title="Algunas decisiones difíciles"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-decisiones-1_hu1b4e4eac37e4ef8b34ab52c36dfee71f_427219_300x250_fit_q90_box.jpg" width="300" height="169" alt="Algunas decisiones difíciles" title="Algunas decisiones difíciles"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-decisiones-2_hue38b7380749e44c096b4af70fa3f2701_412482_2560x1440_fit_q90_box.jpg" data-gallery="" title="Algunas decisiones difíciles"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-decisiones-2_hue38b7380749e44c096b4af70fa3f2701_412482_300x250_fit_q90_box.jpg" width="300" height="169" alt="Algunas decisiones difíciles" title="Algunas decisiones difíciles"  class="lozad "></a></p>
<figcaption>Algunas decisiones difíciles</figcaption>
</figure>
</div>
<h3 id="estrategia-juego-final">Estrategia juego final</h3>
<p>El juego final consiste en una tormenta que dura una semana y en la que hay que disponer del suficiente carbón y comida acumulada en los depósitos grandes. Ya que en la tormenta final los puestos de cazadores no pueden salir a obtener comida y en los peores momentos de la tormenta los trabajadores dejarán sus puestos de trabajo. Tener autómatas permite seguir pudiendo conseguir carbón.</p>
<p>Dado que el generador a máximo rendimiento consume carbón es necesario tener carbón acumulado. Con los recursos acumulados es sencillo soportar la tormenta final. En los peores momentos de la misma será necesario activar la opción de sobrerendimiento del generador cuando se observe que las casas tienen el icono de congelación, hay que vigilar la presión del generador para que no llegue al máximo o de lo contrario explotará siendo esta otra forma de fracaso en el juego.</p>
<p>Durante las exploraciones habrá que tomar la decisión de dejar abandonados a algunos colonos en vez de acogerlos en la colonia dado que no hay casas, comida o recursos para todos los colonos, un objetivo del juego puede ser intentar salvar a los máximos colonos que se pueda.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-end_huedef7c278b65a9d246ecf054c7423ca4_66329_2560x1440_fit_q90_box.jpg" data-gallery="" title="Supervivencia"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-end_huedef7c278b65a9d246ecf054c7423ca4_66329_300x250_fit_q90_box.jpg" width="300" height="169" alt="Supervivencia" title="Supervivencia"  class="lozad "></a></p>
<figcaption>Supervivencia</figcaption>
</figure>
</div>
<h3 id="nuevos-modos-de-juego">Nuevos modos de juego</h3>
<p>Al finalizar el modo historia se habilitan otros modos de juego y escenarios con otras formas de supervivencia que le dan al juego mas rejugabilidad.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-escenarios_hu05927b4cd0df335ded6bf30fa445ac74_233580_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escenarios"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-escenarios_hu05927b4cd0df335ded6bf30fa445ac74_233580_200x150_fit_q90_box.jpg" width="200" height="113" alt="Escenarios" title="Escenarios"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-nuevo-hogar_hu15644256dabca885442bf37f7b7da062_381836_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escenario Nuevo hogar, historia principal"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-nuevo-hogar_hu15644256dabca885442bf37f7b7da062_381836_200x150_fit_q90_box.jpg" width="200" height="113" alt="Escenario Nuevo hogar, historia principal" title="Escenario Nuevo hogar, historia principal"  class="lozad "></a></p>
<figcaption>Escenarios</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-las-arcas_hue56a0973c544e934930fde609b95cec0_371929_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escenario Las arcas"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-las-arcas_hue56a0973c544e934930fde609b95cec0_371929_200x150_fit_q90_box.jpg" width="200" height="113" alt="Escenario Las arcas" title="Escenario Las arcas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-refugiados_hu96d8990277a5762d38ac26753260e506_378016_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escenario Refugiados"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-refugiados_hu96d8990277a5762d38ac26753260e506_378016_200x150_fit_q90_box.jpg" width="200" height="113" alt="Escenario Refugiados" title="Escenario Refugiados"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-la-caida-de-invernia_hu5897b6755ccf64d125f0c6ec14d5b03e_381709_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escenario La caída de invernia"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-ecenario-la-caida-de-invernia_hu5897b6755ccf64d125f0c6ec14d5b03e_381709_200x150_fit_q90_box.jpg" width="200" height="113" alt="Escenario La caída de invernia" title="Escenario La caída de invernia"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-modo-infinito_hu1edf7d22ce4da4d95c4c225050580e76_233688_2560x1440_fit_q90_box.jpg" data-gallery="" title="Modo infinito"><img src="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/images/frostpunk-modo-infinito_hu1edf7d22ce4da4d95c4c225050580e76_233688_200x150_fit_q90_box.jpg" width="200" height="113" alt="Modo infinito" title="Modo infinito"  class="lozad "></a></p>
</figure>
</div>
<h3 id="frostpunk-wiki">Frostpunk Wiki</h3>
<p>En la <a href="https://frostpunk.fandom.com/wiki/Frostpunk_Wiki">Wiki de Frostpunk de Fandom</a> están recogidos con detalle de los construcciones, recursos, tecnologías, leyes y escenarios. Esta información resulta muy útil para elegir la que consideremos la mejor estrategia o revisar si la que utilizamos no es del todo efectiva.</p>
<ul>
<li><a href="https://frostpunk.fandom.com/wiki/Exploration">Exploración</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Scenarios">Escenarios</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Buildings">Construcciones</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Technology_Tree">Árbol de tecnologías</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Book_of_Laws">Libro de leyes</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Resources">Recursos</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Citizens">Ciudadanos</a></li>
<li><a href="https://frostpunk.fandom.com/wiki/Cities">Ciudades</a></li>
</ul>
<h3 id="banda-sonora-original">Banda sonora original</h3>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/uLF6VFME2jc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.gamespot.com/reviews/frostpunk-review-damned-if-you-do-damned-if-you-do/1900-6416899/">Frostpunk Review: Damned If You Do, Damned If You Don&rsquo;t</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="juegos"/>
            
        
    </entry>
    
</feed>